<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main" xml:id="_DaQWFXG" coord="1,80.70,104.54,428.08,13.41;1,80.70,121.48,257.20,13.41">Enabling New Flexibility in the SUNDIALS Suite of Nonlinear and Differential/Algebraic Equation Solvers</title>
				<funder>
					<orgName type="full">U.S. Department of Energy Oice of Science</orgName>
				</funder>
				<funder>
					<orgName type="full">U.S. Department of Energy, Oice of Science, Oice of Advanced Scientiic Computing Research</orgName>
				</funder>
				<funder>
					<orgName type="full">U.S. Department of Energy</orgName>
				</funder>
				<funder ref="#_eyyew39">
					<orgName type="full">Exascale Computing Project</orgName>
				</funder>
				<funder>
					<orgName type="full">National Nuclear Security Administration</orgName>
				</funder>
				<funder ref="#_MUuJaMK">
					<orgName type="full">Lawrence Livermore National Laboratory</orgName>
				</funder>
				<funder>
					<orgName type="full">Scientiic Discovery through Advanced Computing (SciDAC) Program</orgName>
				</funder>
				<funder ref="#_YZYKCnu">
					<orgName type="full">Lawrence Livermore National Security</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher>Association for Computing Machinery (ACM)</publisher>
				<availability status="unknown"><p>Copyright Association for Computing Machinery (ACM)</p>
				</availability>
				<date type="published" when="2022-09-10">2022-09-10</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName coords="1,80.70,147.41,95.80,10.74"><forename type="first">David</forename><forename type="middle">J</forename><surname>Gardner</surname></persName>
							<email>gardner48@llnl.gov</email>
							<idno type="ORCID">0000-0002-7993-8282</idno>
						</author>
						<author>
							<persName coords="1,80.70,161.36,110.64,10.74"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Reynolds</surname></persName>
							<email>reynolds@smu.edu</email>
							<idno type="ORCID">0000-0002-0911-7841</idno>
						</author>
						<author>
							<persName coords="1,80.70,175.31,117.75,10.74"><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
							<email>woodward6@llnl.gov</email>
							<idno type="ORCID">0000-0002-6502-8659</idno>
						</author>
						<author>
							<persName coords="1,80.70,189.26,76.57,10.74"><forename type="first">Cody</forename><forename type="middle">J</forename><surname>Balos</surname></persName>
							<email>balos1@llnl.gov</email>
							<idno type="ORCID">0000-0001-9138-0720</idno>
						</author>
						<author>
							<affiliation key="aff0">
								<note type="raw_affiliation">Lawrence Livermore National Laboratory, USA</note>
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<note type="raw_affiliation">Southern Methodist University, USA</note>
								<orgName type="institution">Southern Methodist University</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<note type="raw_affiliation">Lawrence Livermore National Laboratory, USA</note>
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<note type="raw_affiliation">Lawrence Livermore National Laboratory, USA</note>
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
								<address>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<note type="raw_affiliation">Center for Applied Scientiic Computing, Lawrence Livermore National Laboratory, 7000 East Ave, L-561, Livermore, CA 94550</note>
								<orgName type="department">Center for Applied Scientiic Computing</orgName>
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
								<address>
									<addrLine>7000 East Ave</addrLine>
									<postCode>L-561, 94550</postCode>
									<settlement>Livermore</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<note type="raw_affiliation">Department of Mathematics, Southern Methodist University, P.O. Box 750156, Dallas, TX 75275</note>
								<orgName type="department">Department of Mathematics</orgName>
								<orgName type="institution">Southern Methodist University</orgName>
								<address>
									<postBox>P.O. Box 750156</postBox>
									<postCode>75275</postCode>
									<settlement>Dallas</settlement>
									<region>TX</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main" xml:id="_78j7KSk" coord="1,80.70,104.54,428.08,13.41;1,80.70,121.48,257.20,13.41">Enabling New Flexibility in the SUNDIALS Suite of Nonlinear and Differential/Algebraic Equation Solvers</title>
					</analytic>
					<monogr>
						<title level="j" type="main" xml:id="_36uHjJB">ACM Transactions on Mathematical Software</title>
						<title level="j" type="abbrev">ACM Trans. Math. Softw.</title>
						<idno type="ISSN">0098-3500</idno>
						<idno type="eISSN">1557-7295</idno>
						<imprint>
							<publisher>Association for Computing Machinery (ACM)</publisher>
							<biblScope unit="volume">48</biblScope>
							<biblScope unit="issue">3</biblScope>
							<biblScope unit="page" from="1" to="24"/>
							<date type="published" when="2022-09-10" />
						</imprint>
					</monogr>
					<idno type="MD5">AFAA06E8D5F2533C263E2BEC75234764</idno>
					<idno type="DOI">10.1145/3539801</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-03-13T15:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term xml:id="_a6ZXcuC">Numerical software</term>
					<term xml:id="_UMZE2Rs">object-oriented design</term>
					<term xml:id="_yVkKE9k">time integration</term>
					<term xml:id="_PeXBGgV">nonlinear solvers</term>
					<term xml:id="_vw8affg">highperformance computing</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0" xml:id="_gmvTY3b"><p xml:id="_vbgfc82"><s xml:id="_xdxqszz" coords="1,80.70,208.71,450.78,8.73;1,80.70,219.67,332.29,8.73">In recent years, the SUite of Nonlinear and DIferential/ALgebraic equation Solvers (SUNDIALS) has been redesigned to better enable the use of application-speciic and third-party algebraic solvers and data structures.</s><s xml:id="_5f7xNua" coords="1,415.22,219.67,116.08,8.73;1,80.70,230.63,450.78,8.73;1,80.70,241.59,161.37,8.73">Throughout this work, we have adhered to speciic guiding principles that minimized the impact to current users while providing maximum lexibility for later evolution of solvers and data structures.</s><s xml:id="_n6cy4gw" coords="1,244.17,241.59,287.13,8.73;1,80.70,252.55,333.11,8.73">The redesign was done through the addition of new linear and nonlinear solvers classes, enhancements to the vector class, and the creation of modern Fortran interfaces.</s><s xml:id="_Erwcxmz" coords="1,416.37,252.55,115.16,8.73;1,80.70,263.51,450.61,8.73;1,80.70,274.47,60.22,8.73">The vast majority of this work has been performed łbehind-the-scenes, ž with minimal changes to the user interface and no reduction in solver capabilities or performance.</s><s xml:id="_HEc6jN4" coords="1,143.71,274.47,387.82,8.73;1,80.70,285.43,399.10,8.73">These changes allow SUNDIALS users to more easily utilize external solver libraries and create highly customized solvers, enabling greater lexibility on extreme-scale, heterogeneous computational architectures.</s></p><p xml:id="_ybFjfWz"><s xml:id="_g945pFx" coords="1,80.70,300.70,450.60,8.73;1,80.70,311.98,129.50,8.41">CCS Concepts: • Mathematics of computing → Solvers; Ordinary diferential equations; Diferential algebraic equations; Nonlinear equations.</s></p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<facsimile>
		<surface n="1" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="2" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="3" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="4" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="5" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="6" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="7" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="8" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="9" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="10" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="11" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="12" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="13" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="14" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="15" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="16" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="17" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="18" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="19" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="20" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="21" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="22" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
		<surface n="23" ulx="0.0" uly="0.0" lrx="612.0" lry="792.0"/>
	</facsimile>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1" xml:id="_xnBennT">INTRODUCTION</head><p xml:id="_VQYXmPU"><s xml:id="_KumaD4r" coords="1,80.40,373.69,450.91,9.70;1,80.70,385.65,450.61,9.70;1,80.40,397.60,63.31,9.70">The SUite of Nonlinear and DIferential/ALgebraic equation Solvers (SUNDIALS) <ref type="bibr" coords="1,409.38,373.69,16.29,9.70" target="#b40">[41]</ref> is a collection of software packages designed to solve time-dependent and nonlinear equations on large-scale, high performance computing (HPC) systems.</s><s xml:id="_3N7Grxu" coords="1,146.34,397.60,384.96,9.70;1,80.70,409.56,450.79,9.70;1,80.70,421.51,283.17,9.70">The packages have evolved from a multi-decade history of highly eicient solution packages for ordinary diferential equations (ODEs) <ref type="bibr" coords="1,257.01,409.56,15.12,9.70" target="#b12">[13,</ref><ref type="bibr" coords="1,274.66,409.56,11.50,9.70" target="#b37">38,</ref><ref type="bibr" coords="1,288.70,409.56,11.34,9.70" target="#b38">39]</ref>, diferential-algebraic equations (DAEs) <ref type="bibr" coords="1,470.17,409.56,14.99,9.70" target="#b60">[61]</ref>, nonlinear systems <ref type="bibr" coords="1,115.80,421.51,15.07,9.70" target="#b15">[16,</ref><ref type="bibr" coords="1,133.36,421.51,11.30,9.70" target="#b17">18]</ref>, and sensitivity analysis enabled integrators <ref type="bibr" coords="1,331.25,421.51,15.06,9.70" target="#b52">[53,</ref><ref type="bibr" coords="1,348.80,421.51,11.30,9.70" target="#b68">69]</ref>.</s><s xml:id="_nt5dPua" coords="1,366.35,421.51,164.95,9.70;1,80.70,433.47,450.61,9.70;1,80.70,445.42,450.61,9.70;1,80.70,457.38,451.70,9.70;1,80.70,469.33,345.23,9.70">The SUNDIALS codes take advantage of the many innovations this history and the methods community have delivered in terms of adaptive time step and adaptive order integrators for ODEs and DAEs <ref type="bibr" coords="1,276.53,445.42,15.12,9.70" target="#b16">[17,</ref><ref type="bibr" coords="1,294.22,445.42,11.50,9.70" target="#b18">19,</ref><ref type="bibr" coords="1,308.29,445.42,11.50,9.70" target="#b35">36,</ref><ref type="bibr" coords="1,322.37,445.42,11.50,9.70" target="#b36">37,</ref><ref type="bibr" coords="1,336.44,445.42,11.50,9.70" target="#b46">47,</ref><ref type="bibr" coords="1,350.52,445.42,11.34,9.70" target="#b49">50]</ref>, the combination of Krylov and Newton methods for eicient nonlinear solvers <ref type="bibr" coords="1,238.60,457.38,14.94,9.70" target="#b13">[14,</ref><ref type="bibr" coords="1,256.03,457.38,11.43,9.70" target="#b14">15,</ref><ref type="bibr" coords="1,269.96,457.38,11.21,9.70" target="#b59">60]</ref>, methods and software for sensitivity analysis <ref type="bibr" coords="1,472.18,457.38,14.94,9.70" target="#b20">[21,</ref><ref type="bibr" coords="1,489.61,457.38,11.43,9.70" target="#b31">32,</ref><ref type="bibr" coords="1,503.53,457.38,11.43,9.70" target="#b52">53,</ref><ref type="bibr" coords="1,517.46,457.38,11.21,9.70" target="#b55">56]</ref>, and efective solver controls for time integrators and nonlinear solvers <ref type="bibr" coords="1,365.08,469.33,56.63,9.70">[20, 40, 42ś44]</ref>.</s><s xml:id="_2uH9c7p" coords="1,428.42,469.33,102.88,9.70;1,80.70,481.29,450.61,9.70;1,80.70,493.24,451.70,9.70;1,80.70,505.20,197.03,9.70">Over the last two decades the SUNDIALS codes have been used in a number of applications on small to large-scale computing systems <ref type="bibr" coords="1,80.70,493.24,126.24,9.70">[22, 28, 29, 33ś35, 52, 57, 74, 77]</ref> as well as in other mathematical libraries and frameworks [3ś5, <ref type="bibr" coords="1,462.99,493.24,11.41,9.70" target="#b54">55,</ref><ref type="bibr" coords="1,476.62,493.24,11.41,9.70" target="#b61">62,</ref><ref type="bibr" coords="1,490.25,493.24,11.41,9.70" target="#b67">68,</ref><ref type="bibr" coords="1,503.88,493.24,11.41,9.70" target="#b75">76,</ref><ref type="bibr" coords="1,517.51,493.24,11.17,9.70" target="#b76">77]</ref>, garnering more than 120,000 downloads in 2021.</s></p><p xml:id="_SehcbN9"><s xml:id="_qdUcKrU" coords="1,90.66,517.15,440.64,9.70;1,80.70,529.11,450.61,9.70;1,80.70,541.06,106.83,9.70">During this time, the science simulated as well as the software needed to carry out those simulations have grown in complexity as HPC architectures have transitioned from simplistic homogeneous systems to heterogeneous systems (e.g., CPU+GPU).</s><s xml:id="_VnvNvBW" coords="1,190.05,541.06,341.26,9.70">With the trend toward heterogeneity, the object-oriented design of the SUNDIALS</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1" xml:id="_vtdAuhP">CVODE and CVODES</head><p xml:id="_Cj9FYAy"><s xml:id="_MP5caSX" coords="2,80.70,493.84,370.78,9.70;2,258.04,512.04,97.62,10.64;2,80.33,529.03,342.14,11.08;2,424.17,530.32,108.31,9.78;2,80.70,540.98,62.86,10.36;2,145.26,542.36,2.24,9.70">CVODE targets stif and nonstif initial value problems (IVPs) for ODEs in the explicit form ẏ = f (t, y), y(t 0 ) = y 0 , where t is the independent variable (e.g., time), the dependent variable is y ∈ R N , ẏ denotes dy/dt, and f : R × R N → R N .</s><s xml:id="_7Ew5RsM" coords="2,150.72,542.36,380.58,9.70;2,80.70,554.31,190.95,9.70">CVODE uses variable order and variable step size implicit linear multistep methods in the ixed-leading-coeicient form <ref type="bibr" coords="2,203.91,554.31,15.00,9.70" target="#b18">[19,</ref><ref type="bibr" coords="2,221.41,554.31,12.81,9.70" target="#b46">47]</ref> given by</s></p><formula xml:id="formula_0" coords="2,222.55,571.97,167.98,30.45">K 1 i=0 α n,i y n-i + h n K 2 i=0 β n,i f (t n-i , y n-i ) = 0,</formula><p xml:id="_Pf26BRD"><s xml:id="_z9GNqj9" coords="2,80.33,608.84,450.97,10.56;2,80.70,620.80,450.60,10.56;2,80.70,632.76,278.43,9.70">where y n is a computed approximation to y(t n ), h n = t nt n-1 is the time step size, the values K 1 and K 2 are determined by the method type and order of accuracy, and the coeicients α n,i and β n,i are uniquely determined by the method type and order as well as the recent step size history.</s><s xml:id="_5FTmbnf" coords="2,361.61,632.76,169.69,9.70;2,80.70,644.71,452.14,9.70">Adams-Moulton methods of order 1 to 12 are provided for non-stif problems and Backward Diferentiation Formulas (BDF) of order 1 to 5 for stif cases.</s></p><p xml:id="_2hSPYdT"><s xml:id="_fwQGGDH" coords="3,80.35,107.24,452.05,9.70;3,80.33,119.19,173.89,9.82">Additionally, CVODE supports projection methods <ref type="bibr" coords="3,293.64,107.24,15.12,9.70" target="#b29">[30,</ref><ref type="bibr" coords="3,311.37,107.24,12.88,9.70" target="#b69">70]</ref> for integrating ODE systems with constraints i.e., where the solution must satisfy д(t, y) = 0.</s></p><p xml:id="_6Jvf544"><s xml:id="_uygymGR" coords="3,90.66,131.15,440.64,9.70;3,80.33,141.73,266.57,11.08;3,247.25,159.33,119.02,10.64">CVODES <ref type="bibr" coords="3,130.37,131.15,16.40,9.70" target="#b68">[69]</ref> is an extension of CVODE for conducting forward or adjoint sensitivity analysis of ODE IVPs with respect to the parameters p ∈ R N p i.e., problems of the form, ẏ = f (t, y, p), y(t 0 ) = y 0 (p).</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2" xml:id="_RHVAUEm">IDA and IDAS</head><p xml:id="_uWFzFww"><s xml:id="_qkHnfpB" coords="3,80.70,196.36,313.28,9.70;3,225.13,212.58,161.57,10.64">IDA targets the more general case of DAE and implicit ODE IVPs in the form F (t, y, ẏ) = 0, y(t 0 ) = y 0 , ẏ(t 0 ) = ẏ0 .</s></p><p xml:id="_hQzEUWE"><s xml:id="_KVzAjaq" coords="3,80.40,228.97,450.91,9.70;3,80.70,240.93,90.79,9.82">The state is evolved using variable order and variable step size BDF methods in ixed-leading-coeicient form <ref type="bibr" coords="3,80.70,240.93,16.36,9.70" target="#b11">[12]</ref> of order q = 1, . . .</s><s xml:id="_wKXtye2" coords="3,173.23,240.93,47.81,9.70;3,269.37,250.87,3.95,6.82;3,266.14,275.11,10.92,6.82;3,279.66,261.57,67.11,10.64">, 5 given by, q i=0 α n,i y n-i = h n ẏn .</s></p><p xml:id="_tJ9vZ6Z"><s xml:id="_Ef3GjcA" coords="3,80.35,284.09,450.95,9.70;3,80.70,296.04,224.50,9.70;3,208.44,312.27,194.95,10.64">As with CVODES and CVODE, IDAS is an extension to IDA with forward and adjoint sensitivity analysis capabilities for DAE and implicit ODE IVPs of the form F (t, y, ẏ, p) = 0, y(t 0 ) = y 0 (p), ẏ(t 0 ) = ẏ0 (p).</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3" xml:id="_4pqAvdQ">ARKODE</head><p xml:id="_cEwNa5z"><s xml:id="_M7Xf67t" coords="3,80.40,349.29,282.53,9.70">The ARKODE package targets ODE IVPs in the linearly-implicit form</s></p><formula xml:id="formula_1" coords="3,240.58,365.52,130.75,10.64">M (t ) ẏ = f (t, y), y(t 0 ) = y 0 ,</formula><p xml:id="_Rkn5GEb"><s xml:id="_xvdZFZ2" coords="3,80.33,380.54,144.57,11.08;3,229.62,381.91,134.49,9.70">where for any t, M (t ) : R N → R N is a nonsingular linear operator.</s><s xml:id="_hvDTegb" coords="3,367.14,381.91,164.43,9.70;3,80.70,393.87,452.14,9.70">In many uses cases M (t ) is the identity matrix while in inite element computations it is an N × N mass matrix (or a function for its action on a vector).</s><s xml:id="_gRNj8Rp" coords="3,80.35,405.82,450.95,9.70;3,81.49,418.06,106.71,10.28">ARKODE supplies two classes of methods where the right-hand side function may be additively partitioned as f (t, y) = f 1 (t, y) + f 2 (t, y).</s></p><p xml:id="_uQrzm2Y"><s xml:id="_q8KAzEF" coords="3,90.66,429.73,255.28,10.56;3,348.34,428.36,4.12,6.82;3,355.50,429.73,175.80,9.70;3,80.33,441.69,217.40,10.56;3,300.09,440.31,2.21,6.82;3,306.26,441.69,226.13,9.70;3,80.35,453.64,450.96,9.70;3,80.70,465.60,67.81,9.70">For stif, nonstif, and mixed stif/nonstif problems, where f 1 = f E may contain the nonstif components, which will be integrated using an explicit method, and f 2 = f I the stif components, which will be integrated implicitly, ARKODE provides explicit, implicit, and implicit-explicit (IMEX) additive Runge-Kutta methods <ref type="bibr" coords="3,462.63,453.64,10.25,9.70" target="#b5">[6,</ref><ref type="bibr" coords="3,475.19,453.64,6.78,9.70" target="#b6">7,</ref><ref type="bibr" coords="3,484.27,453.64,11.41,9.70" target="#b49">50,</ref><ref type="bibr" coords="3,497.98,453.64,12.74,9.70" target="#b50">51]</ref> with the general form</s></p><formula xml:id="formula_2" coords="3,129.53,481.02,218.26,30.23">z i = y n-1 + h n i-1 j=1 A E i, j f E (t n-1 + c E j h n , z j ) + h n i j=1 A I i, j</formula><p xml:id="_eNKvVcy"><s xml:id="_3HK2Nuh" coords="3,351.61,488.32,5.83,9.70;3,359.37,491.25,33.45,10.28;3,393.59,489.09,2.21,6.82;3,393.52,495.80,2.09,6.82;3,396.83,490.97,75.26,10.56">f I (t n-1 + c I j h n , z j ), i = 1, . . .</s><s xml:id="_PF3uevW" coords="3,473.83,491.35,10.35,9.32">, s,</s></p><formula xml:id="formula_3" coords="3,127.22,515.02,270.67,62.88">y n = y n-1 + h n s i=1 b E i f E (t n-1 + c E j h n , z i ) + b I i f I (t n-1 + c I j h n , z i ) , ỹn = y n-1 + h n s i=1 bE i f E (t n-1 + c E j h n , z i ) + bI i f I (t n-1 + c I j h n , z i ) .</formula><p xml:id="_PCsUKQx"><s xml:id="_heYVEx7" coords="3,80.70,582.14,87.52,12.47;3,168.67,583.31,8.01,6.41;3,177.97,585.17,3.13,9.33;3,183.50,582.14,106.69,12.47;3,290.64,583.31,8.01,6.41;3,299.94,585.17,3.13,9.33;3,305.43,583.42,225.87,11.08;3,80.70,596.67,398.45,10.64">Here, f E (t, y) = M (t ) -1 f E (t, y) and f I (t, y) = M (t ) -1 f I (t, y) convert the IVP from linearly implicit to explicit form, z i are internal method stages, and ỹn is an embedded solution for temporal error estimation.</s><s xml:id="_TaytkDc" coords="3,481.65,596.75,49.84,9.70;3,80.70,609.31,135.03,9.70;3,215.57,607.83,3.43,6.41;3,222.80,607.94,26.20,10.36;3,250.19,609.31,9.12,9.70;3,259.90,607.83,3.43,6.41;3,267.13,607.94,18.08,10.36;3,286.40,609.31,8.30,9.70;3,295.40,607.83,3.43,6.41;3,302.62,607.94,18.08,10.36;3,321.89,606.66,52.96,12.35;3,378.68,609.31,152.62,9.70;3,80.70,621.27,232.59,9.70">The number of stages s and the coeicients A * ∈ R s×s , b * ∈ R s , c * ∈ R s , and b * ∈ R s are given by the explicit and implicit Butcher tables that deine the method and its embedding.</s><s xml:id="_UWG9aqm" coords="3,90.66,633.22,361.24,10.56;3,454.15,631.85,3.68,6.82;3,459.10,633.22,72.21,9.70;3,80.70,645.18,176.06,10.56;3,259.23,643.81,3.58,6.82;3,264.36,645.18,147.04,10.56">For multirate problems, the right-hand side may be split into łslowž components, f 1 = f S , advanced with a large step H n and łfastž components, f 2 = f F , advanced with time step, h n ≪ H n .</s><s xml:id="_QR7UQYH" coords="3,413.88,645.18,117.42,9.70;4,80.70,107.24,385.46,9.70">For such problems, ARKODE provides multirate ininitesimal step [65ś67] and multirate ininitesimal GARK <ref type="bibr" coords="4,409.38,107.24,16.50,9.70" target="#b63">[64]</ref> methods.</s><s xml:id="_MaHbAET" coords="4,468.67,107.24,62.63,9.70;4,80.70,119.19,450.60,10.56;4,80.70,131.15,127.76,9.70">These methods utilize an s-stage Runge-Kutta method where the stages z i are computed by solving (with a possibly diferent method) the auxiliary ODE IVP</s></p><formula xml:id="formula_4" coords="4,197.80,147.16,217.88,27.58">v (θ ) = ∆c i f F (T i-1 + ∆c i θ, v (θ )) + r (θ ), θ ∈ [0, H n ], v (0) = z i-1 ,</formula><p xml:id="_G65Jag9"><s xml:id="_ZrZrvaV" coords="4,80.33,183.35,25.06,9.70">where</s></p><formula xml:id="formula_5" coords="4,107.08,183.35,121.30,10.56">T i = t n + c i H n , ∆c i = c i -c i-1</formula><p xml:id="_vbbv5k3"><s xml:id="_AwE6uFS" coords="4,228.88,183.35,266.73,9.70;4,497.87,181.97,34.53,11.93;4,80.80,195.30,37.17,9.82">, and r (θ ) is a łforcing functionž constructed from evaluations of f S (T j , z j ), j = 1, . . .</s><s xml:id="_Q65NbGT" coords="4,119.70,195.30,237.29,9.70">, i, that propagates information from the slow time scale.</s><s xml:id="_nsKrtCb" coords="4,359.86,195.30,171.81,9.70;4,80.70,207.26,120.43,10.56">The fast IVP solution is used for the new internal stage i.e., z i = v (H n ).</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4" xml:id="_UgwmJ4a">KINSOL</head><p xml:id="_sVVkrVE"><s xml:id="_wD664un" coords="4,80.70,244.85,363.89,9.70">Finally the KINSOL package solves nonlinear systems in root-inding or ixed-point form,</s></p><formula xml:id="formula_6" coords="4,252.96,262.52,278.34,9.82">F (u) = 0 and G (u) = u<label>(1)</label></formula><p xml:id="_sMnB4XH"><s xml:id="_HRy56ze" coords="4,80.70,278.82,114.81,11.08;4,197.20,278.82,183.88,11.08;4,382.79,280.20,2.24,9.70">respectively, where u ∈ R N , and the functions F and G map R N → R N .</s><s xml:id="_sCzuvJJ" coords="4,388.12,280.20,143.44,9.70;4,80.70,292.15,452.14,9.70">For the root-inding case, KINSOL provides inexact and modiied Newton methods <ref type="bibr" coords="4,275.77,292.15,14.94,9.70" target="#b24">[25,</ref><ref type="bibr" coords="4,293.19,292.15,12.77,9.70" target="#b58">59]</ref> which may optionally utilize a line search strategy <ref type="bibr" coords="4,514.39,292.15,14.76,9.70" target="#b26">[27]</ref>.</s></p><p xml:id="_7KkEpGQ"><s xml:id="_RWmGyMQ" coords="4,80.70,304.11,276.18,9.70">For general ixed-point systems and systems with the special form</s></p><formula xml:id="formula_7" coords="4,359.54,302.63,172.86,11.31">F (u) = Lu -N (u) ⇒ G (u) = u -L -1 F (u),</formula><p xml:id="_9zJdkMQ"><s xml:id="_XXtB7xE" coords="4,80.33,316.06,450.98,9.70;4,80.70,328.02,353.14,10.56">where L is a nonsingular linear operator (an N × N matrix or a function for its action on a vector) and N is (in general) nonlinear, KINSOL implements ixed-point and Picard iterations u n+1 = G (u n ).</s><s xml:id="_UmF8HqR" coords="4,436.33,328.02,94.97,9.70;4,80.70,339.97,375.11,9.70">The convergence of the iteration may be signiicantly accelerated by optionally applying Anderson's method <ref type="bibr" coords="4,427.94,339.97,10.37,9.70" target="#b0">[1,</ref><ref type="bibr" coords="4,440.81,339.97,11.25,9.70" target="#b74">75]</ref>.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5" xml:id="_TtkYVjk">Integrator Nonlinear Systems</head><p xml:id="_NQtsmQK"><s xml:id="_fG2uYmV" coords="4,80.35,377.57,450.95,9.70;4,80.70,389.52,90.13,9.70">At each time step the implicit integration methods in CVODE(S), ARKODE, and IDA(S) must solve one or more nonlinear systems i.e.,</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head xml:id="_25wsMUf">CVODE: y</head><formula xml:id="formula_8" coords="4,193.62,407.20,224.76,47.74">n -h n β n,0 f (t n , y n ) -a n = 0, ARKODE: z i -h n A I i,i f I (t n-1 + c I j h n , z i ) -a i = 0, and IDA: F t n , y n , h -1 n q i=0 α n,i y n-i = 0.</formula><p xml:id="_ZMrns3j"><s xml:id="_dxxZPX6" coords="4,80.33,460.94,287.42,10.03">where a * is comprised of known data from prior time steps or stages.</s><s xml:id="_gzDgFF3" coords="4,370.38,460.94,160.92,9.70;4,80.70,472.90,450.61,9.70;4,80.70,484.85,300.89,9.70">In adjoint sensitivity computations the same nonlinear systems are solved in the backward problem while forward sensitivity computations require solving an expanded nonlinear system that includes sensitivity equations.</s><s xml:id="_vequyNg" coords="4,384.08,484.85,147.22,9.70;4,80.70,496.81,450.60,9.70;4,80.70,508.76,127.60,9.70">In all cases, these nonlinear systems can be viewed as generic root-inding or generic ixed-point problems and are solved using many of the same methods employed by KINSOL.</s></p><p xml:id="_79chvUY"><s xml:id="_zQjvrtv" coords="4,90.66,520.72,440.90,9.70;4,80.70,532.67,450.61,9.70;4,80.70,544.63,75.92,9.70">Note that in the forward sensitivity case CVODES and IDAS utilize the strategy discussed in <ref type="bibr" coords="4,457.69,520.72,16.22,9.70" target="#b55">[56]</ref> where a block diagonal approximation of the combined system Jacobian is used when solving the larger nonlinear system with Newton's method.</s><s xml:id="_9JKmMar" coords="4,159.10,544.63,372.44,9.70;4,80.70,556.58,159.07,9.70">This decoupling enables reusing the ODE/DAE system Jacobian without additional matrix factorizations or preconditioner setups.</s><s xml:id="_37cUVpw" coords="4,242.27,556.58,289.23,9.70;4,80.70,568.54,421.75,9.70">CVODES and IDAS leverage this structure to utilize the same nonlinear solvers and linear solver interfaces employed by the non-sensitivity-enabled versions of the integrators.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3" xml:id="_ZPNvVJm">SUNDIALS STRUCTURE</head><p xml:id="_zA2pYUF"><s xml:id="_ZrrRRJV" coords="4,80.40,606.13,450.90,9.70;4,80.70,618.09,134.35,9.70">To implement the above methods for integrating ODEs and DAEs or solving nonlinear systems, one must be able to perform the following actions:</s></p><p xml:id="_tnv7yan"><s xml:id="_axe7hvR" coords="4,90.55,632.90,280.04,9.70">(1) Compute vector operations e.g., add vectors, compute norms, etc.</s></p><p xml:id="_KJ4THeZ"><s xml:id="_C9jvfsJ" coords="4,90.55,644.86,300.30,9.70">(2) Solve the nonlinear systems that arise in implicit integration methods.</s></p><p xml:id="_nQG4drc"><s xml:id="_YZevNgG" coords="5,90.55,107.24,440.99,9.70;5,105.11,119.19,63.35,9.70">(3) Solve the linear systems that arise within nonlinear solvers or linearly-implicit ODEs (i.e., mass matrix linear systems).</s><s xml:id="_FxgegWf" coords="5,90.55,131.15,440.75,9.70;5,105.11,143.10,95.96,9.70">(4) Compute matrix operations e.g., to explicitly construct the linear systems when necessary or to compute matrix-vector products.</s><s xml:id="_J58H3De" coords="5,80.40,157.33,450.90,9.70;5,80.70,169.29,450.60,9.70;5,80.70,181.24,35.01,9.70">These shared requirements across the packages lead directly to an updated SUNDIALS design, based on the existing N_Vector class and the new SUNMatrix, SUNLinearSolver, and SUNNonlinearSolver classes shown in Figure <ref type="figure" coords="5,108.92,181.24,3.39,9.70" target="#fig_0">1</ref>.</s><s xml:id="_wtnZqJC" coords="5,118.20,181.24,413.11,9.70;5,80.70,193.20,175.60,9.70">These classes deine abstract interfaces for performing vector and matrix operations as well as solving linear and nonlinear systems, respectively.</s><s xml:id="_aqtdgTv" coords="5,258.79,193.20,272.71,9.70;5,80.70,357.04,450.60,9.70;5,80.70,368.99,257.65,9.70">All of the packages and the solver interfaces depend on the vector  interface; however, connections between the other classes depend on the particular derived class and use case e.g., matrix-free linear solvers may accept a NULL matrix object.</s></p><p xml:id="_BmUcf6t"><s xml:id="_BV7JPZh" coords="5,90.66,380.95,440.64,9.70;5,80.70,392.90,205.80,9.70">This object-oriented design encapsulates implementation-speciic details behind a set of well deined abstract interfaces for performing mathematical operations.</s><s xml:id="_eWCyhQr" coords="5,288.97,392.90,242.33,9.70;5,80.70,404.86,450.61,9.70;5,80.70,416.81,262.50,9.70">This encapsulation enables writing the SUNDIALS packages purely in terms of generic operations on objects, making them agnostic to the user's particular choice of data structures/layout, method of parallelization, algebraic solvers, etc.</s><s xml:id="_TDuKKWE" coords="5,345.68,416.81,185.62,9.70;5,80.70,428.77,285.73,9.70">Moreover, the design provides lexibility, eases the addition of new features, and maximizes the reuse of shared code.</s><s xml:id="_9XyQpMf" coords="5,368.92,428.77,162.38,9.70;5,80.70,440.73,450.86,9.70;5,80.70,452.68,152.58,9.70">With the new class interfaces discussed in this paper, SUNDIALS packages more seamlessly work with other libraries that provide complementary capabilities for scientiic simulations.</s><s xml:id="_SnbeSzM" coords="5,235.75,452.68,295.74,9.70;5,80.70,464.64,450.60,9.70;5,80.70,476.59,74.69,9.70">For example, SUNDIALS can interoperate with discretization and solver libraries as long as class implementations are provided for interfacing to other library's data structures and, if necessary, solvers.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1" xml:id="_nV4zKeR">Previous SUNDIALS Interfaces</head><p xml:id="_NRTy5vS"><s xml:id="_dRhtEmC" coords="5,80.22,513.63,451.34,9.70;5,80.70,525.58,165.07,9.70">While the vector class has long been a feature of SUNDIALS, this object-oriented approach was not originally applied to matrices or algebraic solvers.</s><s xml:id="_5gRhHEK" coords="5,248.45,525.58,282.86,9.70;5,80.70,537.54,228.35,9.70">Earlier versions of SUNDIALS did clearly separate the linear solvers and matrices from the integrators and nonlinear solvers.</s><s xml:id="_jGqNqEK" coords="5,311.55,537.54,220.01,9.70;5,80.70,549.49,43.91,9.70">However, these interfaces sufered from three primary challenges.</s><s xml:id="_ckAWTkg" coords="5,127.09,549.49,405.31,9.70;5,80.70,561.45,334.15,9.70">First, each SUNDIALS package deined its own unique interface to each linear solver implementation, leading to signiicant code duplication and an unnecessary maintenance burden.</s><s xml:id="_8XpFTRN" coords="5,417.52,561.45,113.78,9.70;5,80.70,573.40,450.61,9.70;5,80.70,585.36,227.52,9.70">Second, since each package had a separate linear solver API, it was not possible to provide a custom or third-party linear solver that could be immediately utilized by all the SUNDIALS packages.</s><s xml:id="_R6A5Fn2" coords="5,310.71,585.36,220.59,9.70;5,80.70,597.31,269.74,9.70">For example, a linear solver written for CVODE could not be used by ARKODE without writing additional interface code.</s><s xml:id="_b6CAzQr" coords="5,352.92,597.31,178.38,9.70;5,80.70,609.27,450.61,9.70;5,80.70,621.22,246.73,9.70">Lastly, providing the interface functions and performing some computations required directly accessing private data within the packages, which hindered the ability of the packages to evolve without breaking user code.</s></p><p xml:id="_KyMGkAq"><s xml:id="_N6pudYf" coords="5,90.66,633.18,440.64,9.70;5,80.70,645.13,47.69,9.70">Unlike the linear solvers, earlier versions of SUNDIALS did not separate the nonlinear solvers from the integrators.</s><s xml:id="_Xkqv9cp" coords="5,130.87,645.13,400.62,9.70;6,80.70,107.24,184.84,9.70">While the integrator-speciic nonlinear systems could be written in a generic form, the nonlinear solvers were embedded within the integrators.</s><s xml:id="_NftptJR" coords="6,267.92,107.24,263.39,9.70;6,80.70,119.19,450.61,9.70;6,80.70,131.15,219.53,9.70">As such, each package implemented its own nonlinear solvers and did not provide a means for interfacing with external or user-deined nonlinear solvers leading to duplicated code and inconsistent solver options between the packages.</s><s xml:id="_36fCRTG" coords="6,302.72,131.15,228.59,9.70;6,80.70,143.10,421.53,9.70">Moreover, the lack of a shared nonlinear solver interface across the integration packages limited their lexibility and increased the software maintenance burden.</s></p><p xml:id="_VwgzHqN"><s xml:id="_esvdD3V" coords="6,90.66,155.06,440.83,9.70;6,80.70,167.01,450.61,9.70;6,80.70,178.97,47.53,9.70">To address the challenges presented by the old linear solver interfaces and the absence of a nonlinear solver interface, we completely redesigned the handling of matrices, linear solvers, and nonlinear solvers throughout SUNDIALS.</s><s xml:id="_rMex2ND" coords="6,130.72,178.97,173.17,9.70">Our speciic goals in this redesign were to:</s></p><p xml:id="_wa9kNTB"><s xml:id="_fcgRaqY" coords="6,96.17,193.35,435.39,9.70;6,105.11,205.30,106.88,9.70">• Collapse the separate package-speciic linear solver interfaces into a single generic interface, thereby removing redundant code.</s><s xml:id="_E4dwWjq" coords="6,80.70,441.80,451.70,9.70;6,80.45,453.75,450.85,9.70;6,80.33,465.71,144.56,9.70">Note the base class VMT includes pure virtual functions for which a derived class must provide an implementation, virtual functions the derived class may override, and optional functions that, if non-NULL, the SUNDIALS packages will utilize to improve performance.</s><s xml:id="_8PXtjaM" coords="6,227.39,465.71,303.90,9.70;6,80.70,477.66,133.10,9.70">Thus, the base class pure virtual functions deine the required minimum set of operations for derived classes.</s></p><p xml:id="_W9V5cWA"><s xml:id="_wAuFd9H" coords="6,90.66,489.62,440.64,9.70;6,80.70,501.57,272.05,9.70">Base class constructors are provided to aid in creating derived classes that are responsible for data allocations and other setup e.g., attaching method implementations to the VMT.</s><s xml:id="_nTDkrtC" coords="6,355.14,501.57,176.16,9.70;6,80.70,513.53,255.93,9.70;6,80.35,597.24,450.95,9.70;6,80.70,609.20,102.81,9.70">In the linear solver case, a function to create a derived class could be implemented approximately as follows Additionally, base class methods are provided to copy the VMT when cloning objects thus ensuring the method pointers are set correctly.</s><s xml:id="_5TjvWRT" coords="6,186.01,609.20,345.29,9.70;6,80.45,621.15,450.85,9.70;6,80.70,633.11,99.97,9.70">The base constructors and utility methods enable the introduction of new specialized virtual and optional methods aimed at increasing the capability and/or performance of the class with minimal impact on current users.</s><s xml:id="_vFT8dr6" coords="6,183.15,633.11,349.25,9.70;6,80.70,645.06,378.79,9.70">Furthermore, when combined with the new Fortran interfaces discussed in Section 7, these methods enable the creation of custom SUNDIALS class implementations from Fortran.</s></p><p xml:id="_yfpBBfY"><s xml:id="_arkKhCM" coords="7,80.40,122.18,450.90,9.70;7,80.70,134.14,450.61,9.70;7,80.70,146.09,163.16,9.70">The SUNDIALS vector class has served an invaluable role in allowing existing codes to rapidly utilize SUNDIALS integrators and solvers, since users needed only to provide an N_Vector implementation to wrap and operate on application-speciic data structures.</s><s xml:id="_j2rNZv4" coords="7,247.34,146.09,283.96,9.70;7,80.33,158.05,450.97,9.70;7,80.45,170.00,452.38,9.70">Over time SUNDIALS has been progressively updated to provide a wider set of N_Vector implementations than the original serial and MPI-parallel versions, and now includes vectors based on OpenMP, Pthreads, CUDA, HIP, SYCL, and RAJA for various forms of on-node parallelism.</s><s xml:id="_pja2h95" coords="7,80.35,181.96,450.95,9.70;7,80.70,193.91,239.27,9.70">Additionally, implementations that wrap vector objects from PETSc, hypre, and Trilinos have been added to streamline interfacing with other mathematical libraries.</s><s xml:id="_3Af8A7N" coords="7,323.35,193.91,207.95,9.70;7,80.70,205.87,450.79,9.70;7,80.70,217.82,413.88,9.70">However, as hardware has advanced and become more heterogeneous, the required set of vector operations remained static, and there was not a native vector implementation that supported collecting independent vectors into a single object for partitioning data.</s><s xml:id="_shNeHYw" coords="7,497.08,217.82,34.22,9.70;7,80.70,229.78,211.03,9.70">Thus we have extended the vector class in two distinct ways:</s></p><p xml:id="_qngY67f"><s xml:id="_T8VQ5cB" coords="7,90.55,244.13,441.85,9.70;7,105.11,256.09,393.33,9.70">(1) Expanded the set of vector methods to include operations that reduce the number of kernel launches, reduce memory accesses, increase arithmetic intensity, and/or minimize parallel communication.</s></p><p xml:id="_pMspKuF"><s xml:id="_rcGMrQ2" coords="7,90.55,268.04,442.44,9.70;7,105.11,280.00,426.19,9.70;7,105.11,291.95,133.32,9.70">(2) Added a łmany-vectorž implementation of the vector base class that enables combining diferent independent vector instances, each using potentially diferent parallelization approaches targeting distinct pieces of hardware, into a single vector.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1" xml:id="_eXrdjs7">New Vector Operations</head><p xml:id="_Y2Wdf3c"><s xml:id="_944mwxw" coords="7,80.40,329.10,450.90,9.70;7,80.45,341.06,74.20,9.70">Throughout a simulation using SUNDIALS, there exist numerous locations that use the same sets of repeated vector operations.</s><s xml:id="_rzjRCtQ" coords="7,157.15,341.06,374.15,9.70;7,80.70,353.01,92.26,9.70">Each of these operations over a vector of length N requires O(N ) loating-point operations and memory accesses.</s><s xml:id="_VvFEpNj" coords="7,175.72,353.01,355.58,9.70;7,80.70,364.97,450.60,9.70;7,80.70,376.92,83.61,9.70">Additionally, for accelerator-based implementations, each vector operation requires a separate kernel launch, and for MPI-based parallel vectors each dot product or norm-like operation requires one MPI_Allreduce call.</s><s xml:id="_Axs3W8k" coords="7,166.79,376.92,364.50,9.70;7,80.70,388.88,450.86,9.70;7,80.70,400.83,441.63,9.70">While the total loating-point work of these sequences of vector operations has remained unchanged, we have now reduced these auxiliary costs (memory accesses, kernel launches, or MPI reductions) by creating a set of łfusedž operations that each combine a speciic sequence of operations into a single routine.</s></p><p xml:id="_uYzDjZT"><s xml:id="_A2N3e24" coords="7,192.06,425.08,27.94,8.05">Table <ref type="table" coords="7,213.86,425.08,3.07,8.05">1</ref>.</s><s xml:id="_NMDT6EK" coords="7,224.48,425.08,195.22,8.05">Subset of optional fused and vector array operations.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head xml:id="_B3g7hF6">Function Description</head><p xml:id="_eZgtUvA"><s xml:id="_5gPuyd2" coords="7,98.77,474.09,237.63,6.00;7,203.48,483.06,45.06,6.00">int N_VLinearCombination ( int n , realtype * c , N_Vector * X , N_Vector z )</s></p><formula xml:id="formula_9" coords="7,98.77,466.10,398.10,109.90">z = n-1 i=0 c i X i int N_VScaleAddMulti ( int n , realtype * a , N_Vector x , N_Vector * Y , N_Vector * Z ) Z i = a i x + Y i for i = 0, . . . , n -1 int N_VDotProdMulti ( int n , N_Vector x , N_Vector * Y , realtype * d ) d i = x • Y i for i = 0, . . . , n -1 int N_VLinearSumVectorArray ( int n , realtype a , N_Vector * X , realtype b , N_Vector * Y , N_Vector * Z ) Z i = a X i + b Y i for i = 0, . . . , n -1</formula><p xml:id="_7DU9Qmh"><s xml:id="_ZzFQMAN" coords="7,90.66,597.25,217.05,9.70">We group these new operations into two categories.</s><s xml:id="_a287r9q" coords="7,310.44,597.25,221.96,9.70;7,80.70,609.21,230.29,9.70">The irst set, shown in the irst three rows of Table <ref type="table" coords="7,525.44,597.25,3.48,9.70">1</ref>, fuses standard vector operations into a single operation.</s><s xml:id="_wCds7c9" coords="7,313.47,609.21,217.84,9.70;7,80.70,621.17,409.89,9.82">The N_VLinearCombination and N_VScaleAddMulti operations replace multiple calls to N_VLinearSum, which computes z = ax + by, with a single call.</s><s xml:id="_9agmwdK" coords="7,493.26,621.17,39.13,9.70;7,80.70,633.12,450.61,9.70;7,80.70,645.08,42.03,9.70">Similarly, N_VDotProdMulti combines the reductions from several N_VDotProd calls, which compute x • y, into a single reduction.</s><s xml:id="_MrdwdyU" coords="7,125.84,645.08,405.72,9.70;8,80.70,107.24,82.77,9.70">The second category is composed of operations on collections of vectors that arise in sensitivity analysis simulations.</s><s xml:id="_cU8rxtf" coords="8,165.87,107.24,365.43,9.70;8,80.70,119.19,112.21,9.70">An example is shown in the last row of Table <ref type="table" coords="8,347.96,107.24,4.54,9.70">1</ref> where the linear sum of multiple vectors are computed in one operation.</s></p><p xml:id="_Nn2NDUX"><s xml:id="_cMzKFwX" coords="8,90.66,131.15,440.64,9.70;8,80.70,143.10,450.61,9.70;8,80.70,155.06,63.24,9.70">To minimize the requirements when supplying a custom N_Vector implementation, all of these new operations are optional as the base class implementation calls the pre-existing sequence of required operations to achieve the same result.</s><s xml:id="_5HMaSWG" coords="8,146.44,155.06,385.05,9.70;8,80.70,167.01,450.60,9.70;8,80.70,178.97,170.86,9.70">Thus, the operations can be enabled or disabled at runtime by setting the VMT function pointer to the implementation deined function or to NULL, thereby allowing the user to implement only the operations that are most impactful for their use case.</s><s xml:id="_SQ3yaT3" coords="8,254.05,178.97,277.51,9.70;8,80.70,190.92,364.05,9.70">More details on the fused operations and the full set of vector array operations that have been added to the class can be found in <ref type="bibr" coords="8,328.72,190.92,15.00,9.70" target="#b44">[45,</ref><ref type="bibr" coords="8,346.21,190.92,95.11,9.70">Sections 6.1.2 and 6.1.3]</ref>.</s></p><p xml:id="_PjNQmmk"><s xml:id="_947WjV4" coords="8,90.66,202.88,440.65,9.70;8,80.70,214.83,450.80,9.70;8,80.70,226.79,37.75,9.70">In standalone CPU-based vector tests, we have found that fused streaming operations are beneicial in cases that work on many vectors e.g., with high-order integrators and more than approximately 1,000 unknowns per MPI task.</s><s xml:id="_J9uDXz8" coords="8,120.95,226.79,410.35,9.70;8,80.70,238.74,356.10,9.70">Fused reduction operations arise in orthogonalization methods in iterative methods and are beneicial for any number of vectors and with less than approximately 130K unknowns per MPI task.</s><s xml:id="_NH4Chb4" coords="8,438.86,238.74,92.45,9.70;8,80.70,250.70,304.26,9.70">We note these numbers are machine dependent and will certainly change as architectures advance.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2" xml:id="_3deSs65">Many-vector</head><p xml:id="_27ytcTp"><s xml:id="_cR4sHXd" coords="8,80.40,289.44,451.10,9.70;8,80.70,301.40,450.61,9.70;8,79.57,313.35,170.30,9.70">To enable SUNDIALS packages to leverage heterogeneous computational architectures, increase the ability for asynchronous computation, and enable greater lexibility for multiphysics applications, we have created two łmany-vectorž N_Vector implementations.</s><s xml:id="_nZ2M339" coords="8,252.37,313.35,278.93,9.70;8,80.70,325.31,275.91,9.70">These vectors are a software layer to enable operating on a collection of distinct vector instances as if they were a single cohesive vector.</s><s xml:id="_XghDMZX" coords="8,359.10,325.31,172.19,9.70;8,80.70,337.26,399.49,9.70">The many-vector implementations do not directly manipulate vector data; all computations are carried out by the underlying vector instances.</s><s xml:id="_DHMD3nP" coords="8,482.63,337.26,48.67,9.70;8,80.70,349.22,450.60,9.70;8,80.70,361.17,388.31,9.70">As such, the many-vectors are designed to provide users with more lexibility in the data layout or placement on parallel and heterogeneous architectures, and, in turn, over which resources perform calculations on this data.</s><s xml:id="_DfjXe4y" coords="8,471.34,361.17,61.06,9.70;8,80.70,373.13,191.42,9.70">At a high-level, the design is based on the following objectives:</s></p><p xml:id="_up5tumC"><s xml:id="_saG8pWm" coords="8,96.17,389.15,435.13,9.70;8,105.11,401.11,426.20,9.70;8,103.98,413.06,224.83,9.70">• Provide a clean mechanism for users to partition their simulation data among disparate computational resources (diferent nodes, diferent compute architectures, diferent types of memory, etc.), enabling łhybridž computations on heterogeneous architectures.</s><s xml:id="_RGJUQ7d" coords="8,96.17,425.02,436.23,9.70;8,105.11,436.97,426.20,9.70;8,105.11,448.93,260.55,9.70">• Facilitate the use of a separate MPI communicator for the collection than is used for any of its subvectors, allowing the higher-level communicator to act as an MPI łintercommunicatorž enabling coupled simulations between codes that utilize disjoint MPI communicator groups.</s><s xml:id="_ARwcRjN" coords="8,368.63,448.93,162.67,9.70;8,105.11,460.88,426.19,9.70;8,105.11,472.84,426.20,9.70;8,105.11,484.79,49.27,9.70">From a multiphysics perspective, these disjoint groups can correspond to fully-functioning MPI-based simulations, each using its own standard MPI intracommunicator ś the intercommunicator enables messages to be sent between these disjoint simulations.</s><s xml:id="_aAbmGFd" coords="8,96.17,496.75,435.37,9.70">• Allow computationally eicient user-supplied routines to perform operations on the relevant subvectors.</s></p><p xml:id="_p6C93YT"><s xml:id="_brJyut2" coords="8,96.17,508.70,436.23,9.70;8,105.11,520.66,426.38,9.70;8,105.11,532.61,71.85,9.70">• Enable the creation of new SUNDIALS class implementations that leverage the data partitioning (e.g., partitioned integration methods, block (non)linear solvers, etc.) to improve performance for particular application types.</s><s xml:id="_aagXffw" coords="8,96.17,544.57,322.01,9.70">• Ensure seamless functionality with any existing SUNDIALS package or class.</s></p><p xml:id="_t3drT7F"><s xml:id="_xTD6EeC" coords="8,90.66,560.59,440.64,9.70;8,80.70,572.55,450.60,9.70;8,80.70,584.50,266.67,9.70">We envision two non-mutually-exclusive scenarios where the many-vector capability will beneit users (though other use cases are possible): partitioning data between diferent computing resources and combining distinct MPI intracommunicators together into a multiphysics simulation.</s></p><p xml:id="_qcRzQpU"><s xml:id="_GkTBhDU" coords="8,90.66,596.46,440.64,9.70;8,80.70,608.41,376.00,9.70">For example, in the data partitioning case on a hybrid CPU+GPU system, a user would create subvectors using existing N_Vector constructors, some of which may be CPU-speciic and others GPU-speciic.</s><s xml:id="_5R3YGWU" coords="8,459.19,608.41,72.11,9.70;8,80.70,620.37,434.72,9.70">In this scenario, it is assumed that all MPI-aware subvectors have been constructed using the same MPI intercommunicator.</s><s xml:id="_Ynq5M5e" coords="8,517.91,620.37,13.39,9.70;8,80.70,632.32,450.60,9.70;8,80.70,644.28,450.61,9.70;9,80.70,107.24,235.04,9.70">We note that some of these vectors may represent łindependentž portions of the data (e.g., for processes that are not coupled between nodes); these can be constructed out of MPI-unaware N_Vectors, thereby allowing corresponding subvector operations to avoid communication altogether.</s><s xml:id="_KHvDdXy" coords="9,318.24,107.24,213.26,9.70;9,80.70,119.19,452.14,9.70">Once all subvectors have been constructed, the user then combines them together into a single many-vector by passing the subvectors to the many-vector constructor.</s><s xml:id="_ExFyNZF" coords="9,80.22,131.15,451.08,9.70;9,80.70,143.10,450.86,9.70;9,80.70,155.06,42.17,9.70">When performing problem-speciic routines (ODE RHS, DAE/nonlinear residual evaluation), the user may then access speciic subvectors to retrieve and ill data, potentially copying data between accelerator and host memory as needed.</s><s xml:id="_BPW8EuD" coords="9,125.36,155.06,274.96,9.70">An illustration of this use case for reactive low is given in Figure <ref type="figure" coords="9,393.49,155.06,3.41,9.70" target="#fig_1">2</ref>.</s></p><p xml:id="_MnhYDt3"><s xml:id="_hmXHkRs" coords="9,90.66,167.01,441.74,9.70;9,80.70,178.97,450.60,9.70;9,80.70,190.92,244.73,9.70">The multiphysics use case corresponds to users who wish to combine separate simulations together (e.g., for luid-structure interaction or atmosphere-ocean coupling in climate simulations) where it is assumed that MPI-aware subvectors have diferent MPI communicators.</s><s xml:id="_jj9pGAX" coords="9,328.69,190.92,202.62,9.70;9,80.70,202.88,450.61,9.70;9,80.70,214.83,450.61,9.70;9,80.70,226.79,207.87,9.70">Here, we expect that the user will (a) create the MPI intercommunicator that connects the distinct intracommunicators together, and (b) handle communication operations between intracommunicators to couple the physical models together in their problem-deining nonlinear residual or ODE right-hand side routines.</s><s xml:id="_Asp4rc5" coords="9,291.05,226.79,240.26,9.70;9,80.70,238.74,265.19,9.70">As in the data partitioning case, the user creates each of the subvectors and the intercommunicator that couples these together.</s><s xml:id="_DEQbEUe" coords="9,348.22,238.74,183.08,9.70;9,80.70,250.70,343.32,9.70">The unifying many-vector is then constructed by providing the subvectors and intercommunicator to the many-vector constructor.</s></p><p xml:id="_4DcANRC"><s xml:id="_ev7Ehm2" coords="9,90.66,262.66,442.17,9.70">We further note that combinations of these two use cases are also possible via the many-vector interface.</s><s xml:id="_KMKHMQ7" coords="9,80.35,274.61,451.21,9.70;9,80.70,286.57,194.22,9.70">Additionally, a many-vector may be constructed using many-vectors as subvectors, thereby allowing a hierarchy of communication patterns within a simulation.</s></p><p xml:id="_RkUJHZV"><s xml:id="_UsWKSrZ" coords="9,90.66,298.52,440.90,9.70;9,80.70,310.48,450.60,9.70;9,80.70,322.43,438.98,9.70">To achieve the above objectives, the MPIManyVector implementation of an N_Vector consists of a relatively lean data structure comprised primarily of an array of subvectors, the global vector length (the combined length of all subvectors for use in RMS-like norms), and an MPI communicator for global reduction operations.</s><s xml:id="_cPhJfUh" coords="9,522.78,322.43,8.53,9.70;9,80.70,334.39,452.29,9.70;9,80.70,346.34,310.94,9.70">In support of these many-vector modules a new required operation, N_VGetLength, and a new optional operation, N_VGetCommunicator, have been added to the set of vector operations.</s><s xml:id="_cGmdhn4" coords="9,394.12,346.34,137.18,9.70;9,80.70,358.30,450.61,9.70;9,80.70,370.25,450.61,9.70;9,80.40,382.21,147.24,9.70">Additionally, to minimize parallel communication with the MPIManyVector, we have expanded the set of optional vector operations to include local reduction kernels so that norm-like calculations may be performed with only a single MPI_Allreduce call (instead of one for each subvector).</s><s xml:id="_64DmWhK" coords="9,230.53,382.21,300.77,9.70;9,80.70,394.16,450.61,9.70;9,80.70,406.12,55.14,9.70">These methods compute only the portions of a reduction operation that are local to a given subvector and MPI rank, and their results are combined by the MPIManyVector into the overall result.</s><s xml:id="_B7gAqXQ" coords="9,138.33,406.12,392.97,9.70;9,80.70,418.07,450.80,9.70;9,80.70,430.03,259.91,9.70">As these local operations are optional, if they are not supplied by a user-provided subvector, then the MPIManyVector implementation will instead compute the inal result using the original (required) vector operations (with the corresponding increase in MPI reductions).</s><s xml:id="_hnYfjG8" coords="10,90.66,107.24,440.64,9.70;10,80.70,119.19,86.77,9.70">For example consider the weighted root-mean-square (WRMS) norm of a vector x with weight vector w, both of length N , given by</s></p><formula xml:id="formula_10" coords="10,248.90,139.21,114.52,30.34">∥x ∥ wrms = 1 N N -1 i=0 (w i x i ) 2 .</formula><p xml:id="_G8gaEQb"><s xml:id="_NaPJpZB" coords="10,80.70,177.54,450.61,10.56;10,80.70,189.91,85.03,10.56;10,176.44,188.19,11.61,6.82;10,176.80,194.99,10.76,6.82;10,190.25,189.91,12.68,10.56">In the many-vector case, x and w above are replaced with X and W comprised of s subvectors of length N j with the total length N s = s-1 j=0 N j .</s><s xml:id="_J3RCx4A" coords="10,205.42,189.91,136.44,9.70">The WRMS norm is now given as</s></p><formula xml:id="formula_11" coords="10,229.78,215.84,149.61,31.62">∥X ∥ wrms = 1 N s s-1 j=0 N j -1 i=0 W j,i X j,i<label>2</label></formula><p xml:id="_J4buvsW"><s xml:id="_c6GEgRx" coords="10,380.05,227.61,2.49,8.50">.</s></p><p xml:id="_KXntxPp"><s xml:id="_uBpk5eC" coords="10,80.40,258.71,352.76,9.70">The MPIManyVector algorithm for computing the WRMS norm is given in Algorithm 1.</s><s xml:id="_AztpFBj" coords="10,435.65,258.71,95.65,9.70">Here we note the use of</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3" xml:id="_5354YKj">MPI+X</head><p xml:id="_vQq7Ua8"><s xml:id="_6nmAAPd" coords="10,80.35,560.35,451.28,9.70;10,80.45,572.31,206.25,9.70">An added beneit of the MPIManyVector implementation is the ability for users to easily create hybrid MPI+X vectors where łXž is a type of on-node parallelism.</s><s xml:id="_nhkWPEu" coords="10,289.17,572.31,242.12,9.70;10,80.33,584.26,452.07,9.70;10,80.70,596.22,450.61,9.70;10,80.70,608.17,181.71,9.70">Given an MPI-unaware on-node vector, either one provided with SUNDIALS (e.g., OpenMP, CUDA, RAJA, etc.) or one deined by the user (e.g., OpenCL, OpenACC, etc.), an MPI+X version of the vector can be simply created by supplying an MPI communicator and the on-node N_Vector to the MPIManyVector constructor.</s><s xml:id="_76wVrDT" coords="10,264.91,608.17,266.39,9.70;10,80.70,620.13,450.61,9.70;10,80.70,632.08,282.45,9.70">To streamline this particularly beneicial use case we have created an łMPIPlusXž vector, which is a thin wrapper of the MPIManyVector to simplify construction and provide some helpful utility functions for working with the wrapped on-node vector.</s><s xml:id="_ytHwGTB" coords="10,365.58,632.08,165.72,9.70;10,80.45,644.04,243.10,9.70">See <ref type="bibr" coords="10,381.56,632.08,16.22,9.70" target="#b10">[11]</ref> for a performance comparison of various GPU on-node vectors beneath the MPIPlusX vector.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5" xml:id="_UnE4XMS">LINEAR SOLVERS</head><p xml:id="_7tTdxv2"><s xml:id="_HxTrhRg" coords="11,80.40,122.18,450.90,9.70;11,80.33,134.14,391.72,9.70">The new SUNLinearSolver class serves to streamline the use of problem-speciic and third-party linear solvers while maintaining support for integrator-speciic linear solver optimizations within SUNDIALS.</s><s xml:id="_PntnaYA" coords="11,474.55,134.14,56.75,9.70;11,80.70,146.09,369.14,9.70">To implement a custom SUNLinearSolver, a minimum set of required functions must be implemented.</s><s xml:id="_kJ8bRCP" coords="11,453.10,146.09,78.19,9.70;11,80.70,158.05,450.61,9.70;11,80.70,170.00,41.35,9.70">Additionally, there are a variety of optional routines that, if provided, can be leveraged by the SUNDIALS integrators to improve eiciency.</s><s xml:id="_ar9xdHT" coords="11,125.17,170.00,406.14,9.70;11,80.40,181.96,35.69,9.70">There are two required SUNLinearSolver methods: SUNLinSolGetType and SUNLinSolSolve (see Table <ref type="table" coords="11,106.10,181.96,3.33,9.70" target="#tab_4">2</ref>).</s><s xml:id="_9TQMzD9" coords="11,119.34,181.96,411.96,9.70;11,401.10,267.30,112.11,8.84;11,80.70,307.11,372.67,9.70">The irst of these allows the solver to self-identify its łtypež as being either: (a) matrix-based and Solves the linear system Ax = b direct, (b) matrix-based and iterative, (c) matrix-free and iterative, or (d) matrix-embedded.</s><s xml:id="_a4baDWZ" coords="11,455.87,307.11,75.43,9.70;11,80.70,319.06,322.00,9.70">This identiication allows the SUNDIALS packages to exploit certain solver properties for eiciency.</s><s xml:id="_ArCR3Wj" coords="11,405.11,319.06,126.19,9.70;11,80.70,331.02,451.70,9.70;11,80.70,342.97,450.79,9.70;11,80.70,354.93,40.09,9.70">For example, with matrix-based linear solvers the SUNDIALS integrators will infrequently update Jacobian matrices and, for direct linear solvers, matrix factorizations, to amortize the high cost of these operations across multiple time steps or nonlinear solver iterations.</s><s xml:id="_r7ehsrj" coords="11,123.15,354.93,408.16,9.70;11,80.70,366.88,371.58,9.70">Similarly, for iterative linear solvers all of the SUNDIALS packages select tolerances that are łjust tight enoughž to aid an outer Newton iteration without performing unnecessary linear iterations.</s><s xml:id="_qdYbZCv" coords="11,454.76,366.88,76.55,9.70;11,80.70,378.84,450.61,9.70;11,80.40,391.17,30.73,9.44">The purpose of the second required routine, SUNLinSolSolve, is self-explanatory ś this performs the solve for a given linear system Ax = b.</s></p><p xml:id="_kC82prK"><s xml:id="_eysPqJw" coords="11,90.66,402.75,441.77,9.70;11,80.70,414.71,452.14,9.70">To support integrator-speciic optimizations, the SUNLinearSolver class deines a number of additional łsetž routines that, if implemented, can be called to provide more ine-grained control over the SUNLinearSolver object.</s><s xml:id="_FQ5JdA3" coords="11,80.70,426.66,450.80,9.70;11,80.70,438.62,72.39,9.70">In addition, a set of łgetž routines for retrieving artifacts (statistics, residual vectors, etc.) from the linear solver can also be called.</s><s xml:id="_csUuR7n" coords="11,155.58,438.62,375.73,9.70;11,80.70,450.57,450.61,9.70;11,80.70,462.53,93.87,9.70">While the SUNDIALS documentation provides an exhaustive list of these set and get routines [45, Section 8.1], we discuss a few of these optional operations (see Table <ref type="table" coords="11,373.72,450.57,3.72,9.70" target="#tab_5">3</ref>) here to highlight their beneits in the SUNLinearSolver class.</s><s xml:id="_996sQqf" coords="11,401.10,591.08,112.82,8.73;11,401.10,602.04,82.07,8.73">Provides the solver with linear system scaling vectors</s></p><p xml:id="_GwpKwPF"><s xml:id="_QpzCgd9" coords="11,90.66,633.13,440.64,9.70;11,80.70,645.08,432.29,9.70">The amortization of potentially high cost matrix factorizations or preconditioner setups is achieved by calling the optional SUNLinSolSetup function with an updated system matrix A (for matrix-based linear solvers).</s><s xml:id="_3EHRwmU" coords="11,515.47,645.08,15.82,9.70;12,80.70,107.24,450.61,9.70;12,80.70,119.19,238.02,9.70">The frequency of these calls depends on the type of integrator and/or nonlinear solver that uses the linear solver, and that frequency may, in many cases, be modiied by the user.</s><s xml:id="_6a5gyJ4" coords="12,321.19,119.19,210.37,9.70;12,80.70,131.15,450.60,9.70;12,80.70,143.10,91.85,9.70">However, if this setup routine is not implemented by the SUNLinearSolver, then these costs must instead be incurred at every call to SUNLinSolSolve, which happens much more frequently.</s><s xml:id="_c6UYG2d" coords="12,175.03,143.10,356.27,9.70;12,80.70,155.06,97.88,9.70">To facilitate the linear solver abstraction for matrix-based linear solvers we have created a new SUNMatrix class.</s><s xml:id="_SumrdeG" coords="12,181.06,155.06,350.24,9.70;12,80.70,167.01,384.62,9.70">This matrix class provides continued support for our pre-existing dense, banded, and sparse-direct linear solvers, and it streamlines interfacing with external linear solver packages.</s></p><p xml:id="_r7ZaP4H"><s xml:id="_eJEfjzw" coords="12,90.66,178.97,440.64,9.70;12,80.70,190.92,450.61,9.70;12,80.70,202.88,272.83,9.70">All matrix-based SUNLinearSolver implementations must have a compatible SUNMatrix implementation that provides routines to clone or destroy existing SUNMatrix objects, although some SUNDIALS packages require additional matrix operations for compatibility (see Table <ref type="table" coords="12,343.74,202.88,3.26,9.70" target="#tab_6">4</ref>).</s><s xml:id="_78qyAer" coords="12,356.01,202.88,175.53,9.70;12,80.70,214.83,451.70,9.70;12,80.70,226.79,290.50,9.70">The set of SUNDIALS-provided SUNMatrix implementations, as well as their compatibility with provided N_Vector and SUNLinearSolver implementations, is discussed in detail in the SUNDIALS documentation [45, Section 7.1].</s><s xml:id="_SbCq5ar" coords="12,90.66,420.36,440.64,9.70;12,80.70,432.31,80.93,9.70">For matrix-free iterative linear solvers, the SUNLinearSolver object requires knowledge of the linear system that must be solved.</s><s xml:id="_Ga88rGh" coords="12,164.13,432.31,368.27,9.70;12,80.70,444.27,450.61,9.70;12,80.70,456.22,127.92,9.70">As such, linear solvers having this type must implement the SUNLinSolSetATimes routine, that is called by SUNDIALS packages to provide a function and corresponding data structure for computing the matrix-vector product, Ax → z.</s></p><p xml:id="_NAwPV3n"><s xml:id="_TPfftfc" coords="12,90.66,468.18,440.64,9.70;12,80.70,480.13,450.60,9.70;12,80.70,492.09,190.28,9.70">Lastly, for both matrix-based and matrix-free iterative solvers, the SUNLinearSolver class deines a set of routines to support both scaling and preconditioning, to balance the error between solution components, and to accelerate convergence of the linear solver.</s><s xml:id="_H8W354F" coords="12,273.69,492.09,258.71,9.82;12,80.70,502.42,355.96,12.05;12,441.01,502.00,33.28,12.35">To this end, instead of solving a linear system Ax = b directly, iterative SUNLinearSolver implementations may consider the transformed system Ã x = b, where</s></p><formula xml:id="formula_12" coords="12,204.26,520.80,327.04,14.34">Ã = S 1 P -1 1 AP -1 2 S -1 2 , b = S 1 P -1 1 b, x = S 2 P 2 x,<label>(2)</label></formula><p xml:id="_JxDKwyK"><s xml:id="_cdzhsst" coords="12,80.70,541.64,450.61,10.56;12,80.70,553.59,19.32,9.70;12,100.97,552.11,8.01,6.41;12,100.32,558.70,3.38,7.08;12,108.95,553.59,217.86,10.56">and where P 1 is the left preconditioner, P 2 is the right preconditioner, S 1 is a diagonal matrix of scale factors for P -1 1 b, and S 2 is a diagonal matrix of scale factors for P 2 x.</s><s xml:id="_f5J9TQx" coords="12,329.30,553.59,202.00,9.70;12,80.70,565.84,88.75,10.56;12,170.39,564.35,8.01,6.41;12,169.74,570.94,3.38,7.08;12,178.38,565.84,180.81,10.56">The SUNDIALS integrators provide these scaling matrices such that S 1 P -1 1 b and S 2 P 2 x have dimensionless components.</s><s xml:id="_jSRCX7M" coords="12,361.60,565.84,169.70,9.70;12,80.70,577.79,450.61,9.70;12,80.70,589.75,39.98,9.70">Furthermore, SUNDIALS packages request that iterative linear solvers stop based on the 2-norm of the scaled preconditioned residual meeting a prescribed tolerance:</s></p><p xml:id="_UkrYVUg"><s xml:id="_XTP9zeN" coords="12,279.12,601.10,24.65,12.27;12,309.01,610.77,3.38,7.08;12,315.87,603.75,22.77,9.70">b -Ã x 2 &lt; tol.</s></p><p xml:id="_bGvnxXk"><s xml:id="_ptxYMEm" coords="12,80.40,620.82,450.91,9.70;12,80.70,632.78,276.63,9.70">These preconditioning operators and scaling matrices are provided to iterative SUNLinearSolver objects through the optional SetPreconditioner and SetScalingVectors routines.</s><s xml:id="_QmkQVGa" coords="12,359.70,632.78,173.29,9.70;12,80.70,644.73,450.61,9.70;13,80.70,107.24,321.66,9.70">However, if an iterative linear solver implementation does not support scaling, the SUNDIALS packages will attempt to accommodate for the lack of scaling by instead requesting that the iterative linear solver stop based on the criterion</s></p><formula xml:id="formula_13" coords="13,256.24,124.42,275.06,16.08">P -1 1 b -P -1 1 Ax 2 &lt; tol s 1 ,<label>(3)</label></formula><p xml:id="_QFRVAVp"><s xml:id="_EdpgKzH" coords="13,80.33,145.62,192.61,10.56">where s 1 is the RMS norm of the diagonal of S 1 .</s><s xml:id="_fbGAzHW" coords="13,275.44,145.62,255.87,9.70;13,80.70,157.57,450.61,9.70;13,80.70,169.53,275.48,9.70">This tolerance adjustment is not a perfect replacement for both solution and residual scaling, in that it only accounts for the magnitude of the overall linear residual and does not balance error between speciic residual or solution components.</s><s xml:id="_gBhuFxp" coords="13,90.66,181.48,310.82,9.70">With this SUNLinearSolver class in place, our redesign operated on two levels.</s><s xml:id="_tj8b6tz" coords="13,403.76,181.48,128.64,9.70;13,80.33,193.44,450.98,9.70;13,80.70,205.39,24.53,9.70">On the SUNDIALS package side, we converted each linear solver interface to utilize generic linear solvers and leverage the three aforementioned types.</s><s xml:id="_kc9JGew" coords="13,107.72,205.39,423.59,9.70;13,80.70,217.35,92.58,9.70">On the solver side, we converted each existing linear solver in SUNDIALS to an implementation of the SUNLinearSolver class.</s><s xml:id="_AYGTVRt" coords="13,175.78,217.35,355.53,9.70;13,80.70,229.30,450.60,9.70;13,80.70,241.26,450.61,9.70;13,80.70,253.21,102.85,9.70">We note that through the deinition and use of these abstract classes alone, we were able to remove nine duplicate linear solver interfaces and three utility iles in each of the SUNDIALS packages, while simultaneously expanding the set of linear solvers available for each package and maintaining integrator-speciic eiciency enhancements.</s><s xml:id="_8AgfRR9" coords="13,186.04,253.21,345.45,9.70;13,80.70,265.17,450.60,9.70;13,80.70,277.12,450.61,9.70;13,80.70,289.08,451.70,9.70;13,80.70,301.03,35.91,9.70">The current set of SUNDIALS-provided SUNLinearSolvers includes direct solvers for dense (native, LAPACK <ref type="bibr" coords="13,179.53,265.17,10.57,9.70" target="#b1">[2]</ref>, MAGMA <ref type="bibr" coords="13,236.30,265.17,14.97,9.70" target="#b72">[73]</ref>, and oneMKL <ref type="bibr" coords="13,313.17,265.17,14.50,9.70" target="#b45">[46]</ref>), banded (native and LAPACK), and sparse (KLU <ref type="bibr" coords="13,80.70,277.12,15.02,9.70" target="#b22">[23,</ref><ref type="bibr" coords="13,98.21,277.12,11.26,9.70" target="#b23">24]</ref>, SuperLU_MT <ref type="bibr" coords="13,172.86,277.12,14.86,9.70" target="#b25">[26]</ref>, SuperLU_Dist <ref type="bibr" coords="13,253.47,277.12,14.86,9.70" target="#b53">[54]</ref>, and cuSOLVER <ref type="bibr" coords="13,339.19,277.12,15.48,9.70" target="#b57">[58]</ref>) matrix-based linear systems, as well as an ensemble of matrix-free scaled-preconditioned iterative linear solvers (GMRES, FGMRES, TFQMR, BiCG-Stab, and CG).</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head xml:id="_6nSABVw">SUNLinearSolver Demonstration Problem</head><p xml:id="_BH6FsdA"><s xml:id="_6aEFPaf" coords="13,80.40,338.77,450.90,9.70;13,80.70,350.72,126.69,9.70">To demonstrate the ability for users to supply a custom linear solver for their applications, we consider the two-dimensional heat equation</s></p><formula xml:id="formula_14" coords="13,219.69,367.45,173.86,22.08">∂ ∂t u (t, x, y) = ∇ • (D∇u (t, x, y)) + b (t, x, y).</formula><p xml:id="_UhzZtx2"><s xml:id="_kQtV2rC" coords="13,80.70,394.94,450.61,9.70;13,80.70,406.90,232.38,9.70;13,180.97,424.87,79.20,9.82;13,260.18,422.73,3.38,7.08;13,264.51,424.87,32.15,9.70;13,296.65,422.73,3.38,7.08;13,300.98,424.87,80.74,9.70">Here, u is the temperature, D is the diagonal matrix of difusion coeicients (the identity matrix in the experiments below) and the external forcing term b (t, x, y) is given by b (t, x, y) = -2π sin 2 (πx ) sin 2 (πy) sin(πt ) cos(πt )</s></p><p xml:id="_TWw3sGS"><s xml:id="_NFRM6YU" coords="13,227.08,441.54,34.87,10.56;13,263.09,439.41,3.38,7.08;13,267.42,441.82,16.40,9.09;13,283.82,439.41,3.38,7.08;13,288.15,441.54,41.25,9.70;13,329.40,439.41,3.38,7.08;13,333.73,441.54,35.82,9.70;13,369.55,439.41,3.38,7.08;13,373.88,441.54,32.99,9.70;13,406.87,439.41,3.38,7.08;13,411.20,441.82,16.38,9.09;13,227.08,458.21,34.87,10.56;13,263.09,456.08,3.38,7.08;13,267.42,458.49,16.40,9.09;13,283.82,456.08,3.38,7.08;13,288.15,458.21,40.91,9.70;13,329.06,456.08,3.38,7.08;13,333.39,458.21,35.48,9.70;13,368.87,456.08,3.38,7.08;13,373.20,458.21,33.33,9.70;13,406.53,456.08,3.38,7.08;13,410.86,458.49,19.48,9.09">-D 1,1 2π 2 (cos 2 (πx ) -sin 2 (πx )) sin 2 (πy) cos 2 (πt ) -D 2,2 2π 2 (cos 2 (πy) -sin 2 (πy)) sin 2 (πx ) cos 2 (πt ).</s></p><p xml:id="_xDW67xW"><s xml:id="_E88txY7" coords="13,80.40,477.41,218.55,9.70;13,298.95,475.78,3.38,7.08;13,305.30,477.41,226.00,9.82;13,80.70,489.37,134.12,9.82;13,214.81,487.59,3.38,7.08;13,219.14,489.37,32.15,9.70;13,251.29,487.59,3.38,7.08;13,255.61,489.65,20.31,9.09">The problem is solved on the unit square (x, y) ∈ [0, 1] 2 for t ∈ [0, 1] with u (t, x, y) = 0 on the boundary, and the initial condition is u (0, x, y) = sin 2 (πx ) sin 2 (πy).</s><s xml:id="_mwErcuP" coords="13,278.27,489.37,253.04,9.70;13,80.10,501.32,59.08,9.82;13,139.18,499.54,3.38,7.08;13,143.51,501.32,32.15,9.70;13,175.65,499.54,3.38,7.08;13,179.98,501.32,32.99,9.70;13,212.97,499.69,23.35,11.00">With this coniguration, the problem has the analytical solution u (t, x, y) = sin 2 (πx ) sin 2 (πy) cos 2 (πt ).</s><s xml:id="_mAfFemx" coords="13,90.66,513.28,440.64,9.70;13,80.30,525.23,451.00,10.56;13,80.70,537.19,22.54,9.70">Spatial derivatives are discretized using second order centered inite diferences with data distributed over an n x × n y uniform spatial grid decomposed across a two-dimensional Cartesian communicator with p x × p y MPI tasks.</s><s xml:id="_VbdPvcW" coords="13,105.73,537.19,425.58,9.70;13,80.70,549.14,450.61,9.70;13,80.70,561.10,138.24,9.70">We integrate this problem in time using both CVODE and ARKODE; the ARKODE version of the problem uses the default third order diagonally implicit Runge-Kutta method in ARKODE, while the CVODE version uses adaptive order BDF methods.</s><s xml:id="_53GtyrA" coords="13,221.43,561.10,309.87,9.70;13,80.70,573.05,450.61,9.70;13,80.70,585.01,374.30,9.70">For both examples, the implicit systems(s) in each time step are solved using SUNDIALS' default inexact Newton method with custom SUNMatrix and SUNLinearSolver implementations that wrap a structured grid matrix and iterative linear solvers from hypre, CG and GMRES.</s><s xml:id="_7h8ETK9" coords="13,457.49,585.01,73.81,9.70;13,80.70,596.96,354.43,9.70">The linear solvers are preconditioned with hypre's PFMG parallel semicoarsening multigrid solver <ref type="bibr" coords="13,407.25,596.96,10.37,9.70" target="#b7">[8,</ref><ref type="bibr" coords="13,420.12,596.96,11.26,9.70" target="#b30">31]</ref>.</s><s xml:id="_86QnvN2" coords="13,437.62,596.96,93.68,9.70;13,80.70,608.92,353.45,9.70">The source iles for the CVODE and ARKODE versions of this example problem are cv_heat2D_hypre_ls.cpp</s><s xml:id="_YBV9pse" coords="13,437.19,608.92,94.56,9.70;13,80.70,620.87,79.92,9.70">and ark_heat2D_hypre_ ls.cpp respectively.</s></p><p xml:id="_SkMBXbr"><s xml:id="_5D6XWvr" coords="13,90.66,632.83,440.65,9.70;13,80.70,644.78,450.60,9.70;14,80.46,106.34,302.40,8.05">The member data for the custom SUNMatrix object consists of the Hypre5ptMatrixContent structure that holds the hypre structured grid, stencil, and matrix objects as well as workspace arrays and other information Table <ref type="table" coords="14,102.92,106.34,3.13,8.05">5</ref>. Integrator statistics from the SUNLinearSolver demonstration problem.</s><s xml:id="_ZCHkgDd" coords="14,385.37,106.34,145.93,8.05;14,80.70,117.30,348.09,8.05">The MF and JV columns correspond to SUNDIALS solvers with a matrix-free or a user-defined Jacobian-vector product, respectively.</s><s xml:id="_Qk3ejQb" coords="14,431.02,117.30,100.28,8.05;14,80.70,128.26,450.61,8.05;14,80.70,139.22,313.04,8.05">The statistics given are the number of successful time steps (Steps), failed time steps (Step fails), total (integrator + linear solver) ODE right-hand side evaluations (RHS evals), nonlinear iterations (NLS iters), and linear iterations (LS iters).</s><s xml:id="_TJjGtQ8" coords="14,395.80,139.22,136.04,8.05;14,80.70,150.18,266.88,8.05">The max error at the final time (Error) and the total average run time across 100 runs (Run time) are also given.</s><s xml:id="_JQSthf8" coords="14,80.70,509.79,131.28,9.70">for updating the matrix entries.</s><s xml:id="_KppVcKU" coords="14,214.73,509.79,318.25,9.70;14,80.70,521.75,54.26,9.70">A similar structure (HypreLSContent) deines the member data for the SUN-LinearSolver.</s><s xml:id="_MYvASbx" coords="14,137.83,521.75,393.71,9.70;14,80.70,533.70,452.14,9.70">Since the linear solver is an iterative method that uses a matrix object, the custom SUNMatrix implementation only needs to deine the GetID, Clone, Destroy, Copy, and ScaleAddI methods from Table <ref type="table" coords="14,525.87,533.70,3.48,9.70" target="#tab_6">4</ref>.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head xml:id="_5kzdGUM">SUNDIALS</head><p xml:id="_4yD3jBT"><s xml:id="_NUsbZFa" coords="14,80.40,545.66,450.90,9.70;14,80.70,557.61,174.93,9.70">The custom linear solver deines the required GetType and Solve methods as well as the optional Setup method to enable reusing the preconditioner setup.</s><s xml:id="_5SjQfkn" coords="14,258.14,557.61,273.16,9.70;14,80.70,569.57,450.61,9.70;14,80.70,581.52,135.19,9.70">Additionally, the custom linear solver implementation provides the optional NumIters and Free methods for retrieving the number of iterations from a solve and deallocating the SUNLinearSolver and its content.</s><s xml:id="_fwfNwjW" coords="14,90.66,593.48,440.84,9.70;14,80.70,605.43,130.03,9.70">Since this custom solver does not provide a function to set scaling vectors, the integrators adjust the linear solve tolerance, as shown in <ref type="bibr" coords="14,197.95,605.43,9.58,9.70" target="#b2">(3)</ref>.</s><s xml:id="_Za4UDVQ" coords="14,213.22,605.43,318.27,9.70;14,80.70,617.39,343.10,9.70">The main function for each example creates SUNMatrix and SUNLinearSolver instances using the custom constructors, Hypre5ptMatrix and HypreLS, respectively.</s><s xml:id="_M4fNRS8" coords="14,426.28,617.39,105.01,9.70;14,80.70,629.34,450.61,9.70;14,80.70,641.30,435.71,9.70">Both of these constructors setup the object as outlined in Section 3. Once the matrix and linear solver objects are created, the example programs attach the objects to the integrators with the ARKODE and CVODE SetLinearSolver functions.</s></p><p xml:id="_Fxj4Kpv"><s xml:id="_22p6Ftf" coords="15,90.66,107.24,440.64,9.70;15,80.70,119.19,36.59,9.70">The updated linear solver interfaces make it easy to quickly compare multiple solvers and integrators on a problem.</s><s xml:id="_GszRFgH" coords="15,120.27,119.19,412.72,9.70;15,80.70,131.15,450.61,9.70;15,80.70,143.10,450.60,9.70;15,80.70,155.71,124.53,8.42">Results comparing the CG and GMRES linear solvers from SUNDIALS (matrix-free or with a usersupplied Jacobian-vector product function) and hypre (matrix-based), each preconditioned with PFMG, underneath a linear multistep integrator (CVODE) and a multistage integrator (ARKODE) are given in Table <ref type="table" coords="15,473.60,143.10,3.42,9.70">5</ref>. See the iles ark_heat2D_hypre_pfmg.cpp</s><s xml:id="_JbrkKk5" coords="15,207.90,155.06,323.40,9.70;15,80.70,167.01,103.84,9.70">and cv_heat2D_hypre_pfmg.cpp for the versions of this example that use the SUNDIALS linear solvers.</s><s xml:id="_nfg6WN2" coords="15,187.04,167.01,344.26,9.70;15,80.70,178.97,450.61,9.70;15,80.40,190.92,344.57,9.70">Additionally, Table <ref type="table" coords="15,266.01,167.01,4.60,9.70">5</ref> includes results from SUNDIALS v2.7.0<ref type="foot" coords="15,431.00,165.38,3.38,7.08" target="#foot_3">1</ref> before the introduction of the new SUNLinearSolver class to illustrate that solver performance is unafected by the new infrastructure (i.e., run times are within the observed run time variability of ∼2% on the machine).</s><s xml:id="_V7BFBAQ" coords="15,427.47,190.92,103.83,9.70;15,80.70,202.88,450.61,9.70;15,80.70,214.83,71.06,9.70">As only ARKODE had an interface to the SUNDIALS CG solver before the introduction of the linear solver class, results with CVODE from SUNDIALS v2.7.0</s><s xml:id="_tGGH2K8" coords="15,154.25,214.83,260.61,9.70">only utilize the SUNDIALS matrix-free GMRES implementation.</s></p><p xml:id="_Wnr5XGR"><s xml:id="_yEVfm7A" coords="15,90.66,226.79,442.33,9.70;15,80.70,238.74,427.27,9.70">The tests use a 4,096 × 4,096 spatial grid distributed across 256 MPI tasks (16 tasks each in the x-and ydirections) and are run on 8 nodes of the Quartz cluster at Lawrence Livermore National Laboratory.</s><s xml:id="_rpJ7sn7" coords="15,511.18,238.74,20.12,9.70;15,80.70,250.70,344.21,9.70">Each compute node is composed of two Intel Xeon E5-2695 v4 chips, each with 18 cores.</s><s xml:id="_TjZPx2H" coords="15,427.54,250.70,103.76,9.70;15,80.70,262.66,374.49,9.70">MPI tasks are distributed equally across the compute nodes so that 32 of the 36 cores available on a node are utilized.</s><s xml:id="_rCVafYP" coords="15,457.66,262.66,73.65,9.70;15,80.70,274.61,450.61,9.70;15,80.70,286.57,151.79,9.70">All integrator and solver options are set to the default values and have not been optimized for this example demonstrating the re-usability of class implementations.</s></p><p xml:id="_9Djhapg"><s xml:id="_hW5UZ3e" coords="15,90.66,298.52,440.64,9.70;15,80.70,310.48,450.60,9.70;15,80.47,322.43,9.44,9.70;15,89.91,320.95,8.01,6.41;15,100.90,322.43,27.21,9.70;15,128.10,320.95,11.39,6.41;15,142.47,322.43,54.94,9.70">In this example, as seen from Table <ref type="table" coords="15,234.05,298.52,3.36,9.70">5</ref>, the combination of CVODE and a matrix-based linear solver from hypre produces the most eicient results for the desired accuracy (the integrator relative and absolute tolerances are 10 -5 and 10 -10 respectively).</s><s xml:id="_PTPWTsP" coords="15,199.90,322.43,331.59,9.70;15,80.70,334.39,452.14,9.70">CVODE is well suited to this problem as it only requires one nonlinear solve per step, regardless of the method order, and adapts the order in addition to the time step size to maximize eiciency.</s><s xml:id="_wPdpJZb" coords="15,80.35,346.34,451.15,9.70;15,80.70,358.30,450.61,9.70;15,80.70,370.25,88.41,9.70">ARKODE also adapts the step size, but uses a ixed order method which requires multiple implicit solves per step (for a problem better suited to the multistage IMEX methods in ARKODE see the 1D advection-reaction problem in Section 6).</s><s xml:id="_GmFM2vj" coords="15,171.60,370.25,359.70,9.70;15,80.70,382.21,95.82,9.70">With the default parameters, the matrix-based hypre solvers lead to faster run times than the SUNDIALS solvers.</s><s xml:id="_ZC8ERx2" coords="15,179.06,382.21,352.24,9.70;15,80.70,394.16,452.14,9.70">The increased cost in the matrix-free case is a result of the additional right-hand side evaluations (and the corresponding MPI communication) required to approximate the Jacobian-vector product.</s><s xml:id="_zrvz2Ms" coords="15,80.70,406.12,317.09,9.70">Supplying a user-deined Jacobian-vector product function eliminates this cost.</s><s xml:id="_hqrEBdJ" coords="15,400.26,406.12,131.04,9.70;15,80.70,418.07,322.03,9.70">However, the SUNDIALS solvers still require approximately 0.5 more linear iterations per nonlinear iteration.</s><s xml:id="_mWC3kdw" coords="15,405.95,418.07,125.36,9.70;15,80.70,430.03,450.61,9.70;15,80.70,441.98,29.99,9.70">The lower average number of iterations with hypre solvers is, in part, due to the tolerance adjustment (3) for linear solvers that do not support scaling.</s><s xml:id="_4tM4sZQ" coords="15,113.04,441.98,418.45,9.70;15,80.70,453.94,63.07,9.70">The performance of the SUNDIALS linear solvers can be improved for this problem by relaxing the linear solve tolerance.</s></p><p xml:id="_rEJgSrK"><s xml:id="_wE6rxZ8" coords="15,90.66,465.89,441.74,9.70;15,80.70,477.85,450.80,9.70;15,80.70,489.80,110.86,9.70">Prior to the introduction of the new matrix and linear solver classes, this comparison across diferent integrators, solver options, and parameters would have required the user to implement unique interfaces to hypre solvers for both CVODE and ARKODE.</s><s xml:id="_nun7H7p" coords="15,193.82,489.80,337.49,9.70;15,80.70,501.76,62.95,9.70">With the new SUNDIALS infrastructure such interfaces can easily be reused between the integrators.</s><s xml:id="_UtGXa3g" coords="15,146.14,501.76,385.16,9.70;15,80.70,513.71,80.76,9.70">Moreover, the user's calling program to setup and evolve the problem in each of these cases is essentially identical.</s><s xml:id="_kAf2bS7" coords="15,163.88,513.71,367.42,9.70;15,80.70,525.67,450.60,9.70;15,80.70,537.62,215.06,9.70">To switch from a native SUNDIALS linear solver to using a hypre solver, the user only needs to swap the SUNDIALS constructor call with a call to their matrix and linear solver constructors and update the SetLinearSolver call to also attach a matrix object.</s><s xml:id="_f4RU3G8" coords="15,298.26,537.62,233.30,9.70;15,80.70,549.58,285.57,9.70">To enable the user-deined Jacobian-vector product, only one additional function call is necessary to attach the user's function.</s><s xml:id="_uhH7GjT" coords="15,368.76,549.58,162.54,9.70;15,80.40,561.53,450.90,9.70;15,80.70,573.49,153.83,9.70">All other linear solver related functions (e.g., adjusting the preconditioner/linear system update frequency or linear solve tolerance) are independent of the choice of SUNLinearSolver object.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6" xml:id="_3HEuEcy">NONLINEAR SOLVERS</head><p xml:id="_VEEeQ96"><s xml:id="_ATmtTBZ" coords="16,80.40,122.18,452.58,9.70;16,80.70,134.14,176.04,9.70">The new SUNNonlinearSolver class provides an interface for supplying SUNDIALS integrators with problemspeciic and third-party nonlinear solvers.</s><s xml:id="_qzdMmBf" coords="16,259.88,134.14,271.42,9.70;16,80.70,146.09,127.81,9.70">Like the other SUNDIALS base classes, this class deines a set of required and optional methods.</s><s xml:id="_hg8bqJa" coords="16,210.99,146.09,320.31,9.70;16,80.70,158.05,178.77,9.70">Complete descriptions of all SUNNonlinearSolver methods can be found in the SUNDIALS documentation [45, Section 9.1].</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head xml:id="_dZHw2JM">Solves the nonlinear system</head><p xml:id="_a626Wwt"><s xml:id="_SrVtQUM" coords="16,90.66,356.64,276.18,9.70">The three required nonlinear solver methods are listed in Table <ref type="table" coords="16,359.88,356.64,3.48,9.70" target="#tab_8">6</ref>.</s><s xml:id="_9A4sxAF" coords="16,369.84,356.64,161.66,9.70;16,80.70,368.59,451.70,9.82;16,80.20,380.55,451.10,9.82;16,80.70,392.51,234.51,9.70">These include the GetType method for querying a solver object about the nonlinear system formulation it expects: root-inding, F (u) = 0, or ixed-point, G (u) = 0. Based on this information, an integrator will use the SetSysFn method to supply the solver with a function to evaluate the appropriate nonlinear system.</s><s xml:id="_j2ynpF4" coords="16,317.97,392.51,213.34,9.70;16,80.70,404.46,450.79,9.70;16,80.70,416.42,450.61,9.70;16,80.70,428.37,105.02,9.70">As nonlinear systems in SUNDIALS integrators are formulated in terms of a correction to the predicted solution, the Solve method is passed the initial guess for the state vector, y0, as well as the correction vector, ycor, which contains the initial correction on input and the inal correction on output.</s><s xml:id="_w2zxx8x" coords="16,188.23,428.37,343.08,9.70;16,80.45,440.33,36.13,9.70">The solution is expected to satisfy the tolerance, tol, in the WRMS norm with weight vector, w.</s><s xml:id="_Ytarrbe" coords="16,119.00,440.33,412.31,9.70;16,80.70,452.28,254.71,9.70">As discussed in Section 5, nonlinear solvers like Newton's method may reuse linear system information between solves to reduce the cost of setting up the linear solver.</s><s xml:id="_6pjqFtX" coords="16,337.83,452.28,193.47,9.70;16,80.70,464.24,254.94,9.70">The input lag, callLSetup, signals whether the linear system matrix and/or preconditioner should be updated.</s></p><p xml:id="_U2ygrdq"><s xml:id="_R5chpre" coords="16,90.66,476.19,440.64,9.70;16,80.70,488.15,452.29,9.70;16,80.70,500.10,243.52,9.70">Rather than relying directly on the SUNLinearSolver class, the optional SetLSetupFn and SetLSolveFn methods listed in Table <ref type="table" coords="16,174.95,488.15,4.54,9.70" target="#tab_9">7</ref> allow the integrators to provide the nonlinear solver with functions handling integratorspeciic actions for setting up and solving linear systems.</s><s xml:id="_ZVxcETs" coords="16,327.65,500.10,203.84,9.70;16,80.70,512.06,30.32,9.70">These functions in turn utilize SUNLinearSolver objects.</s><s xml:id="_5rcsntg" coords="16,113.52,512.06,417.97,9.70;16,80.70,524.01,277.15,9.70">For nonlinear solvers that do not require a linear solver, or the solve is done within the nonlinear solver implementation, these optional methods do not need to be provided.</s><s xml:id="_SwdxyBC" coords="16,360.34,524.01,170.96,9.70;16,80.70,535.97,399.85,9.70">Additionally, the optional SetConvTestFn method listed in Table <ref type="table" coords="16,177.17,535.97,4.73,9.70" target="#tab_9">7</ref> allows an integrator-speciic convergence test function to be provided.</s><s xml:id="_JpxRJSv" coords="16,483.50,535.97,47.80,9.70;16,80.70,547.92,450.60,9.70;16,80.70,559.88,348.67,9.70">The default stopping test for nonlinear iterations is related to the subsequent local error test for a time step, with the goal of keeping the nonlinear iteration errors from interfering with local temporal error control.</s><s xml:id="_vcsZUYa" coords="16,431.36,559.88,101.04,9.70;16,80.70,571.83,450.61,9.70;16,80.70,583.79,226.90,9.70">In each of the integrators, this test is based on an estimate of the solver convergence rate, and incorporates several heuristics for estimating the rate of convergence and detecting solver divergence.</s><s xml:id="_Ns8Uf6u" coords="16,310.08,583.79,221.41,9.70;16,80.70,595.74,450.60,9.70;16,80.70,607.70,198.69,9.70">As the default convergence test may not be optimal for all nonlinear solvers or problems, this optional method also allows a user to attach a custom convergence test that is better-suited to the solver or application.</s><s xml:id="_3Bq5KkC" coords="16,282.05,607.70,249.25,9.70;16,80.70,619.65,251.78,9.70">Alternately, if the nonlinear solver includes its own internal convergence test, this optional function need not be provided.</s></p><p xml:id="_FAX2aW7"><s xml:id="_MVqNfTj" coords="16,90.66,631.61,440.83,9.70;16,80.70,643.56,369.05,9.70">With the new SUNNonlinearSolver class in place, the integrators were updated to utilize generic nonlinear solvers, and the existing solver implementations were combined into shared derived classes.</s><s xml:id="_5rM62eZ" coords="16,452.23,643.56,79.33,9.70">This change greatly</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head xml:id="_KTtSr5Z">SUNNonlinearSolver Demonstration Problem</head><p xml:id="_dTMrHgB"><s xml:id="_G8c62xX" coords="17,80.40,320.54,452.59,9.70;17,80.70,332.49,450.60,9.70;17,80.70,344.45,86.33,9.70">To demonstrate the lexibility provided by the new nonlinear solver class we consider a one-dimensional advectionreaction problem using a stif variation of the Brusselator model from chemical kinetics <ref type="bibr" coords="17,439.48,332.49,16.38,9.70" target="#b36">[37]</ref> utilizing a custom SUNNonlinearSolver.</s><s xml:id="_hEV53J9" coords="17,169.51,344.45,93.13,9.70">The system is given by</s></p><formula xml:id="formula_15" coords="17,237.84,360.89,137.22,72.14">∂u ∂t = -c ∂u ∂x + A -(w + 1)u + vu 2 ∂v ∂t = -c ∂v ∂x + wu -vu 2 ∂w ∂t = -c ∂w ∂x + B -w ϵ -wu</formula><p xml:id="_3w6B52P"><s xml:id="_NQuMxhu" coords="17,80.33,437.15,450.97,9.82;17,80.70,449.10,450.61,9.82;17,80.70,461.06,98.31,9.82;17,179.01,459.58,8.01,6.41;17,190.01,461.06,232.15,9.70">where u, v, and w are chemical concentrations, t ∈ [0, 10] is time, x ∈ [0, b] is the spatial variable, c = 0.01 is the advection speed, A = 1 and B = 3.5 are the concentrations of chemical species that remain constant over space and time, and ϵ = 5 × 10 -6 is a parameter that determines the stifness of the system.</s><s xml:id="_STFGVMt" coords="17,424.66,461.06,106.64,9.70;17,80.70,473.01,193.89,9.70">The problem uses periodic boundary conditions and the initial condition is</s></p><formula xml:id="formula_16" coords="17,162.51,489.13,288.05,27.69">u (0, x ) = A + p(x ), v (0, x ) = B/A + p(x ), w (0, x ) = 3.0 + p(x ), p(x ) = 0.1 exp -2 (2x/b -1) 2 .</formula><p xml:id="_cRBj4zt"><s xml:id="_HJmhgWF" coords="17,80.70,525.30,450.61,10.56;17,80.70,537.25,112.16,10.56">Spatial derivatives are discretized with irst order upwind inite diferences on a uniform mesh with n x points divided across p x MPI tasks.</s><s xml:id="_SVVBysU" coords="17,195.28,537.25,318.16,9.70">The state is stored in a task-local serial vector wrapped by the MPIPlusX vector.</s><s xml:id="_Yd9MrGG" coords="17,515.86,537.25,15.45,9.70;17,80.70,549.21,450.61,9.70;17,80.70,561.16,205.81,9.70">The default third order IMEX method from ARKODE is used to evolve the system in time with the advection terms treated explicitly and the reaction terms implicitly.</s></p><p xml:id="_DHzF4kx"><s xml:id="_yfF7XeB" coords="17,90.66,573.12,440.64,9.70;17,80.70,585.07,288.84,9.70">As the reactions are purely local in space, the implicit system that must be solved at each stage can be decomposed into independent nonlinear systems at each grid point.</s><s xml:id="_mjNzRcs" coords="17,373.08,585.07,158.22,9.70;17,80.70,597.03,450.60,9.70;17,80.45,608.98,32.12,9.70">To exploit this locality, the user code implements a custom problem-speciic SUNNonlinearSolver to perform MPI task-local solves with the local serial vectors.</s><s xml:id="_abVsHqh" coords="17,115.07,608.98,416.43,9.70;17,80.70,620.94,168.57,9.70">This eliminates nearly all parallel communication within the implicit solves i.e., global reductions for norms and orthogonalization in GMRES.</s><s xml:id="_9gTP9ra" coords="17,251.85,620.94,279.45,9.70;17,80.70,632.90,284.56,9.70">The only global communication necessary is at the end of the solve phase to check if all the task-local nonlinear solves were successful.</s><s xml:id="_NuUvZjK" coords="17,368.22,632.90,163.53,9.70;17,80.70,646.17,136.69,7.58">The source ile for this example is ark_ brusselator1D_task_local_nls.c.</s></p><p xml:id="_s4heM8K"><s xml:id="_p2vFFBn" coords="18,90.66,107.24,442.33,9.70;18,80.70,119.19,452.14,9.70">Here, the custom nonlinear solver member data is deined as the TaskLocalNewton_Content structure containing an instance of the native SUNDIALS Newton solver and other data for solving the local nonlinear problem.</s><s xml:id="_HzghDdW" coords="18,80.40,131.15,452.08,9.70;18,80.70,143.10,450.61,9.70;18,80.70,155.06,245.58,9.70">The custom solver deines the required GetType, SetSysFn, and Solve methods as well as the optional methods: SetConvTestFn to use the integrator-provided convergence test function, Free to deallocate the solver, and GetNumConvFails to retrieve the number of solver failures.</s><s xml:id="_rM3aqEQ" coords="18,328.93,155.06,202.38,9.70;18,80.70,167.01,450.61,9.70;18,80.70,178.97,452.14,9.70">Additionally, the optional Initialize method is used, in this case, to provide the task-local instance of the SUNDIALS Newton solver with user-deined functions to evaluate the local residual (TaskLocalNlsResidual) and solve the local linear systems (TaskLocalLSolve).</s><s xml:id="_ZCms9sF" coords="18,80.40,190.92,450.90,9.70;18,80.70,202.88,450.79,9.70;18,80.33,214.83,147.86,9.70">The main function creates a solver instance using the custom constructor, TaskLocalNewton, to setup the object as outlined in Section 3. Once the custom solver object is created, the example program attaches it to the integrator with ARKStepSetNonlinearSolver.</s></p><p xml:id="_HQsPUEB"><s xml:id="_7KKYckW" coords="18,90.66,226.79,440.83,9.70;18,80.70,238.74,450.60,9.70;18,80.70,250.70,305.21,9.70">To compare this solution approach with what was possible before the addition of the SUNNonlinearSolver class, the example code provides an option to use the SUNDIALS Newton method to perform a global solve with GMRES as the linear solver and a user-deined, task-local preconditioner.</s><s xml:id="_bAVm42r" coords="18,388.73,250.70,142.57,9.70;18,80.70,262.66,115.93,10.56;18,196.63,261.17,8.01,6.41;18,205.14,262.66,326.16,9.70;18,80.70,274.61,450.60,10.56;18,80.70,286.57,412.03,9.70">Multiple tests are run with a ixed spatial resolution, b/n x = 10 -3 , and the domain size is increased with the number of MPI tasks; speciically we test with b ∈ {1, 2, 4, 8, 16, 32, 64, 128, 256} and p x ∈ {40, 80, 160, 320, 640, 1280, 2560, 5120, 10240} with 40 MPI tasks per compute node on the Lassen supercomputer at Lawrence Livermore National Laboratory.</s><s xml:id="_jWar3Yh" coords="18,495.42,286.57,35.88,9.70;18,80.70,298.52,403.19,9.70">Note the results below utilize only the CPUs (two IBM Power9 processors with 44 cores total) on Lassen.</s><s xml:id="_VGRn6Av" coords="18,486.96,298.52,44.35,9.70;18,80.70,310.48,396.77,9.70">For results utilizing GPU acceleration and the MPIPlusX vector with various GPU task-local vectors see <ref type="bibr" coords="18,458.92,310.48,14.84,9.70" target="#b10">[11]</ref>.</s><s xml:id="_tsDHevm" coords="18,90.66,392.77,296.92,9.70">Execution times for the global and task-local solvers are given in Figure <ref type="figure" coords="18,380.86,392.77,3.36,9.70" target="#fig_2">3</ref>.</s><s xml:id="_CaH2nr7" coords="18,390.08,392.77,142.91,9.70;18,80.70,404.72,450.61,9.70;18,80.70,416.68,32.05,9.70">Although the reduction in synchronizations does not signiicantly impact the problem scaling, the custom solver results in speedups of 4x to more than 7x.</s><s xml:id="_FcD5QZF" coords="18,115.25,416.68,416.05,9.70;18,80.70,428.63,450.86,9.70;18,80.70,440.59,118.58,9.70">As such, it is clear that the new nonlinear solver class provides important new capabilities that were not possible before the lexibility enhancements and can lead to signiicantly more eicient solver approaches by exploiting problem structure.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7" xml:id="_e7uAW3u">FORTRAN 2003 INTERFACES</head><p xml:id="_8PzUMtH"><s xml:id="_mmRFFWg" coords="18,80.70,477.72,412.59,9.70">Fortran has historically been heavily used in scientiic computing and remains widespread today.</s><s xml:id="_6evgc5s" coords="18,496.68,477.72,35.72,9.70;18,80.70,489.67,378.17,9.70">As such, although SUNDIALS is written in C, Fortran interfaces have been provided for many years.</s><s xml:id="_Nwsegc6" coords="18,461.42,489.67,70.11,9.70;18,80.70,501.63,451.70,9.70;18,80.35,513.58,450.95,9.70;18,80.70,525.54,52.64,9.70">These Fortran 77 standard compliant interfaces have allowed Fortran users to access a subset of features from CVODE, IDA, ARKODE, and KINSOL and a limited number of the vector, matrix, and solver class implementations available to C/C++ users.</s><s xml:id="_N9QHwqU" coords="18,135.84,525.54,395.47,9.70;18,80.70,537.49,173.03,9.70">While the Fortran 77 interfaces provided access to some SUNDIALS capabilities they also sufered from limited lexibility and sustainability.</s><s xml:id="_j8NKgKd" coords="18,256.69,537.49,274.61,9.70;18,80.33,549.45,450.98,9.70;18,80.70,561.40,253.25,9.70">Notably, the lack of derived types in Fortran 77 was incompatible with SUNDIALS classes, and circumventing this limitation required accessing SUNDIALS classes using global memory, rendering the Fortran 77 interfaces non-threadsafe.</s><s xml:id="_9hT5ZyQ" coords="18,336.85,561.40,194.46,9.70;18,80.70,573.36,450.61,9.70;18,80.70,585.31,279.43,9.70">As a result, it was diicult for Fortran users to supply application-speciic data layouts or custom solvers, and it was impossible to use multiple instances of SUNDIALS packages simultaneously in a multithreaded environment.</s><s xml:id="_J9k8RgB" coords="18,362.60,585.31,168.70,9.70;18,80.70,597.27,450.60,9.70;18,80.70,609.22,116.71,9.70">Furthermore, maintaining these interfaces required signiicant manual upkeep of code to łgluež the interfaces to C; thus, the Fortran 77 interfaces were not sustainable in the long-term.</s></p><p xml:id="_3aGVuxu"><s xml:id="_DGUeaSJ" coords="18,90.66,621.18,440.64,9.70;18,80.70,633.13,450.87,9.70;18,80.70,645.09,341.83,9.70">To address these limitations, we have introduced new Fortran 2003 standard compliant interfaces that provide access to all of the features in all six of the SUNDIALS packages (access to CVODES and IDAS were previously unsupported from Fortran 77) as well as most of the core class implementations.</s><s xml:id="_eQwtcHr" coords="18,425.85,645.09,105.45,9.70;19,80.70,107.24,450.61,9.70;19,80.70,119.19,450.79,9.70;19,80.70,131.15,132.16,9.70">These new interfaces are generated automatically using the SWIG-Fortran <ref type="bibr" coords="19,286.87,107.24,16.50,9.70" target="#b47">[48]</ref> tool, which only requires minimal additional interface code, much of which is common across SUNDIALS, to create bindings using the Fortran 2003 features for interoperability with ISO C code.</s><s xml:id="_WSjhDhC" coords="19,215.34,131.15,315.96,9.70;19,80.70,143.10,430.47,9.70">When the C API changes in any package or class with an existing Fortran 2003 interface, the SWIG-Fortran tool is run, and the interface łgluež code is regenerated before package release.</s><s xml:id="_22wXkQ5" coords="19,513.66,143.10,17.64,9.70;19,80.70,155.06,450.61,9.70;19,80.70,167.01,217.18,9.70">This process its nicely into a modern software development worklow and could be further automated to run as part of a continuous integration/continuous delivery pipeline.</s><s xml:id="_Kg4JuXZ" coords="19,300.28,167.01,231.02,9.70;19,80.70,178.97,450.61,9.70;19,80.70,190.92,158.64,9.70">Thus, the Fortran 2003 interfaces have a low-maintenance cost and can quickly be extended to support new features and class implementations as they are added i.e., the Fortran 2003 interfaces are sustainable.</s></p><p xml:id="_9bS62wS"><s xml:id="_ECwDbNQ" coords="19,90.66,202.88,440.64,9.70;19,80.70,214.83,450.61,9.70;19,80.33,226.79,234.89,9.70">Since the Fortran 2003 interfaces are based on features of the Fortran 2003 standard for interopability with ISO C code, they allow Fortran users to continue to write idiomatic Fortran with few caveats, but to then interact with SUNDIALS in a way that closely resembles the C API.</s><s xml:id="_b6Kr5aU" coords="19,317.63,226.79,213.67,9.70;19,80.70,238.74,450.61,9.70;19,80.70,250.70,410.85,9.70">In fact, the Fortran 2003 interface API is close enough to the C API that the C API documentation serves dual-purpose as the Fortran 2003 documentation, modulo some information on data types and subtleties attributed to inherent diferences of C and Fortran.</s><s xml:id="_JpCqqms" coords="19,494.53,250.70,36.78,9.70;19,80.70,262.66,452.14,9.70">Function signatures match the C API with an łFž prepended to the function name e.g., FN_VConst instead of N_VConst.</s><s xml:id="_Sn4hAuP" coords="19,80.40,274.61,452.44,9.70">The generic SUNDIALS classes, such as the N_Vector, are interfaced as Fortran derived-types of the same name.</s><s xml:id="_Jxjs9yn" coords="19,80.40,286.57,450.90,9.70;19,80.70,298.52,311.79,9.70">This convention means that users can easily provide custom, application-speciic implementations of the generic SUNDIALS classes that are written entirely in Fortran (as illustrated below).</s><s xml:id="_BkRstZQ" coords="19,394.99,298.52,136.32,9.70;19,80.70,310.48,409.62,9.70">Data arrays (e.g., real arrays ) are interfaced as Fortran arrays of the corresponding type deined in the iso_c_binding intrinsic module.</s><s xml:id="_qbfdQZP" coords="19,492.68,310.48,38.62,9.70;19,80.70,322.43,450.60,9.70;19,80.70,334.39,358.36,9.70">The exact mapping of SUNDIALS C types to Fortran 2003 types, as well as discussion of subtle usage diferences between the C and Fortran 2003 APIs, is given in the SUNDIALS documentation <ref type="bibr" coords="19,371.99,334.39,15.00,9.70" target="#b44">[45,</ref><ref type="bibr" coords="19,389.49,334.39,46.13,9.70">Section 5.1]</ref>.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head xml:id="_QKs2Py7">Fortran 2003 Interface Demonstration Problem</head><p xml:id="_wVNaDhK"><s xml:id="_9sspMzG" coords="19,80.35,375.23,450.95,9.70;19,80.70,387.19,102.29,9.70">A second version of the demonstration problem from Section 6 utilizing a custom nonlinear solver is also implemented in Fortran.</s><s xml:id="_Y4saUBg" coords="19,186.24,387.19,345.51,9.70;19,80.70,400.46,60.52,7.58">The source code for this version of the problem is ark_brusselator1D_task_local_ nls_f2003.f90.</s><s xml:id="_2vCBADT" coords="19,144.59,399.14,386.71,9.70;19,80.70,411.10,186.49,9.70">As the Fortran interface closely mirrors the C API, the same steps to create a derived class implementation apply to the Fortran use case.</s></p><p xml:id="_pTCnUXp"><s xml:id="_2XWkxgs" coords="19,90.66,423.05,440.64,9.70;19,80.70,435.01,73.13,9.70">In this example, all of the data needed by the custom task-local nonlinear solver is contained in a user-deined module, nls_mod.</s><s xml:id="_kqa7qVh" coords="19,156.73,435.01,279.94,9.70">As such, the data is efectively global (albeit namespace protected).</s><s xml:id="_zrNexuk" coords="19,439.59,435.01,91.71,9.70;19,80.70,446.96,421.87,9.70">An alternative, thread safe approach would be to deine a new type for the solver data and attach it as the class member data.</s><s xml:id="_Me3jmVu" coords="19,505.06,446.96,26.24,9.70;19,80.70,458.92,450.60,9.70;19,80.70,470.87,452.14,9.70">In this case, the module includes an instance of the SUNDIALS Newton method and other data needed for solving the task-local nonlinear systems as well as functions implementing required and optional nonlinear solver methods.</s><s xml:id="_Y7FEXP7" coords="19,80.35,482.83,450.95,9.70;19,80.70,494.78,450.61,9.70;19,80.70,506.74,154.84,9.70">An instance of the nonlinear solver object is created using the constructor subroutine TaskLocalNewton which leverages the corresponding base class constructor to create a SUNNonlinearSolver object and c_funloc to set the function pointers in the VMT.</s><s xml:id="_CcuN75t" coords="19,238.26,506.74,293.05,9.70;19,80.70,518.69,282.92,9.70">In this case, the object's content ield does not need to be set as all the data needed by the solver is accessible through the nls_mod module.</s><s xml:id="_dpJwGfr" coords="19,366.12,518.69,165.18,9.70;19,80.70,530.65,450.85,9.70;19,80.70,542.61,36.58,9.70">Once the solver and all its required data are created, the nonlinear solver object is attached to the integrator with the FARKStepSetNonlinearSolver function.</s><s xml:id="_VvVb9Qn" coords="19,119.76,542.61,411.54,9.70;19,80.70,554.56,124.36,9.70">As expected, the C and Fortran versions of the problem have the same integrator and solver statistics and nearly identical run times.</s></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8" xml:id="_DGu4AEu">CONCLUSIONS</head><p xml:id="_wTChuhK"><s xml:id="_e6B4UW4" coords="19,80.40,595.41,450.91,9.70;19,80.70,607.36,450.79,9.70;19,80.70,619.32,279.65,9.70">The growing complexity of scientiic simulations and recent advances in high performance computing systems have resulted in increased demand for utilizing new programming models and more varied algebraic solver options with the SUNDIALS time integrators and nonlinear solvers.</s><s xml:id="_acaAjmY" coords="19,362.84,619.32,168.46,9.70;19,80.70,631.27,450.86,9.70;19,80.70,643.23,138.18,9.70">To meet these demands, we have created new matrix, linear solver, and nonlinear solver classes following the same object-oriented design previously utilized by the SUNDIALS vector.</s><s xml:id="_qS83m5M" coords="19,221.36,643.23,309.95,9.70;20,80.70,107.24,450.60,9.70;20,80.70,119.19,325.65,9.70">These new additions adhere to a number of guiding principles that provide greater lexibility while increasing the sustainability of the SUNDIALS packages, requiring minimal changes to user codes, and resulting in signiicant performance beneits in many situations.</s></p><p xml:id="_JTqGhMX"><s xml:id="_NxXmAQa" coords="20,90.66,131.15,440.64,9.70;20,80.70,143.10,213.44,9.70">The new classes allow for easier interoperability with and reuse of external and application-speciic data structures and solvers across SUNDIALS packages.</s><s xml:id="_eHz8QDT" coords="20,297.28,143.10,234.03,9.70;20,80.70,155.06,450.60,9.70;20,80.70,167.01,59.06,9.70">In particular, the encapsulation of the nonlinear solvers from the time integrators provides lexibility in nonlinear solution approaches that was not previously available in SUNDIALS.</s><s xml:id="_ZZR3X2c" coords="20,142.24,167.01,389.43,9.70;20,80.70,178.97,331.04,9.70">Additionally, we have expanded the SUNDIALS vector class implementations to include a new many-vector capability, allowing for a vector comprised of various subvectors.</s><s xml:id="_nZAGudb" coords="20,414.92,178.97,116.38,9.70;20,80.70,190.92,450.61,9.70;20,80.70,202.88,327.69,9.70">This many-vector construct provides an easy way to accommodate multiphysics simulations as well as heterogeneous architectures where diferent vectors operate on data residing in potentially diferent memory spaces.</s><s xml:id="_ehGCDTz" coords="20,410.90,202.88,120.60,9.70;20,80.70,214.83,450.61,9.70;20,80.70,226.79,266.14,9.70">An MPI+X vector was further added on top of the many-vector to streamline the introduction of new vectors supporting various approaches to on-node parallelism with heterogeneous computing platforms.</s><s xml:id="_v89Cqpj" coords="20,349.34,226.79,181.95,9.70;20,80.70,238.74,292.67,9.70">New fused operations better utilize available hardware and enable development of reduced communication algorithms.</s><s xml:id="_ReFfCx3" coords="20,375.63,238.74,156.04,9.70;20,80.70,250.70,263.76,9.70">Lastly, modern Fortran interfaces allow full access to the lexibility provided with the SUNDIALS classes.</s></p><p xml:id="_8pH3e9H"><s xml:id="_NJghHmw" coords="20,90.66,262.66,440.64,9.70;20,80.70,274.61,190.95,9.70">Numerical tests have shown that the new infrastructure retains the existing behavior of the time integrators and does not increase the cost of simulations.</s><s xml:id="_jq8V9pJ" coords="20,274.60,274.61,256.71,9.70;20,80.70,286.57,450.61,9.70;20,80.70,298.52,36.59,9.70">Moreover, the results demonstrate the power of being able to easily compare the performance of fundamentally diferent integrators and solver approaches within the same problem.</s><s xml:id="_wgWd9BV" coords="20,119.98,298.52,411.32,9.70;20,80.70,310.48,343.80,9.70">Signiicant speedups were also shown when leveraging the new nonlinear solver class to provide a problem-speciic solver exploiting the structure and locality in the nonlinear system.</s></p><p xml:id="_MaE94Hh"><s xml:id="_NweRzHQ" coords="20,90.66,322.43,442.33,9.70;20,80.70,334.39,450.79,9.70;20,80.70,346.34,361.49,9.70">With these new capabilities in place, future work includes implementing new vectors and matrices to accommodate more types of on-node parallelism, investigating algorithms that leverage fused operations for greater performance, and expanding the set of native solver interfaces provided with SUNDIALS.</s><s xml:id="_CDcbDEW" coords="20,444.68,346.34,86.62,9.70;20,80.70,358.30,450.61,9.70;20,80.70,370.25,51.39,9.70">Additionally, we plan to leverage the new many-vector implementation within SUNDIALS to exploit the structural features of diferent applications.</s></p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="5,80.70,322.11,450.60,8.05;5,80.70,333.07,277.77,8.05"><head>Fig. 1 .</head><label>1</label><figDesc><div><p xml:id="_2sVs3F7"><s xml:id="_yZMx8E8" coords="5,80.70,322.11,21.85,8.05">Fig. 1.</s><s xml:id="_VcCdw6S" coords="5,107.03,322.11,424.28,8.05;5,80.70,333.07,277.77,8.05">An overview of the SUNDIALS packages (CVODE, CVODES, IDA, IDAS, ARKODE, and KINSOL) and the four base classes (N_Vector, SUNMatrix, SUNLinearSolver, and SUNNonlinearSolver).</s></p></div></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="9,80.70,598.66,450.61,8.39;9,80.70,609.61,451.59,8.39;9,80.70,620.57,450.61,9.33;9,80.70,631.53,450.61,8.39;9,80.49,642.81,60.18,8.05"><head>Fig. 2 .</head><label>2</label><figDesc><div><p xml:id="_27qE7uj"><s xml:id="_d32HrkA" coords="9,80.70,598.98,21.50,8.05">Fig.2.</s><s xml:id="_cuPvFBb" coords="9,106.68,598.98,353.73,8.05">Example illustration of the data partitioning many-vector use case for a reactive flow simulation.</s><s xml:id="_rEAky3a" coords="9,462.64,598.66,68.66,8.39;9,80.70,609.94,249.20,8.05">The full state, w, is composed of subvectors for the fluid variables and chemical species.</s><s xml:id="_sS5wGAb" coords="9,332.14,609.61,200.15,8.39;9,80.70,620.57,434.19,9.33">The fluid quantities (density, ρ, momentum in the x, y, and z directions, m * , and total energy, e t ) are stored as parallel vectors each connected by their own communicator.</s><s xml:id="_YGGnQDS" coords="9,517.20,620.90,14.10,8.05;9,80.70,631.53,450.61,8.39;9,80.49,642.81,60.18,8.05">The chemical species, c, for local reactions are stored in separate task-specific vectors e.g., one or more serial, OpenMP, or GPU vectors per task.</s></p></div></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="18,80.70,346.60,450.61,8.05;18,80.70,357.56,450.60,8.05;18,80.70,368.52,445.65,8.05"><head>Fig. 3 .</head><label>3</label><figDesc><div><p xml:id="_BeKkd6D"><s xml:id="_HfKaaXj" coords="18,80.70,346.60,22.89,8.05">Fig.3.</s><s xml:id="_bCd3FE3" coords="18,108.07,346.60,423.24,8.05;18,80.70,357.56,293.66,8.05">Speedup results for various problem sizes for the SUNNonlinearSolver demonstration problem using a custom task-local nonlinear solver (red squares) and a global Newton solve (blue circles).</s><s xml:id="_yNVXCWJ" coords="18,376.61,357.56,154.69,8.05;18,80.70,368.52,445.65,8.05">Execution times are the average of 20 runs and each task-local solver data point is annotated with the approximate speedup achieved compared to the global solver.</s></p></div></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" coords="11,98.25,206.16,388.09,76.95"><head>Table 2 .</head><label>2</label><figDesc><div><p xml:id="_CFxXcFy"><s xml:id="_6tqvEU7" coords="11,252.11,206.16,139.96,8.05">Required SUNLinearSolver operations</s></p></div></figDesc><table coords="11,98.25,231.99,32.45,8.73"><row><cell>Function</cell></row></table><note coords="11,98.77,268.14,212.53,6.00;11,178.37,277.11,153.85,6.00"><p xml:id="_e86YRZC"><s xml:id="_9z748n9" coords="11,98.77,268.14,212.53,6.00;11,178.37,277.11,153.85,6.00">int SUNLinSolSolve ( SUNLinearSolver LS , SUNMatrix A , N_Vector x , N_Vector b , realtype tol )</s></p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" coords="11,98.25,484.49,417.02,122.40"><head>Table 3 .</head><label>3</label><figDesc><div><p xml:id="_xJrDMza"><s xml:id="_qHGJNrc" coords="11,235.39,484.49,173.39,8.05">Subset of optional SUNLinearSolver operations</s></p></div></figDesc><table coords="11,98.25,510.33,32.45,8.73"><row><cell>Function</cell></row></table><note coords="11,98.77,527.13,212.53,6.00"><p xml:id="_y4vd7eV"><s xml:id="_BnRxMP6" coords="11,98.77,527.13,212.53,6.00">int SUNLinSolSetup ( SUNLinearSolver LS , SUNMatrix A )</s></p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" coords="12,98.25,252.65,415.74,143.17"><head>Table 4 .</head><label>4</label><figDesc><div><p xml:id="_K9Ru2ay"><s xml:id="_cGrqwAB" coords="12,200.02,252.65,244.14,8.05">Subset of SUNMatrix operations: (R) are required, (O) are optional</s></p></div></figDesc><table coords="12,98.25,278.49,32.45,8.73"><row><cell>Function</cell></row></table><note coords="12,98.81,322.21,128.81,6.00;12,333.24,321.37,142.83,8.73;12,98.89,341.56,153.83,6.00;12,333.24,340.72,180.74,8.73;12,333.51,351.68,61.43,8.73;12,98.77,368.48,166.50,6.00;12,333.24,367.64,126.84,8.73;12,98.77,387.83,183.24,6.00;12,333.24,386.99,151.94,8.84"><p xml:id="_9QVgxaw"><s xml:id="_CJF4NKr" coords="12,98.81,322.21,128.81,6.00;12,333.24,321.37,142.83,8.73;12,98.89,341.56,153.83,6.00;12,333.24,340.72,180.74,8.73;12,333.51,351.68,61.43,8.73;12,98.77,368.48,166.50,6.00;12,333.24,367.64,126.84,8.73;12,98.77,387.83,183.24,6.00;12,333.24,386.99,151.94,8.84">void SUNMatDestroy ( SUNMatrix A ) (R) Frees all memory associated with A SUNMatrix_ID SUNMatGetID ( SUNMatrix A ) (O) Identiier used by SUNLinearSolvers to check for compatibility int SUNMatCopy ( SUNMatrix A , SUNMatrix B ) (O) Copies all values from A into B int SUNMatScaleAddI ( realtype c , SUNMatrix A ) (O) Performs the combination A ← cA + I</s></p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" coords="16,98.24,190.93,415.68,132.16"><head>Table 6 .</head><label>6</label><figDesc><div><p xml:id="_sm7RgEx"><s xml:id="_kJAhXMw" coords="16,245.41,190.93,153.35,8.05">Required SUNNonlinearSolver operations</s></p></div></figDesc><table coords="16,98.24,216.76,32.45,8.73"><row><cell>Function</cell></row></table><note coords="16,98.77,290.19,187.42,6.00;16,190.92,299.16,112.01,6.00;16,190.92,308.13,103.64,6.00;16,190.94,317.09,141.28,6.00"><p xml:id="_Z3QXCfu"><s xml:id="_8b3bsms" coords="16,98.77,290.19,187.42,6.00;16,190.92,299.16,112.01,6.00;16,190.92,308.13,103.64,6.00;16,190.94,317.09,141.28,6.00">int SUNNonlinSolSolve ( SUNNonlinearSolver NLS , N_Vector y0 , N_Vector ycor , N_Vector w , realtype tol , booleantype callLSetup , void * mem )</s></p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_9" coords="17,80.70,106.34,452.29,186.29"><head>Table 7 .</head><label>7</label><figDesc><div><p xml:id="_zU9gsu7"><s xml:id="_TQV9ywW" coords="17,228.70,106.34,186.79,8.05">Subset of optional SUNNonlinearSolver operations</s></p></div></figDesc><table coords="17,109.51,132.18,32.45,8.73"><row><cell>Function</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_0" coords="8,80.42,670.60,83.13,7.76;9,376.53,81.80,154.77,7.16"><p xml:id="_npT48PE"><s xml:id="_Db9Jfhy" coords="8,80.42,670.60,39.48,7.76">ACM Trans.</s><s xml:id="_XVKHfAn" coords="8,122.23,670.60,18.89,7.76">Math.</s><s xml:id="_y9Vvzgp" coords="8,143.44,670.60,20.11,7.76;9,376.53,81.80,154.77,7.16">Softw.Enabling New Flexibility in SUNDIALS • 0:9</s></p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_1" coords="10,80.42,670.60,83.13,7.76;11,372.83,81.80,158.48,7.16"><p xml:id="_TcK4yT5"><s xml:id="_pa4xCdA" coords="10,80.42,670.60,39.48,7.76">ACM Trans.</s><s xml:id="_E5Fy3Be" coords="10,122.23,670.60,18.89,7.76">Math.</s><s xml:id="_fUa3rmV" coords="10,143.44,670.60,20.11,7.76;11,372.83,81.80,158.48,7.16">Softw.Enabling New Flexibility in SUNDIALS • 0:11</s></p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_2" coords="14,80.42,670.60,83.13,7.76;15,372.83,81.80,158.48,7.16"><p xml:id="_KdApP2S"><s xml:id="_r9w7DyA" coords="14,80.42,670.60,39.48,7.76">ACM Trans.</s><s xml:id="_wVc822q" coords="14,122.23,670.60,18.89,7.76">Math.</s><s xml:id="_SHCEq59" coords="14,143.44,670.60,20.11,7.76;15,372.83,81.80,158.48,7.16">Softw.Enabling New Flexibility in SUNDIALS • 0:15</s></p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_3" coords="15,83.93,632.90,335.30,7.76"><p xml:id="_62vMVSc"><s xml:id="_6HAVPXC" coords="15,83.93,632.90,335.30,7.76">The implementation of CG in SUNDIALS v2.7.0 incorrectly used a WRMS norm rather than a weighted</s></p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_4" coords="15,421.22,632.90,111.30,7.76;15,80.42,642.87,322.57,7.76"><p xml:id="_AEWczyZ"><s xml:id="_9MFkWZK" coords="15,421.22,632.90,111.30,7.76">2-norm for checking convergence.</s><s xml:id="_cHyGpsa" coords="15,80.42,642.87,322.57,7.76">As such, the results presented are with a patched version of v2.7.0 updated to use the correct norm.</s></p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_5" coords="16,80.42,670.60,83.13,7.76;17,372.83,81.80,158.48,7.16"><p xml:id="_HkWQ9pb"><s xml:id="_MegShfV" coords="16,80.42,670.60,39.48,7.76">ACM Trans.</s><s xml:id="_Snq86Fk" coords="16,122.23,670.60,18.89,7.76">Math.</s><s xml:id="_8hd2NQ9" coords="16,143.44,670.60,20.11,7.76;17,372.83,81.80,158.48,7.16">Softw.Enabling New Flexibility in SUNDIALS • 0:17</s></p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head xml:id="_JwF9vkC">ACKNOWLEDGMENTS</head><p xml:id="_AyHU9WZ">The authors thank <rs type="person">Alan Hindmarsh</rs> for numerous discussions and insights into details of integrator controls on solvers and design of integrator codes.</p><p xml:id="_n8pTRvD">This research was supported by the <rs type="funder">Exascale Computing Project</rs>, (<rs type="grantNumber">17-SC-20-SC</rs>), a collaborative efort of the <rs type="funder">U.S. Department of Energy Oice of Science</rs> and the <rs type="funder">National Nuclear Security Administration</rs>.</p><p xml:id="_sSjEzJd">Support for this work was provided in part by the <rs type="funder">U.S. Department of Energy, Oice of Science, Oice of Advanced Scientiic Computing Research</rs>, <rs type="funder">Scientiic Discovery through Advanced Computing (SciDAC) Program</rs> through the <rs type="institution">Frameworks, Algorithms, and Scalable Technologies for Mathematics (FASTMath) Institute</rs>.</p><p xml:id="_HMCSeur">This work was performed under the auspices of the <rs type="funder">U.S. Department of Energy</rs> by <rs type="funder">Lawrence Livermore National Laboratory</rs> under contract <rs type="grantNumber">DE-AC52-07NA27344</rs>.<rs type="funder">Lawrence Livermore National Security</rs>, <rs type="grantNumber">LLC.LLNL-JRNL-816631</rs>.</p></div>
			</div>
			<div type="funding">
<div xml:id="_JZyjpBH"><p xml:id="_WqsGw5z">ACM acknowledges that this contribution was authored or co-authored by an employee, contractor, or ailiate of the United States government.As such, the United States government retains a nonexclusive, royalty-free right to publish or reproduce this article, or to allow others to do so, for government purposes only.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_eyyew39">
					<idno type="grant-number">17-SC-20-SC</idno>
				</org>
				<org type="funding" xml:id="_MUuJaMK">
					<idno type="grant-number">DE-AC52-07NA27344</idno>
				</org>
				<org type="funding" xml:id="_YZYKCnu">
					<idno type="grant-number">LLC.LLNL-JRNL-816631</idno>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct coords="20,97.77,553.44,434.05,7.76;20,97.77,563.40,46.23,7.76" xml:id="b0">
	<analytic>
		<title level="a" type="main" coord="20,186.44,553.44,166.75,7.76" xml:id="_Wk2aahK">Iterative Procedures for Nonlinear Integral Equations</title>
		<author>
			<persName coords=""><forename type="first">Donald</forename><forename type="middle">G</forename><surname>Anderson</surname></persName>
		</author>
		<idno type="DOI">10.1145/321296.321305</idno>
		<ptr target="https://doi.org/10.1145/321296.321305" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_ts8eyve" coord="20,359.35,553.66,23.06,7.54">Journal of the ACM</title>
		<title level="j" type="abbrev">J. ACM</title>
		<idno type="ISSN">0004-5411</idno>
		<idno type="ISSNe">1557-735X</idno>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="547" to="560" />
			<date type="published" when="1965-10">1965. 1965</date>
			<publisher>Association for Computing Machinery (ACM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Donald G. Anderson. 1965. Iterative procedures for nonlinear integral equations. J. ACM 12, 4 (1965), 547ś560. https://doi.org/10.1145/ 321296.321305</note>
</biblStruct>

<biblStruct coords="20,97.77,573.36,434.41,7.76;20,97.77,583.32,434.47,7.76;20,97.51,593.29,110.86,7.76" xml:id="b1">
	<analytic>
		<title level="a" type="main" xml:id="_35ZDYYj">LAPACK Users&apos; Guide</title>
		<author>
			<persName coords=""><forename type="first">E</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Z</forename><surname>Bai</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">C</forename><surname>Bischof</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">S</forename><surname>Blackford</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Demmel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Dongarra</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J</forename><surname>Du Croz</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Greenbaum</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">S</forename><surname>Hammarling</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Mckenney</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">D</forename><surname>Sorensen</surname></persName>
		</author>
		<idno type="DOI">10.1137/1.9780898719604</idno>
		<ptr target="https://doi.org/10.1137/1.9780898719604" />
	</analytic>
	<monogr>
		<title level="m" xml:id="_nrPCtpR" coord="20,176.35,583.55,71.29,7.54">LAPACK Users&apos; Guide</title>
		<meeting><address><addrLine>Philadelphia, PA</addrLine></address></meeting>
		<imprint>
			<publisher>Society for Industrial and Applied Mathematics</publisher>
			<date type="published" when="1999-01">1999</date>
		</imprint>
	</monogr>
	<note>third ed.</note>
	<note type="raw_reference">E. Anderson, Z. Bai, C. Bischof, S. Blackford, J. Demmel, J. Dongarra, J. Du Croz, A. Greenbaum, S. Hammarling, A. McKenney, and D. Sorensen. 1999. LAPACK Users&apos; Guide (third ed.). Society for Industrial and Applied Mathematics, Philadelphia, PA. https: //doi.org/10.1137/1.9780898719604</note>
</biblStruct>

<biblStruct coords="20,97.77,603.25,434.41,7.76;20,97.49,613.21,435.04,7.76;20,97.77,623.18,141.15,7.76" xml:id="b2">
	<analytic>
		<title level="a" type="main" coord="20,226.86,613.21,160.79,7.76" xml:id="_EDavgrB">MFEM: A modular finite element methods library</title>
		<author>
			<persName coords=""><forename type="first">Robert</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Julian</forename><surname>Andrej</surname></persName>
			<idno type="ORCID">0000-0001-7661-4840</idno>
		</author>
		<author>
			<persName coords=""><forename type="first">Andrew</forename><surname>Barker</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jamie</forename><surname>Bramwell</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jean-Sylvain</forename><surname>Camier</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jakub</forename><surname>Cerveny</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Veselin</forename><surname>Dobrev</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Yohann</forename><surname>Dudouit</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Aaron</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Tzanio</forename><surname>Kolev</surname></persName>
			<idno type="ORCID">0000-0002-2810-3090</idno>
		</author>
		<author>
			<persName><forename type="first">Will</forename><surname>Pazner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Stowell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vladimir</forename><surname>Tomov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ido</forename><surname>Akkerman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Johann</forename><surname>Dahm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Medina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Zampini</surname></persName>
			<idno type="ORCID">0000-0002-0435-0433</idno>
		</author>
		<idno type="DOI">10.1016/j.camwa.2020.06.009</idno>
		<ptr target="https://doi.org/10.1016/j.camwa.2020.06.009" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_RqWbNb8" coord="20,393.46,613.44,83.01,7.54">Computers &amp; Mathematics with Applications</title>
		<title level="j" type="abbrev">Computers &amp; Mathematics with Applications</title>
		<idno type="ISSN">0898-1221</idno>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<biblScope unit="page" from="42" to="74" />
			<date type="published" when="2021-01">2021. 2021</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Robert Anderson, Julian Andrej, Andrew Barker, Jamie Bramwell, Jean-Sylvain Camier, Jakub Cerveny, Veselin Dobrev, Yohann Dudouit, Aaron Fisher, Tzanio Kolev, et al. 2021. MFEM: A modular inite element methods library. Comput. Math. with Appl. 81 (2021), 42ś74. https://doi.org/10.1016/j.camwa.2020.06.009</note>
</biblStruct>

<biblStruct coords="20,97.77,633.14,433.68,7.76;20,97.77,643.10,391.27,7.76" xml:id="b3">
	<analytic>
		<title level="a" type="main" coord="20,382.03,633.14,149.43,7.76;20,97.77,643.10,106.08,7.76" xml:id="_yEhBuYH">CasADi ś A software framework for nonlinear optimization and optimal control</title>
		<author>
			<persName coords=""><forename type="first">A</forename><forename type="middle">E</forename><surname>Joel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Joris</forename><surname>Andersson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Greg</forename><surname>Gillis</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">James</forename><forename type="middle">B</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Moritz</forename><surname>Rawlings</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Diehl</surname></persName>
		</author>
		<idno type="DOI">10.1007/s12532-018-0139-4</idno>
		<ptr target="https://doi.org/10.1007/s12532-018-0139-4" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_4Me3cZG" coord="20,209.85,643.32,78.38,7.54">Math. Program. Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="1" to="36" />
			<date type="published" when="2019">2019. 2019</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Joel A. E. Andersson, Joris Gillis, Greg Horn, James B. Rawlings, and Moritz Diehl. 2019. CasADi ś A software framework for nonlinear optimization and optimal control. Math. Program. Comput. 11, 1 (2019), 1ś36. https://doi.org/10.1007/s12532-018-0139-4</note>
</biblStruct>

<biblStruct coords="21,97.77,108.70,434.41,7.76;21,97.77,118.67,434.41,7.76;21,97.77,128.63,433.53,7.76" xml:id="b4">
	<analytic>
		<title level="a" type="main" xml:id="_s3KS9AT">The deal.II library, Version 9.2</title>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><surname>Arndt</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Wolfgang</forename><surname>Bangerth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Bruno</forename><surname>Blais</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Thomas</forename><forename type="middle">C</forename><surname>Clevenger</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Marc</forename><surname>Fehling</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alexander</forename><forename type="middle">V</forename><surname>Grayver</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Timo</forename><surname>Heister</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Luca</forename><surname>Heltai</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Martin</forename><surname>Kronbichler</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Matthias</forename><surname>Maier</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Peter</forename><surname>Munch</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jean-Paul</forename><surname>Pelteret</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Reza</forename><surname>Rastak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ignacio</forename><surname>Tomas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Bruno</forename><surname>Turcksin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Zhuoran</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">David</forename><surname>Wells</surname></persName>
		</author>
		<idno type="DOI">10.1515/jnma-2020-0043</idno>
		<ptr target="https://doi.org/10.1515/jnma-2020-0043" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_5xWvCU7" coord="21,282.66,128.85,49.54,7.54">Journal of Numerical Mathematics</title>
		<idno type="ISSN">1570-2820</idno>
		<idno type="ISSNe">1569-3953</idno>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="131" to="146" />
			<date type="published" when="2020-09-25">2020. 2020</date>
			<publisher>Walter de Gruyter GmbH</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Daniel Arndt, Wolfgang Bangerth, Bruno Blais, Thomas C. Clevenger, Marc Fehling, Alexander V. Grayver, Timo Heister, Luca Heltai, Martin Kronbichler, Matthias Maier, Peter Munch, Jean-Paul Pelteret, Reza Rastak, Ignacio Thomas, Bruno Turcksin, Zhuoran Wang, and David Wells. 2020. The deal.II Library, Version 9.2. J. Numer. Math. 28, 3 (2020), 131ś146. https://doi.org/10.1515/jnma-2020-0043</note>
</biblStruct>

<biblStruct coords="21,97.77,138.59,433.53,7.76;21,97.77,148.56,386.76,7.76" xml:id="b5">
	<analytic>
		<title level="a" type="main" coord="21,306.96,138.59,224.34,7.76;21,97.77,148.56,69.93,7.76" xml:id="_QQgg8Gg">Implicit-explicit Runge-Kutta methods for time-dependent partial differential equations</title>
		<author>
			<persName coords=""><forename type="first">Uri</forename><forename type="middle">M</forename><surname>Ascher</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Steven</forename><forename type="middle">J</forename><surname>Ruuth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Raymond</forename><forename type="middle">J</forename><surname>Spiteri</surname></persName>
		</author>
		<idno type="DOI">10.1016/s0168-9274(97)00056-1</idno>
		<ptr target="https://doi.org/10.1016/S0168-9274(97)00056-1" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_9d8CAbT" coord="21,173.99,148.78,62.19,7.54">Applied Numerical Mathematics</title>
		<title level="j" type="abbrev">Applied Numerical Mathematics</title>
		<idno type="ISSN">0168-9274</idno>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">2-3</biblScope>
			<biblScope unit="page" from="151" to="167" />
			<date type="published" when="1997-11">1997. Nov 1997</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Uri M. Ascher, Steven J. Ruuth, and Raymond J. Spiteri. 1997. Implicit-Explicit Runge-Kutta Methods for Time-Dependent Partial Diferential Equations. Appl. Numer. Math. 25, 2-3 (Nov 1997), 151ś167. https://doi.org/10.1016/S0168-9274(97)00056-1</note>
</biblStruct>

<biblStruct coords="21,97.77,158.52,434.76,7.76;21,97.77,168.48,245.40,7.76" xml:id="b6">
	<analytic>
		<title level="a" type="main" coord="21,289.31,158.52,239.87,7.76" xml:id="_pUHknda">Implicit-Explicit Methods for Time-Dependent Partial Differential Equations</title>
		<author>
			<persName coords=""><forename type="first">Uri</forename><forename type="middle">M</forename><surname>Ascher</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Steven</forename><forename type="middle">J</forename><surname>Ruuth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Brian</forename><forename type="middle">T R</forename><surname>Wetton</surname></persName>
		</author>
		<idno type="DOI">10.1137/0732037</idno>
		<ptr target="https://doi.org/10.1137/0732037" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_YWEGG2W" coord="21,97.77,168.70,68.40,7.54">SIAM Journal on Numerical Analysis</title>
		<title level="j" type="abbrev">SIAM J. Numer. Anal.</title>
		<idno type="ISSN">0036-1429</idno>
		<idno type="ISSNe">1095-7170</idno>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="797" to="823" />
			<date type="published" when="1995-06">1995. 1995</date>
			<publisher>Society for Industrial &amp; Applied Mathematics (SIAM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Uri M. Ascher, Steven J. Ruuth, and Brian T. R. Wetton. 1995. Implicit-Explicit Methods for Time-Dependent Partial Diferential Equations. SIAM J. Numer. Anal. 32, 3 (1995), 797ś823. https://doi.org/10.1137/0732037</note>
</biblStruct>

<biblStruct coords="21,97.77,178.44,433.83,7.76;21,97.77,188.41,294.25,7.76" xml:id="b7">
	<analytic>
		<title level="a" type="main" coord="21,246.52,178.44,285.07,7.76;21,97.77,188.41,36.14,7.76" xml:id="_2hgdqxD">A Parallel Multigrid Preconditioned Conjugate Gradient Algorithm for Groundwater Flow Simulations</title>
		<author>
			<persName coords=""><forename type="first">Steven</forename><forename type="middle">F</forename><surname>Ashby</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Robert</forename><forename type="middle">D</forename><surname>Falgout</surname></persName>
		</author>
		<idno type="DOI">10.13182/nse96-a24230</idno>
		<ptr target="https://doi.org/10.13182/NSE96-A24230" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_vaNhuxz" coord="21,140.06,188.63,44.94,7.54">Nuclear Science and Engineering</title>
		<title level="j" type="abbrev">Nuclear Science and Engineering</title>
		<idno type="ISSN">0029-5639</idno>
		<idno type="ISSNe">1943-748X</idno>
		<imprint>
			<biblScope unit="volume">124</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="145" to="159" />
			<date type="published" when="1996-09">1996. 1996</date>
			<publisher>Informa UK Limited</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Steven F. Ashby and Robert D. Falgout. 1996. A parallel multigrid preconditioned conjugate gradient algorithm for groundwater low simulations. Nucl. Sci. Eng. 124, 1 (1996), 145ś159. https://doi.org/10.13182/NSE96-A24230</note>
</biblStruct>

<biblStruct coords="21,97.77,198.37,434.41,7.76;21,97.39,208.33,433.92,7.76;21,97.77,218.29,420.10,7.76" xml:id="b8">
	<monogr>
		<title level="m" type="main" xml:id="_m2Pta75">PETSc Users Manual (Revision 3.15)</title>
		<author>
			<persName coords=""><forename type="first">Satish</forename><surname>Balay</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Shrirang</forename><surname>Abhyankar</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Mark</forename><forename type="middle">F</forename><surname>Adams</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jed</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Peter</forename><surname>Brune</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Kris</forename><surname>Buschelman</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Lisandro</forename><surname>Dalcin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alp</forename><surname>Dener</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Victor</forename><surname>Eijkhout</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">William</forename><forename type="middle">D</forename><surname>Gropp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karpeyev</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Dinesh</forename><surname>Kaushik</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Matthew</forename><forename type="middle">G</forename><surname>Knepley</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Dave</forename><forename type="middle">A</forename><surname>May</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Lois</forename><forename type="middle">Curfman</forename><surname>Mcinnes</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Richard</forename><forename type="middle">Tran</forename><surname>Mills</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Todd</forename><surname>Munson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Karl</forename><surname>Rupp</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Patrick</forename><surname>Sanan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Barry</forename><forename type="middle">F</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Stefano</forename><surname>Zampini</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Hong</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Hong</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="DOI">10.2172/1814627</idno>
		<ptr target="https://petsc.org/" />
		<imprint>
			<date type="published" when="2021-03-30">2021</date>
			<publisher>Office of Scientific and Technical Information (OSTI)</publisher>
		</imprint>
	</monogr>
	<note>PETSc Web page</note>
	<note type="raw_reference">Satish Balay, Shrirang Abhyankar, Mark F. Adams, Jed Brown, Peter Brune, Kris Buschelman, Lisandro Dalcin, Alp Dener, Victor Eijkhout, William D. Gropp, Dinesh Kaushik, Matthew G. Knepley, Dave A. May, Lois Curfman McInnes, Richard Tran Mills, Todd Munson, Karl Rupp, Patrick Sanan, Barry F. Smith, Stefano Zampini, Hong Zhang, and Hong Zhang. 2021. PETSc Web page. https://petsc.org/.</note>
</biblStruct>

<biblStruct coords="21,97.77,228.26,434.41,7.76;21,97.39,238.22,433.92,7.76;21,97.77,248.18,433.54,7.76;21,97.49,258.14,186.77,7.76" xml:id="b9">
	<analytic>
		<title level="a" type="main" xml:id="_mhgGx65">PETSc Users Manual (Revision 3.15)</title>
		<author>
			<persName coords=""><forename type="first">Satish</forename><surname>Balay</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Shrirang</forename><surname>Abhyankar</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Mark</forename><forename type="middle">F</forename><surname>Adams</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jed</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Peter</forename><surname>Brune</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Kris</forename><surname>Buschelman</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Lisandro</forename><surname>Dalcin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alp</forename><surname>Dener</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Victor</forename><surname>Eijkhout</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">William</forename><forename type="middle">D</forename><surname>Gropp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karpeyev</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Dinesh</forename><surname>Kaushik</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Matthew</forename><forename type="middle">G</forename><surname>Knepley</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Dave</forename><forename type="middle">A</forename><surname>May</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Lois</forename><forename type="middle">Curfman</forename><surname>Mcinnes</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Richard</forename><forename type="middle">Tran</forename><surname>Mills</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Todd</forename><surname>Munson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Karl</forename><surname>Rupp</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Patrick</forename><surname>Sanan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Barry</forename><forename type="middle">F</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Stefano</forename><surname>Zampini</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Hong</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Hong</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="DOI">10.2172/1814627</idno>
		<idno>ANL-95/11 -Revision 3.15</idno>
	</analytic>
	<monogr>
		<title level="m" xml:id="_hCawupk" coord="21,404.28,248.40,63.63,7.54">PETSc Users Manual</title>
		<imprint>
			<publisher>Office of Scientific and Technical Information (OSTI)</publisher>
			<date type="published" when="2021-03-30">2021</date>
		</imprint>
		<respStmt>
			<orgName>Argonne National Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note type="raw_reference">Satish Balay, Shrirang Abhyankar, Mark F. Adams, Jed Brown, Peter Brune, Kris Buschelman, Lisandro Dalcin, Alp Dener, Victor Eijkhout, William D. Gropp, Dinesh Kaushik, Matthew G. Knepley, Dave A. May, Lois Curfman McInnes, Richard Tran Mills, Todd Munson, Karl Rupp, Patrick Sanan, Barry F. Smith, Stefano Zampini, Hong Zhang, and Hong Zhang. 2021. PETSc Users Manual. Technical Report ANL-95/11 -Revision 3.15. Argonne National Laboratory.</note>
</biblStruct>

<biblStruct coords="21,97.77,268.11,433.53,7.76;21,97.77,278.07,383.30,7.76" xml:id="b10">
	<analytic>
		<title level="a" type="main" coord="21,380.22,268.11,151.08,7.76;21,97.77,278.07,117.61,7.76" xml:id="_Gn3VVF3">Enabling GPU accelerated computing in the SUNDIALS time integration library</title>
		<author>
			<persName coords=""><forename type="first">Cody</forename><forename type="middle">J</forename><surname>Balos</surname></persName>
			<idno type="ORCID">0000-0001-9138-0720</idno>
		</author>
		<author>
			<persName coords=""><forename type="first">David</forename><forename type="middle">J</forename><surname>Gardner</surname></persName>
			<idno type="ORCID">0000-0002-7993-8282</idno>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
			<idno type="ORCID">0000-0002-6502-8659</idno>
		</author>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Reynolds</surname></persName>
			<idno type="ORCID">0000-0002-0911-7841</idno>
		</author>
		<idno type="DOI">10.1016/j.parco.2021.102836</idno>
		<ptr target="https://doi.org/10.1016/j.parco.2021.102836" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_2UEQyUX" coord="21,221.42,278.29,53.07,7.54">Parallel Computing</title>
		<title level="j" type="abbrev">Parallel Computing</title>
		<idno type="ISSN">0167-8191</idno>
		<imprint>
			<biblScope unit="volume">108</biblScope>
			<biblScope unit="page">102836</biblScope>
			<date type="published" when="2021-12">2021. 2021</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Cody J. Balos, David J. Gardner, Carol S. Woodward, and Daniel R. Reynolds. 2021. Enabling GPU Accelerated Computing in the SUNDIALS Time Integration Library. Parallel Comput. 108 (2021), 102836. https://doi.org/10.1016/j.parco.2021.102836</note>
</biblStruct>

<biblStruct coords="21,97.77,288.03,434.33,7.76;21,97.77,298.00,319.46,7.76" xml:id="b11">
	<monogr>
		<title level="m" type="main" coord="21,344.59,288.26,187.52,7.54;21,97.77,298.22,59.70,7.54" xml:id="_3aV9Wcm">Numerical solution of initial-value problems in diferentialalgebraic equations</title>
		<author>
			<persName coords=""><forename type="first">Kathryn</forename><surname>Eleda Brenan</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Stephen</forename><forename type="middle">L</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><forename type="middle">Ruth</forename><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1137/1.9781611971224</idno>
		<ptr target="https://doi.org/10.1137/1.9781611971224" />
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>SIAM Publications</publisher>
			<pubPlace>Philadelphia, PA</pubPlace>
		</imprint>
	</monogr>
	<note type="raw_reference">Kathryn Eleda Brenan, Stephen L. Campbell, and Linda Ruth Petzold. 1995. Numerical solution of initial-value problems in diferential- algebraic equations. SIAM Publications, Philadelphia, PA. https://doi.org/10.1137/1.9781611971224</note>
</biblStruct>

<biblStruct coords="21,97.77,307.96,434.40,7.76;21,97.59,317.92,182.42,7.76" xml:id="b12">
	<analytic>
		<title level="a" type="main" coord="21,307.43,307.96,130.18,7.76" xml:id="_KkR2WXu">VODE: A variable-coeicient ODE solver</title>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">George</forename><forename type="middle">D</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Byrne</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1137/0910062</idno>
		<ptr target="https://doi.org/10.1137/0910062" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_h8afMJ8" coord="21,443.43,308.18,88.74,7.54">SIAM J. Sci. Statist. Comput</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="1038" to="1051" />
			<date type="published" when="1989">1989. 1989</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Peter N. Brown, George D. Byrne, and Alan C. Hindmarsh. 1989. VODE: A variable-coeicient ODE solver. SIAM J. Sci. Statist. Comput. 10, 5 (1989), 1038ś1051. https://doi.org/10.1137/0910062</note>
</biblStruct>

<biblStruct coords="21,97.77,327.88,434.76,7.76;21,97.77,337.85,101.61,7.76" xml:id="b13">
	<analytic>
		<title level="a" type="main" coord="21,245.51,327.88,145.94,7.76" xml:id="_nhkkQEc">Matrix-free methods for stif systems of ODE&apos;s</title>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1137/0723039</idno>
		<ptr target="https://doi.org/10.1137/0723039" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_jC4Ensy" coord="21,397.62,328.11,66.49,7.54">SIAM J. Numer. Anal</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="610" to="638" />
			<date type="published" when="1986">1986. 1986</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Peter N. Brown and Alan C. Hindmarsh. 1986. Matrix-free methods for stif systems of ODE&apos;s. SIAM J. Numer. Anal. 23, 3 (1986), 610ś638. https://doi.org/10.1137/0723039</note>
</biblStruct>

<biblStruct coords="21,97.77,347.81,434.41,7.76;21,97.59,357.77,171.91,7.76" xml:id="b14">
	<analytic>
		<title level="a" type="main" coord="21,251.34,347.81,174.81,7.76" xml:id="_JA4ncYP">Reduced storage matrix methods in stif ODE systems</title>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1016/0096-3003(89)90110-0</idno>
		<ptr target="https://doi.org/10.1016/0096-3003(89)90110-0" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_JvztpNM" coord="21,432.50,348.03,66.69,7.54">Appl. Math. Comput</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="40" to="91" />
			<date type="published" when="1989">1989. 1989</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Peter N. Brown and Alan C. Hindmarsh. 1989. Reduced storage matrix methods in stif ODE systems. Appl. Math. Comput. 31 (1989), 40ś91. https://doi.org/10.1016/0096-3003(89)90110-0</note>
</biblStruct>

<biblStruct coords="21,97.77,367.73,433.53,7.76;21,97.77,377.70,281.06,7.76" xml:id="b15">
	<analytic>
		<title level="a" type="main" coord="21,300.93,367.73,230.37,7.76;21,97.77,377.70,24.12,7.76" xml:id="_g92NGtH">Using Krylov methods in the solution of large-scale diferential-algebraic systems</title>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><forename type="middle">R</forename><surname>Hindmarsh</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1137/0915088</idno>
		<ptr target="https://doi.org/10.1137/0915088" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_cSRfMHK" coord="21,128.20,377.92,66.22,7.54">SIAM J. Sci. Comput</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1467" to="1488" />
			<date type="published" when="1994">1994. 1994</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Peter N. Brown, Alan C. Hindmarsh, and Linda R. Petzold. 1994. Using Krylov methods in the solution of large-scale diferential-algebraic systems. SIAM J. Sci. Comput. 15, 6 (1994), 1467ś1488. https://doi.org/10.1137/0915088</note>
</biblStruct>

<biblStruct coords="21,97.77,387.66,434.76,7.76;21,97.77,397.62,287.85,7.76" xml:id="b16">
	<analytic>
		<title level="a" type="main" coord="21,301.53,387.66,227.62,7.76" xml:id="_xbBTNz7">Consistent initial condition calculation for diferential-algebraic systems</title>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><forename type="middle">R</forename><surname>Hindmarsh</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1137/S1064827595289996</idno>
		<ptr target="https://doi.org/10.1137/S1064827595289996" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_5DC3TRq" coord="21,97.77,397.84,66.21,7.54">SIAM J. Sci. Comput</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="1495" to="1512" />
			<date type="published" when="1998">1998. 1998</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Peter N. Brown, Alan C. Hindmarsh, and Linda R. Petzold. 1998. Consistent initial condition calculation for diferential-algebraic systems. SIAM J. Sci. Comput. 19, 5 (1998), 1495ś1512. https://doi.org/10.1137/S1064827595289996</note>
</biblStruct>

<biblStruct coords="21,97.77,407.58,433.53,7.76;21,97.53,417.55,158.15,7.76" xml:id="b17">
	<analytic>
		<title level="a" type="main" coord="21,226.53,407.58,191.36,7.76" xml:id="_qtEhD2q">Hybrid Krylov methods for nonlinear systems of equations</title>
		<author>
			<persName coords=""><forename type="first">N</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Youcef</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Saad</surname></persName>
		</author>
		<idno type="DOI">10.1137/0911026</idno>
		<ptr target="https://doi.org/10.1137/0911026" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_DRTKryD" coord="21,424.10,407.81,90.27,7.54">SIAM J. Sci. Statist. Comput</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="450" to="481" />
			<date type="published" when="1990">1990. 1990</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Peter N. Brown and Youcef Saad. 1990. Hybrid Krylov methods for nonlinear systems of equations. SIAM J. Sci. Statist. Comput. 11, 3 (1990), 450ś481. https://doi.org/10.1137/0911026</note>
</biblStruct>

<biblStruct coords="21,97.77,427.51,433.53,7.76;21,97.77,437.47,255.99,7.76" xml:id="b18">
	<analytic>
		<title level="a" type="main" coord="21,256.22,427.51,252.25,7.76" xml:id="_HJnjD4s">A Polyalgorithm for the Numerical Solution of Ordinary Differential Equations</title>
		<author>
			<persName coords=""><forename type="first">George</forename><forename type="middle">D</forename><surname>Byrne</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1145/355626.355636</idno>
		<ptr target="https://doi.org/10.1145/355626.355636" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_KTMZEDj" coord="21,514.72,427.73,16.58,7.54;21,97.77,437.69,69.64,7.54">ACM Transactions on Mathematical Software</title>
		<title level="j" type="abbrev">ACM Trans. Math. Softw.</title>
		<idno type="ISSN">0098-3500</idno>
		<idno type="ISSNe">1557-7295</idno>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="71" to="96" />
			<date type="published" when="1975-03">1975. 1975</date>
			<publisher>Association for Computing Machinery (ACM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">George D. Byrne and Alan C. Hindmarsh. 1975. A polyalgorithm for the numerical solution of ordinary diferential equations. ACM Trans. Math. Software 1, 1 (1975), 71ś96. https://doi.org/10.1145/355626.355636</note>
</biblStruct>

<biblStruct coords="21,97.77,447.43,433.71,7.76;21,97.53,457.40,191.52,7.76" xml:id="b19">
	<analytic>
		<title level="a" type="main" coord="21,255.32,447.43,200.23,7.76" xml:id="_tDVQKYe">Stiff ODE solvers: A review of current and coming attractions</title>
		<author>
			<persName coords=""><forename type="first">George</forename><forename type="middle">D</forename><surname>Byrne</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1016/0021-9991(87)90001-5</idno>
		<ptr target="https://doi.org/10.1016/0021-9991(87)90001-5" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_3xRwg9j" coord="21,461.47,447.66,53.09,7.54">Journal of Computational Physics</title>
		<title level="j" type="abbrev">Journal of Computational Physics</title>
		<idno type="ISSN">0021-9991</idno>
		<imprint>
			<biblScope unit="volume">70</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="62" />
			<date type="published" when="1987-05">1987. 1987</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">George D. Byrne and Alan C. Hindmarsh. 1987. Stif ODE solvers: A review of current and coming attractions. J. Comput. Phys. 70, 1 (1987), 1ś62. https://doi.org/10.1016/0021-9991(87)90001-5</note>
</biblStruct>

<biblStruct coords="21,97.77,467.36,433.53,7.76;21,97.77,477.32,430.55,7.76" xml:id="b20">
	<analytic>
		<title level="a" type="main" coord="21,292.83,467.36,238.47,7.76;21,97.77,477.32,125.56,7.76" xml:id="_YQfGNUc">Adjoint sensitivity analysis for differential-algebraic equations: algorithms and software</title>
		<author>
			<persName coords=""><forename type="first">Yang</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Shengtai</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1016/s0377-0427(02)00528-9</idno>
		<ptr target="https://doi.org/10.1016/S0377-0427(02)00528-9" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_juQqVDz" coord="21,229.34,477.55,66.21,7.54">Journal of Computational and Applied Mathematics</title>
		<title level="j" type="abbrev">Journal of Computational and Applied Mathematics</title>
		<idno type="ISSN">0377-0427</idno>
		<imprint>
			<biblScope unit="volume">149</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="171" to="191" />
			<date type="published" when="2003">2003. 2003</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Yang Cao, Shengtai Li, Linda Petzold, and Radu Serban. 2003. Adjoint sensitivity analysis for diferential-algebraic equations: The adjoint DAE system and its numerical solution. SIAM J. Sci. Comput. 24, 3 (2003), 1076ś1089. https://doi.org/10.1016/S0377-0427(02)00528-9</note>
</biblStruct>

<biblStruct coords="21,97.77,487.29,434.48,7.76;21,97.51,497.25,120.83,7.76" xml:id="b21">
	<monogr>
		<title level="m" type="main" coord="21,270.36,487.51,61.01,7.54" xml:id="_xtpTQTr">The NEURON Book</title>
		<author>
			<persName coords=""><forename type="first">Nicholas</forename><forename type="middle">T</forename><surname>Carnevale</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Michael</forename><forename type="middle">L</forename><surname>Hines</surname></persName>
		</author>
		<idno type="DOI">10.1017/cbo9780511541612</idno>
		<ptr target="https://doi.org/10.1017/CBO9780511541612" />
		<imprint>
			<date type="published" when="2006-01-12">2006</date>
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, England</pubPlace>
		</imprint>
	</monogr>
	<note type="raw_reference">Nicholas T. Carnevale and Michael L. Hines. 2006. The NEURON Book. Cambridge University Press, Cambridge, England. https: //doi.org/10.1017/CBO9780511541612</note>
</biblStruct>

<biblStruct coords="21,97.77,507.21,357.00,7.76" xml:id="b22">
	<analytic>
		<title level="a" type="main" xml:id="_wc2xBvG">Modifying a Sparse Cholesky Factorization</title>
		<author>
			<persName><forename type="first">Timothy</forename><forename type="middle">A</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">W</forename><surname>Hager</surname></persName>
		</author>
		<idno type="DOI">10.1137/s0895479897321076</idno>
		<ptr target="http://faculty.cse.tamu.edu/davis/suitesparse.html" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_FdWGNaW">SIAM Journal on Matrix Analysis and Applications</title>
		<title level="j" type="abbrev">SIAM J. Matrix Anal. &amp; Appl.</title>
		<idno type="ISSN">0895-4798</idno>
		<idno type="ISSNe">1095-7162</idno>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="606" to="627" />
			<date type="published" when="2020">2020</date>
			<publisher>Society for Industrial &amp; Applied Mathematics (SIAM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Tim Davis. 2020. KLU Sparse Matrix Factorization Library. http://faculty.cse.tamu.edu/davis/suitesparse.html.</note>
</biblStruct>

<biblStruct coords="21,97.77,517.17,433.54,7.76;21,97.77,527.14,281.99,7.76" xml:id="b23">
	<analytic>
		<title level="a" type="main" coord="21,273.05,517.17,235.74,7.76" xml:id="_gwy5xJA">Algorithm 907</title>
		<author>
			<persName><forename type="first">Timothy</forename><forename type="middle">A</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ekanathan</forename><surname>Palamadai Natarajan</surname></persName>
		</author>
		<idno type="DOI">10.1145/1824801.1824814</idno>
		<ptr target="https://doi.org/10.1145/1824801.1824814" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_m2JdQM5" coord="21,515.14,517.40,16.17,7.54;21,97.77,527.36,69.64,7.54">ACM Transactions on Mathematical Software</title>
		<title level="j" type="abbrev">ACM Trans. Math. Softw.</title>
		<idno type="ISSN">0098-3500</idno>
		<idno type="ISSNe">1557-7295</idno>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="17" />
			<date type="published" when="2010-09">2010. 2010</date>
			<publisher>Association for Computing Machinery (ACM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Tim Davis and Ekanathan Palamadai Natarajan. 2010. Algorithm 907: KLU, a direct sparse solver for circuit simulation problems. ACM Trans. Math. Software 37, 3 (2010), 36:1ś36:17. https://doi.org/10.1145/1824801.1824814</note>
</biblStruct>

<biblStruct coords="21,97.77,537.10,434.76,7.76;21,97.77,547.06,101.61,7.76" xml:id="b24">
	<analytic>
		<title level="a" type="main" coord="21,305.11,537.10,80.38,7.76" xml:id="_ePG3vB2">Inexact Newton Methods</title>
		<author>
			<persName coords=""><forename type="first">Ron</forename><forename type="middle">S</forename><surname>Dembo</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Stanley</forename><forename type="middle">C</forename><surname>Eisenstat</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Trond</forename><surname>Steihaug</surname></persName>
		</author>
		<idno type="DOI">10.1137/0719025</idno>
		<ptr target="https://doi.org/10.1137/0719025" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_U4kaPm7" coord="21,392.10,537.32,69.16,7.54">SIAM Journal on Numerical Analysis</title>
		<title level="j" type="abbrev">SIAM J. Numer. Anal.</title>
		<idno type="ISSN">0036-1429</idno>
		<idno type="ISSNe">1095-7170</idno>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="400" to="408" />
			<date type="published" when="1982-04">1982. 1982</date>
			<publisher>Society for Industrial &amp; Applied Mathematics (SIAM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Ron S. Dembo, Stanley C. Eisenstat, and Trond Steihaug. 1982. Inexact Newton methods. SIAM J. Numer. Anal. 19, 2 (1982), 400ś408. https://doi.org/10.1137/0719025</note>
</biblStruct>

<biblStruct coords="21,97.77,557.02,433.53,7.76;21,97.77,566.99,342.49,7.76" xml:id="b25">
	<analytic>
		<title level="a" type="main" coord="21,297.46,557.02,233.84,7.76;21,97.77,566.99,36.57,7.76" xml:id="_YyB9ST4">An Asynchronous Parallel Supernodal Algorithm for Sparse Gaussian Elimination</title>
		<author>
			<persName coords=""><forename type="first">James</forename><forename type="middle">W</forename><surname>Demmel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">John</forename><forename type="middle">R</forename><surname>Gilbert</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Xiaoye</forename><forename type="middle">S</forename><surname>Li</surname></persName>
		</author>
		<idno type="DOI">10.1137/s0895479897317685</idno>
		<ptr target="https://doi.org/10.1137/S0895479897317685" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_CAYaEtt" coord="21,140.53,567.21,85.51,7.54">SIAM Journal on Matrix Analysis and Applications</title>
		<title level="j" type="abbrev">SIAM J. Matrix Anal. &amp; Appl.</title>
		<idno type="ISSN">0895-4798</idno>
		<idno type="ISSNe">1095-7162</idno>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="915" to="952" />
			<date type="published" when="1999-01">1999. 1999</date>
			<publisher>Society for Industrial &amp; Applied Mathematics (SIAM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">James W. Demmel, John R. Gilbert, and Xiaoye S. Li. 1999. An Asynchronous Parallel Supernodal Algorithm for Sparse Gaussian Elimination. SIAM J. Matrix Anal. Appl. 20, 4 (1999), 915ś952. https://doi.org/10.1137/S0895479897317685</note>
</biblStruct>

<biblStruct coords="21,97.77,576.95,433.53,7.76;21,97.77,586.91,233.23,7.76" xml:id="b26">
	<monogr>
		<title level="m" type="main" coord="21,261.46,577.17,244.04,7.54" xml:id="_EFUKSMX">Numerical Methods for Unconstrained Optimization and Nonlinear Equations</title>
		<author>
			<persName coords=""><forename type="first">John</forename><forename type="middle">E</forename><surname>Dennis</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Robert</forename><forename type="middle">B</forename><surname>Schnabel</surname></persName>
		</author>
		<idno type="DOI">10.1137/1.9781611971200</idno>
		<ptr target="https://doi.org/10.1137/1.9781611971200" />
		<imprint>
			<date type="published" when="1996-01">1996</date>
			<publisher>Society for Industrial and Applied Mathematics</publisher>
			<pubPlace>Philadelphia, PA</pubPlace>
		</imprint>
	</monogr>
	<note type="raw_reference">John E. Dennis, Jr and Robert B. Schnabel. 1996. Numerical methods for unconstrained optimization and nonlinear equations. SIAM Publications, Philadelphia, PA. https://doi.org/10.1137/1.9781611971200</note>
</biblStruct>

<biblStruct coords="21,97.77,596.87,433.53,7.76;21,97.77,606.84,412.91,7.76" xml:id="b27">
	<analytic>
		<title level="a" type="main" coord="21,393.93,596.87,137.37,7.76;21,97.77,606.84,147.17,7.76" xml:id="_TdvAEQq">A numerical algorithm for the solution of a phase-field model of polycrystalline materials</title>
		<author>
			<persName coords=""><forename type="first">Milo</forename><forename type="middle">R</forename><surname>Dorr</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">J-L</forename><surname>Fattebert</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Michael</forename><forename type="middle">E</forename><surname>Wickett</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">James</forename><forename type="middle">F</forename><surname>Belak</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Patrice</forename><forename type="middle">E A</forename><surname>Turchi</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jcp.2009.09.041</idno>
		<ptr target="https://doi.org/10.1016/j.jcp.2009.09.041" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_najJzGP" coord="21,250.99,607.06,52.76,7.54">Journal of Computational Physics</title>
		<title level="j" type="abbrev">Journal of Computational Physics</title>
		<idno type="ISSN">0021-9991</idno>
		<imprint>
			<biblScope unit="volume">229</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="626" to="641" />
			<date type="published" when="2010-02">2010. 2010</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Milo R. Dorr, J-L Fattebert, Michael E. Wickett, James F. Belak, and Patrice E.A. Turchi. 2010. A numerical algorithm for the solution of a phase-ield model of polycrystalline materials. J. Comput. Phys. 229, 3 (2010), 626ś641. https://doi.org/10.1016/j.jcp.2009.09.041</note>
</biblStruct>

<biblStruct coords="21,97.77,616.80,434.76,7.76;21,97.77,626.76,294.42,7.76" xml:id="b28">
	<analytic>
		<title level="a" type="main" coord="21,335.47,616.80,193.77,7.76" xml:id="_UCDWcMR">BOUT++: A framework for parallel plasma fluid simulations</title>
		<author>
			<persName coords=""><forename type="first">B</forename><forename type="middle">D</forename><surname>Dudson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">M</forename><forename type="middle">V</forename><surname>Umansky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">Q</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">B</forename><surname>Snyder</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">H</forename><forename type="middle">R</forename><surname>Wilson</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.cpc.2009.03.008</idno>
		<ptr target="https://doi.org/10.1016/j.cpc.2009.03.008" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_94ng5Dt" coord="21,97.77,626.99,78.70,7.54">Computer Physics Communications</title>
		<title level="j" type="abbrev">Computer Physics Communications</title>
		<idno type="ISSN">0010-4655</idno>
		<imprint>
			<biblScope unit="volume">180</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1467" to="1480" />
			<date type="published" when="2009-09">2009. 2009</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">B.D. Dudson, M.V. Umansky, XQ Xu, P.B. Snyder, and H.R. Wilson. 2009. BOUT++: A framework for parallel plasma luid simulations. Comput. Phys. Commun. 180, 9 (2009), 1467ś1480. https://doi.org/10.1016/j.cpc.2009.03.008</note>
</biblStruct>

<biblStruct coords="21,97.77,636.72,434.76,7.76;21,97.77,646.69,252.81,7.76" xml:id="b29">
	<analytic>
		<title level="a" type="main" coord="21,154.39,636.72,374.92,7.76" xml:id="_YSkdECa">Convergence Results for a Coordinate Projection Method Applied to Mechanical Systems with Algebraic Constraints</title>
		<author>
			<persName coords=""><forename type="first">Edda</forename><surname>Eich</surname></persName>
		</author>
		<idno type="DOI">10.1137/0730076</idno>
		<ptr target="https://doi.org/10.1137/0730076" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_EfSTdWX" coord="21,97.77,646.91,68.40,7.54">SIAM Journal on Numerical Analysis</title>
		<title level="j" type="abbrev">SIAM J. Numer. Anal.</title>
		<idno type="ISSN">0036-1429</idno>
		<idno type="ISSNe">1095-7170</idno>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1467" to="1482" />
			<date type="published" when="1993-10">1993. 1993</date>
			<publisher>Society for Industrial &amp; Applied Mathematics (SIAM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Edda Eich. 1993. Convergence results for a coordinate projection method applied to mechanical systems with algebraic constraints. SIAM J. Numer. Anal. 30, 5 (1993), 1467ś1482. https://doi.org/10.1137/0730076</note>
</biblStruct>

<biblStruct coords="22,97.77,108.70,434.41,7.76;22,97.77,118.67,220.63,7.76" xml:id="b30">
	<analytic>
		<title level="a" type="main" coord="22,239.21,108.70,148.48,7.76" xml:id="_dpjjbKR">Multigrid on Massively Parallel Architectures</title>
		<author>
			<persName coords=""><forename type="first">Robert</forename><forename type="middle">D</forename><surname>Falgout</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jim</forename><forename type="middle">E</forename><surname>Jones</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-58312-4_13</idno>
		<ptr target="https://doi.org/10.1007/978-3-642-58312-4_13" />
	</analytic>
	<monogr>
		<title level="m" xml:id="_cWn8hCr" coord="22,404.28,108.93,68.38,7.54">Lecture Notes in Computational Science and Engineering</title>
		<meeting><address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Berlin Heidelberg</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="101" to="107" />
		</imprint>
	</monogr>
	<note type="raw_reference">Robert D. Falgout and Jim E. Jones. 2000. Multigrid on massively parallel architectures. In Multigrid Methods VI. Springer, Berlin, Heidelberg, 101ś107. https://doi.org/10.1007/978-3-642-58312-4_13</note>
</biblStruct>

<biblStruct coords="22,97.77,128.63,434.76,7.76;22,97.77,138.59,280.13,7.76" xml:id="b31">
	<analytic>
		<title level="a" type="main" coord="22,296.97,128.63,232.11,7.76" xml:id="_wk2hmn4">Efficient sensitivity analysis of large-scale differential-algebraic systems</title>
		<author>
			<persName coords=""><forename type="first">William</forename><forename type="middle">F</forename><surname>Feehery</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">John</forename><forename type="middle">E</forename><surname>Tolsma</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Paul</forename><forename type="middle">I</forename><surname>Barton</surname></persName>
		</author>
		<idno type="DOI">10.1016/s0168-9274(97)00050-0</idno>
		<ptr target="https://doi.org/10.1016/S0168-9274(97)00050-0" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_66Pmzpa" coord="22,97.77,138.82,62.19,7.54">Applied Numerical Mathematics</title>
		<title level="j" type="abbrev">Applied Numerical Mathematics</title>
		<idno type="ISSN">0168-9274</idno>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="41" to="54" />
			<date type="published" when="1997-10">1997. 1997</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">William F. Feehery, John E. Tolsma, and Paul I. Barton. 1997. Eicient sensitivity analysis of large-scale diferential-algebraic systems. Appl. Numer. Math. 25, 1 (1997), 41ś54. https://doi.org/10.1016/S0168-9274(97)00050-0</note>
</biblStruct>

<biblStruct coords="22,97.77,148.56,434.41,7.76;22,97.77,158.52,434.48,7.76;22,97.51,168.48,118.17,7.76" xml:id="b32">
	<analytic>
		<title level="a" type="main" coord="22,502.07,148.56,30.11,7.76;22,97.77,158.52,261.77,7.76" xml:id="_tbRmnd3">Implicit–explicit (IMEX) Runge–Kutta methods for non-hydrostatic atmospheric models</title>
		<author>
			<persName coords=""><forename type="first">David</forename><forename type="middle">J</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jorge</forename><forename type="middle">E</forename><surname>Guerra</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">François</forename><forename type="middle">P</forename><surname>Hamon</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Reynolds</surname></persName>
			<idno type="ORCID">0000-0002-0911-7841</idno>
		</author>
		<author>
			<persName coords=""><forename type="first">Paul</forename><forename type="middle">A</forename><surname>Ullrich</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
			<idno type="ORCID">0000-0002-6502-8659</idno>
		</author>
		<idno type="DOI">10.5194/gmd-11-1497-2018</idno>
		<ptr target="https://doi.org/10.5194/gmd-11-1497-2018" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_HVxEwgb" coord="22,366.91,158.74,60.26,7.54">Geoscientific Model Development</title>
		<title level="j" type="abbrev">Geosci. Model Dev.</title>
		<idno type="ISSNe">1991-9603</idno>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1497" to="1515" />
			<date type="published" when="2018-04-17">2018. 2018</date>
			<publisher>Copernicus GmbH</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">David J. Gardner, Jorge E. Guerra, François P. Hamon, Daniel R. Reynolds, Paul A. Ullrich, and Carol S. Woodward. 2018. Implicitś explicit (IMEX) RungeśKutta methods for non-hydrostatic atmospheric models. Geosci. Model Dev. 11, 4 (2018), 1497ś1515. https: //doi.org/10.5194/gmd-11-1497-2018</note>
</biblStruct>

<biblStruct coords="22,97.77,178.44,433.54,7.76;22,97.77,188.41,433.53,7.76" xml:id="b33">
	<analytic>
		<title level="a" type="main" coord="22,466.95,178.44,64.35,7.76;22,97.77,188.41,106.61,7.76" xml:id="_T4DxF5c">Implicit integration methods for dislocation dynamics</title>
		<author>
			<persName coords=""><forename type="first">David</forename><forename type="middle">J</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Gregg</forename><surname>Hommes</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Sylvie</forename><surname>Aubry</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">A</forename><surname>Arsenlis</surname></persName>
		</author>
		<idno type="DOI">10.1088/0965-0393/23/2/025006</idno>
		<ptr target="https://doi.org/10.1088/0965-0393/23/2/025006" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_MPzc5B4" coord="22,210.84,188.63,102.76,7.54">Modelling and Simulation in Materials Science and Engineering</title>
		<title level="j" type="abbrev">Modelling Simul. Mater. Sci. Eng.</title>
		<idno type="ISSN">0965-0393</idno>
		<idno type="ISSNe">1361-651X</idno>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">025006</biblScope>
			<date type="published" when="2015-01-20">2015. 2015</date>
			<publisher>IOP Publishing</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">David J. Gardner, Carol S. Woodward, Daniel R. Reynolds, Gregg Hommes, Sylvie Aubry, and A. Arsenlis. 2015. Implicit integration methods for dislocation dynamics. Modelling Simul. Mater. Sci. Eng. 23, 2 (2015), 025006. https://doi.org/10.1088/0965-0393/23/2/025006</note>
</biblStruct>

<biblStruct coords="22,97.77,198.37,433.53,7.76;22,97.77,208.33,433.53,7.76;22,97.51,218.29,43.06,7.76" xml:id="b34">
	<monogr>
		<author>
			<persName coords=""><forename type="first">G</forename><surname>David</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Raymond</forename><forename type="middle">L</forename><surname>Goodwin</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Harry</forename><forename type="middle">K</forename><surname>Speth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Bryan</forename><forename type="middle">W</forename><surname>Mofat</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Weber</surname></persName>
		</author>
		<idno type="DOI">10.5281/zenodo.1174508</idno>
		<ptr target="https://doi.org/10.5281/zenodo.1174508Version2.4.0" />
		<title level="m" xml:id="_mV47zEm" coord="22,379.02,198.37,152.28,7.76;22,97.77,208.33,213.53,7.76">Cantera: An Object-oriented Software Toolkit for Chemical Kinetics, Thermodynamics, and Transport Processes</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="raw_reference">David G. Goodwin, Raymond L. Speth, Harry K. Mofat, and Bryan W. Weber. 2018. Cantera: An Object-oriented Software Toolkit for Chemical Kinetics, Thermodynamics, and Transport Processes. https://www.cantera.org. https://doi.org/10.5281/zenodo.1174508 Version 2.4.0.</note>
</biblStruct>

<biblStruct coords="22,97.77,228.26,434.88,7.76;22,97.12,238.22,228.22,7.76" xml:id="b35">
	<monogr>
		<title level="m" type="main" coord="22,289.40,228.48,186.62,7.54" xml:id="_NFhhYUK">Solving Ordinary Differential Equations I</title>
		<author>
			<persName coords=""><forename type="first">Ernst</forename><surname>Hairer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Syvert</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Gerhard</forename><surname>Nùrsett</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Wanner</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-78862-1</idno>
		<ptr target="https://doi.org/10.1007/978-3-540-78862-1" />
		<imprint>
			<date type="published" when="1993">1993</date>
			<publisher>Springer Berlin Heidelberg</publisher>
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
	<note>2 ed.</note>
	<note type="raw_reference">Ernst Hairer, Syvert P. Nùrsett, and Gerhard Wanner. 1993. Solving Ordinary Diferential Equations I: Nonstif Problems (2 ed.). Springer- Verlag, Berlin, Heidelberg. https://doi.org/10.1007/978-3-540-78862-1</note>
</biblStruct>

<biblStruct coords="22,97.77,248.18,434.76,7.76;22,97.77,258.14,256.72,7.76" xml:id="b36">
	<monogr>
		<title level="m" type="main" coord="22,236.59,248.40,271.18,7.54" xml:id="_7S5keYz">Solving Ordinary Differential Equations II</title>
		<author>
			<persName coords=""><forename type="first">Ernst</forename><surname>Hairer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Gerhard</forename><surname>Wanner</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-05221-7</idno>
		<ptr target="https://doi.org/10.1007/978-3-642-05221-7" />
		<imprint>
			<date type="published" when="1996">1996</date>
			<publisher>Springer Berlin Heidelberg</publisher>
			<pubPlace>Berlin Heidelberg</pubPlace>
		</imprint>
	</monogr>
	<note>2 ed.</note>
	<note type="raw_reference">Ernst Hairer and Gerhard Wanner. 1996. Solving Ordinary Diferential Equations II: Stif and Diferential-Algebraic Problems (2 ed.). Springer-Verlag, Berlin Heidelberg. https://doi.org/10.1007/978-3-642-05221-7</note>
</biblStruct>

<biblStruct coords="22,97.77,268.11,433.72,7.76;22,97.53,278.07,178.43,7.76" xml:id="b37">
	<analytic>
		<title level="a" type="main" coord="22,182.52,268.11,250.84,7.76" xml:id="_KK4HM67">LSODE and LSODI, two new initial value ordinary differential equation solvers</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1145/1218052.1218054</idno>
		<ptr target="https://doi.org/10.1145/1218052.1218054" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_E3fPzCD" coord="22,439.22,268.33,75.68,7.54">ACM SIGNUM Newsletter</title>
		<title level="j" type="abbrev">SIGNUM Newsl.</title>
		<idno type="ISSN">0163-5778</idno>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="10" to="11" />
			<date type="published" when="1980-12">1980. 1980</date>
			<publisher>Association for Computing Machinery (ACM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Alan C. Hindmarsh. 1980. LSODE and LSODI, two new initial value ordinary diferential equation solvers. ACM SIGNUM Newslett. 15, 4 (1980), 10ś11. https://doi.org/10.1145/1218052.1218054</note>
</biblStruct>

<biblStruct coords="22,97.77,288.03,433.53,7.76;22,97.77,298.00,434.76,7.76;22,97.49,307.96,219.50,7.76" xml:id="b38">
	<analytic>
		<title level="a" type="main" coord="22,182.18,288.03,165.99,7.76" xml:id="_mxkPwdK">ODEPACK, a systematized collection of ODE solvers</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m" xml:id="_Rgza9xz" coord="22,361.56,288.26,169.74,7.54;22,97.77,298.22,113.37,7.54">Scientiic Computing: Applications of Mathematics and Computing to the Physical Sciences</title>
		<editor>
			<persName><forename type="first">Robert</forename><forename type="middle">S</forename><surname>Stepleman</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><surname>Carver</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">William</forename><forename type="middle">F</forename><surname>Ames</surname></persName>
		</editor>
		<meeting><address><addrLine>North-Holland, Amsterdam, Netherlands</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983">1983</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
	<note type="raw_reference">Alan C. Hindmarsh. 1983. ODEPACK, a systematized collection of ODE solvers. In Scientiic Computing: Applications of Mathematics and Computing to the Physical Sciences (IMACS transactions on scientiic computation, Vol. 1), Robert S. Stepleman, M. Carver, William F. Ames, et al. (Eds.). North-Holland, Amsterdam, Netherlands, 55ś64.</note>
</biblStruct>

<biblStruct coords="22,97.77,317.92,433.53,7.76;22,97.77,327.88,431.45,7.76" xml:id="b39">
	<analytic>
		<title level="a" type="main" coord="22,186.28,317.92,138.25,7.76" xml:id="_M7ca8zv">Avoiding BDF stability barriers in the MOL solution of advection-dominated problems</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1016/0168-9274(95)00036-t</idno>
	</analytic>
	<monogr>
		<title level="j" xml:id="_f2UQ2Cf">Applied Numerical Mathematics</title>
		<title level="j" type="abbrev">Applied Numerical Mathematics</title>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">R</forename><surname>Cash</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">I</forename><surname>Gladwell</surname></persName>
		</editor>
		<idno type="ISSN">0168-9274</idno>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="311" to="318" />
			<date type="published" when="1992">1992</date>
			<publisher>Elsevier BV</publisher>
			<pubPlace>Oxford, England</pubPlace>
		</imprint>
	</monogr>
	<note type="raw_reference">Alan C. Hindmarsh. 1992. Detecting stability barriers in BDF solvers. In Computational Ordinary Diferential Equations (Institute of Mathematics and its Applications Conference Series), J. R. Cash and I. Gladwell (Eds.). Oxford University Press, Oxford, England, 87ś96.</note>
</biblStruct>

<biblStruct coords="22,97.77,337.85,434.76,7.76;22,97.77,347.81,434.47,7.76;22,97.51,357.77,110.86,7.76" xml:id="b40">
	<analytic>
		<title level="a" type="main" coord="22,97.77,347.81,241.22,7.76" xml:id="_XmreG9h">SUNDIALS</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Peter</forename><forename type="middle">N</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Keith</forename><forename type="middle">E</forename><surname>Grant</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Steven</forename><forename type="middle">L</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Radu</forename><surname>Serban</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Dan</forename><forename type="middle">E</forename><surname>Shumaker</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
		</author>
		<idno type="DOI">10.1145/1089014.1089020</idno>
		<ptr target="https://doi.org/10.1145/1089014.1089020" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_NSWNhXk" coord="22,345.45,348.03,90.03,7.54">ACM Transactions on Mathematical Software</title>
		<title level="j" type="abbrev">ACM Trans. Math. Softw.</title>
		<idno type="ISSN">0098-3500</idno>
		<idno type="ISSNe">1557-7295</idno>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="363" to="396" />
			<date type="published" when="2005-09">2005. 2005</date>
			<publisher>Association for Computing Machinery (ACM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Alan C. Hindmarsh, Peter N. Brown, Keith E. Grant, Steven L. Lee, Radu Serban, Dan E. Shumaker, and Carol S. Woodward. 2005. SUNDIALS: Suite of nonlinear and diferential/algebraic equation solvers. ACM Trans. Math. Software 31, 3 (2005), 363ś396. https: //doi.org/10.1145/1089014.1089020</note>
</biblStruct>

<biblStruct coords="22,97.77,367.73,433.53,7.76;22,97.77,377.70,412.65,7.76" xml:id="b41">
	<monogr>
		<title level="m" type="main" coord="22,250.28,367.96,281.02,7.54;22,97.77,377.92,45.11,7.54" xml:id="_buYQTU4">H-division quarterly report, October--December 1977. [Lawrence Livermore Laboratory]</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">P</forename><surname>Syvert</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Nùrsett</surname></persName>
		</author>
		<idno type="DOI">10.2172/5052349</idno>
		<imprint>
			<date type="published" when="1988">1988</date>
			<publisher>Office of Scientific and Technical Information (OSTI)</publisher>
			<pubPlace>Livermore, CA (USA); Norway)</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Lawrence Livermore National Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note type="raw_reference">Alan C. Hindmarsh and Syvert P. Nùrsett. 1988. KRYSI, an ODE solver combining a semi-implicit Runge-Kutta method and a preconditioned Krylov method. Technical Report. Lawrence Livermore National Laboratory, Livermore, CA (USA); Trondheim Univ. (Norway).</note>
</biblStruct>

<biblStruct coords="22,97.77,387.66,433.53,7.76;22,97.77,397.62,390.88,7.76" xml:id="b42">
	<analytic>
		<title level="a" type="main" coord="22,253.05,387.66,278.25,7.76;22,97.77,397.62,171.38,7.76" xml:id="_pZk4hyc">Algorithms and software for ordinary differential equations and differential- algebraic equations, Part I: Euler methods and error estimation</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><forename type="middle">R</forename><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1063/1.168536</idno>
		<ptr target="https://doi.org/10.1063/1.168536" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_k5Upv89" coord="22,275.30,397.84,45.72,7.54">Computers in Physics</title>
		<idno type="ISSN">0894-1866</idno>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="34" to="41" />
			<date type="published" when="1995-01-01">1995. 1995</date>
			<publisher>AIP Publishing</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Alan C. Hindmarsh and Linda R. Petzold. 1995. Algorithms and software for ordinary diferential equations and diferential-algebraic equations, Part I: Euler methods and error estimation. Comput. Phys. 9, 1 (1995), 34ś41. https://doi.org/10.1063/1.168536</note>
</biblStruct>

<biblStruct coords="22,97.77,407.58,433.53,7.76;22,97.77,417.55,433.34,7.76" xml:id="b43">
	<analytic>
		<title level="a" type="main" coord="22,253.05,407.58,278.25,7.76;22,97.77,417.55,206.22,7.76" xml:id="_vNfV5U7">Algorithms and software for ordinary differential equations and differential- algebraic equations, Part II: Higher-order methods and software packages</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><forename type="middle">R</forename><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1063/1.168540</idno>
		<ptr target="https://doi.org/10.1063/1.168540" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_bQW43yk" coord="22,310.34,417.77,45.72,7.54">Computers in Physics</title>
		<idno type="ISSN">0894-1866</idno>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="148" to="155" />
			<date type="published" when="1995-03-01">1995. 1995</date>
			<publisher>AIP Publishing</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Alan C. Hindmarsh and Linda R. Petzold. 1995. Algorithms and software for ordinary diferential equations and diferential-algebraic equations, Part II: Higher-order methods and software packages. Comput. Phys. 9, 2 (1995), 148ś155. https://doi.org/10.1063/1.168540</note>
</biblStruct>

<biblStruct coords="22,97.77,427.51,433.53,7.76;22,97.77,437.47,63.86,7.76" xml:id="b44">
	<monogr>
		<title level="m" type="main" coord="22,465.43,427.51,65.87,7.76;22,97.77,437.47,34.32,7.76" xml:id="_dRmM4KR">User Documentation for CVODE</title>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Radu</forename><surname>Serban</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Cody</forename><forename type="middle">J</forename><surname>Balos</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">David</forename><forename type="middle">J</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Alan C. Hindmarsh, Radu Serban, Cody J. Balos, David J. Gardner, Daniel R. Reynolds, and Carol S. Woodward. 2021. User Documentation for CVODE. v6.2.0.</note>
</biblStruct>

<biblStruct coords="22,97.77,447.43,434.05,7.76;22,97.77,457.40,129.59,7.76" xml:id="b45">
	<monogr>
		<author>
			<persName coords=""><surname>Intel</surname></persName>
		</author>
		<ptr target="https://www.intel.com/content/www/us/en/develop/documentation/onemkl-developer-reference-c/top.html" />
		<title level="m" xml:id="_dFCDBVf" coord="22,133.71,447.66,172.55,7.54">Developer Reference for Intel oneAPI Math Kernel Library</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Intel. 2022. Developer Reference for Intel oneAPI Math Kernel Library. https://www.intel.com/content/www/us/en/develop/documentation/ onemkl-developer-reference-c/top.html</note>
</biblStruct>

<biblStruct coords="22,97.77,467.36,434.76,7.76;22,97.77,477.32,281.76,7.76" xml:id="b46">
	<analytic>
		<title level="a" type="main" coord="22,254.06,467.36,274.38,7.76" xml:id="_2WQ8pUy">An Alternative Implementation of Variable Step-Size Multistep Formulas for Stiff ODEs</title>
		<author>
			<persName coords=""><forename type="first">Kenneth</forename><forename type="middle">R</forename><surname>Jackson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ron</forename><surname>Sacks-Davis</surname></persName>
		</author>
		<idno type="DOI">10.1145/355900.355903</idno>
		<ptr target="https://doi.org/10.1145/355900.355903" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_zty82hx" coord="22,97.77,477.55,88.00,7.54">ACM Transactions on Mathematical Software</title>
		<title level="j" type="abbrev">ACM Trans. Math. Softw.</title>
		<idno type="ISSN">0098-3500</idno>
		<idno type="ISSNe">1557-7295</idno>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="295" to="318" />
			<date type="published" when="1980-09">1980. 1980</date>
			<publisher>Association for Computing Machinery (ACM)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Kenneth R. Jackson and Ron Sacks-Davis. 1980. An alternative implementation of variable step-size multistep formulas for stif ODEs. ACM Trans. Math. Software 6, 3 (1980), 295ś318. https://doi.org/10.1145/355900.355903</note>
</biblStruct>

<biblStruct coords="22,97.77,487.29,434.76,7.76;22,97.77,497.25,249.88,7.76" xml:id="b47">
	<analytic>
		<title level="a" type="main" coord="22,299.89,487.29,229.40,7.76" xml:id="_9A9PQTX">Automated Fortran–C++ Bindings for Large-Scale Scientific Applications</title>
		<author>
			<persName coords=""><forename type="first">Seth</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Andrey</forename><surname>Prokopenko</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Katherine</forename><forename type="middle">J</forename><surname>Evans</surname></persName>
		</author>
		<idno type="DOI">10.1109/mcse.2019.2924204</idno>
		<ptr target="https://doi.org/10.1109/MCSE.2019.2924204" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_m9yXSUJ" coord="22,97.77,497.47,52.00,7.54">Computing in Science &amp; Engineering</title>
		<title level="j" type="abbrev">Comput. Sci. Eng.</title>
		<idno type="ISSN">1521-9615</idno>
		<idno type="ISSNe">1558-366X</idno>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="84" to="94" />
			<date type="published" when="2019">2019. 2019</date>
			<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Seth Johnson, Andrey Prokopenko, and Katherine Evans. 2019. Automated Fortran-C++ Bindings for Large-Scale Scientiic Applications. Comput. Sci. Eng. PP (2019), 1ś1. https://doi.org/10.1109/MCSE.2019.2924204</note>
</biblStruct>

<biblStruct coords="22,97.77,507.21,433.53,7.76;22,97.77,517.17,433.53,7.76;22,97.77,527.14,357.08,7.76" xml:id="b48">
	<analytic>
		<title level="a" type="main" coord="22,169.18,507.21,303.03,7.76;22,460.31,517.17,28.95,7.76" xml:id="_zSc58FN">Preparation and optimization of a diverse workload for a large-scale heterogeneous system</title>
		<author>
			<persName coords=""><forename type="first">Ian</forename><surname>Karlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yoonho</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bronis</forename><forename type="middle">R</forename><surname>De Supinski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bert</forename><surname>Still</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Beckingsale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Robert</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tong</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guojing</forename><surname>Cong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlos</forename><surname>Costa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Johann</forename><surname>Dahm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giacomo</forename><surname>Domeniconi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Epperly</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aaron</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sara</forename><surname>Kokkila-Schumacher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steven</forename><surname>Langer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hai</forename><surname>Le</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Eun</forename><forename type="middle">Kyung</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Naoya</forename><surname>Maruyama</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xinyu</forename><surname>Que</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Richards</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bjorn</forename><surname>Sjogreen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonathan</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carol</forename><surname>Woodward</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ulrike</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaohua</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bob</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Appelhans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Levi</forename><surname>Barnes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Barnes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sorin</forename><surname>Bastea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Boehme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jamie</forename><forename type="middle">A</forename><surname>Bramwell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jim</forename><surname>Brase</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jose</forename><surname>Brunheroto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Barry</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Charway</forename><forename type="middle">R</forename><surname>Cooper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tony</forename><surname>Degroot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rob</forename><surname>Falgout</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Todd</forename><surname>Gamblin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Glosli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Gunnels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Max</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tzanio</forename><surname>Kolev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Kuo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matthew</forename><forename type="middle">P</forename><surname>Legendre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruipeng</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pei-Hung</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shelby</forename><surname>Lockhart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kathleen</forename><surname>Mccandless</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Claudia</forename><surname>Misale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jaime</forename><surname>Moreno</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rob</forename><surname>Neely</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jarom</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rao</forename><surname>Nimmakayala</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kathryn</forename><surname>O'brien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kevin</forename><surname>O'brien</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ramesh</forename><surname>Pankajakshan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roger</forename><surname>Pearce</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Slaven</forename><surname>Peles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Phil</forename><surname>Regier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steve</forename><surname>Rennich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Martin</forename><surname>Schulz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Howard</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Sexton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kathleen</forename><surname>Shoga</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shiv</forename><surname>Sundram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guillaume</forename><surname>Thomas-Collignon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Van Essen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexey</forename><surname>Voronin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bob</forename><surname>Walkup</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lu</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chris</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hui-Fang</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dan</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cyril</forename><surname>Zeller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ed</forename><surname>Zywicz</surname></persName>
		</author>
		<idno type="DOI">10.1145/3295500.3356192</idno>
		<ptr target="https://doi.org/10.1145/3295500.3356192" />
	</analytic>
	<monogr>
		<title level="m" xml:id="_dB54bRr" coord="22,486.47,507.43,44.84,7.54;22,97.77,517.40,302.94,7.54">Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis</title>
		<meeting>the International Conference for High Performance Computing, Networking, Storage and Analysis<address><addrLine>Denver, Colorado; New York, NY, USA, Article</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2019-11-17">2019</date>
			<biblScope unit="volume">32</biblScope>
		</imprint>
	</monogr>
	<note>) (SC &apos;19)</note>
	<note type="raw_reference">Ian Karlin et al. 2019. Preparation and Optimization of a Diverse Workload for a Large-Scale Heterogeneous System. In Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis (Denver, Colorado) (SC &apos;19). Association for Computing Machinery, New York, NY, USA, Article 32, 17 pages. https://doi.org/10.1145/3295500.3356192</note>
</biblStruct>

<biblStruct coords="22,97.77,537.10,434.76,7.76;22,97.77,547.06,307.58,7.76" xml:id="b49">
	<analytic>
		<title level="a" type="main" coord="22,279.25,537.10,249.90,7.76" xml:id="_SgRNBPx">Additive Runge–Kutta schemes for convection–diffusion–reaction equations</title>
		<author>
			<persName coords=""><forename type="first">Christopher</forename><forename type="middle">A</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Mark</forename><forename type="middle">H</forename><surname>Carpenter</surname></persName>
		</author>
		<idno type="DOI">10.1016/s0168-9274(02)00138-1</idno>
		<ptr target="https://doi.org/10.1016/S0168-9274(02)00138-1" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_QsVuTtH" coord="22,97.77,547.28,62.19,7.54">Applied Numerical Mathematics</title>
		<title level="j" type="abbrev">Applied Numerical Mathematics</title>
		<idno type="ISSN">0168-9274</idno>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="139" to="181" />
			<date type="published" when="2003-01">2003. Jan 2003</date>
			<publisher>Elsevier BV</publisher>
		</imprint>
	</monogr>
	<note type="raw_reference">Christopher A. Kennedy and Mark H. Carpenter. 2003. Additive RungeśKutta schemes for convectionśdifusionśreaction equations. Appl. Numer. Math. 44, 1-2 (Jan 2003), 139ś181. https://doi.org/10.1016/S0168-9274(02)00138-1</note>
</biblStruct>

<biblStruct coords="22,97.77,557.02,434.76,7.76;22,97.77,566.99,289.13,7.76" xml:id="b50">
	<analytic>
		<title level="a" type="main" coord="22,271.60,557.02,257.57,7.76" xml:id="_EseGTpQ">Higher-Order Additive RungeśKutta Schemes for Ordinary Diferential Equations</title>
		<author>
			<persName coords=""><forename type="first">Christopher</forename><forename type="middle">A</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Mark</forename><forename type="middle">H</forename><surname>Carpenter</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.apnum.2018.10.007</idno>
		<ptr target="https://doi.org/10.1016/j.apnum.2018.10.007" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_yh32s22" coord="22,97.77,567.21,62.19,7.54">Appl. Numer. Math</title>
		<imprint>
			<biblScope unit="volume">136</biblScope>
			<biblScope unit="page" from="183" to="205" />
			<date type="published" when="2019-02">2019. Feb 2019</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Christopher A. Kennedy and Mark H. Carpenter. 2019. Higher-Order Additive RungeśKutta Schemes for Ordinary Diferential Equations. Appl. Numer. Math. 136 (Feb 2019), 183ś205. https://doi.org/10.1016/j.apnum.2018.10.007</note>
</biblStruct>

<biblStruct coords="22,97.77,576.95,434.76,7.76;22,97.77,586.91,433.53,7.76;22,97.77,596.87,234.34,7.76" xml:id="b51">
	<analytic>
		<title level="a" type="main" coord="22,97.77,586.91,409.00,7.76" xml:id="_kthv8eR">Proof of concept of regional scale hydrologic simulations at hydrologic resolution utilizing massively parallel computer resources</title>
		<author>
			<persName coords=""><forename type="first">Stefan</forename><forename type="middle">J</forename><surname>Kollet</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Reed</forename><forename type="middle">M</forename><surname>Maxwell</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Steve</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jan</forename><surname>Vanderborght</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Harry</forename><surname>Vereecken</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Clemens</forename><surname>Simmer</surname></persName>
		</author>
		<idno type="DOI">10.1029/2009WR008730</idno>
		<ptr target="https://doi.org/10.1029/2009WR008730" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_j9jQr5j" coord="22,512.57,587.13,18.74,7.54;22,97.77,597.10,36.44,7.54">Water Resour. Res</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<date type="published" when="2010">2010. 2010</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Stefan J. Kollet, Reed M. Maxwell, Carol S. Woodward, Steve Smith, Jan Vanderborght, Harry Vereecken, and Clemens Simmer. 2010. Proof of concept of regional scale hydrologic simulations at hydrologic resolution utilizing massively parallel computer resources. Water Resour. Res. 46, 4 (2010), 7 pages. https://doi.org/10.1029/2009WR008730</note>
</biblStruct>

<biblStruct coords="22,97.77,606.84,434.40,7.76;22,97.77,616.80,301.59,7.76" xml:id="b52">
	<analytic>
		<title level="a" type="main" coord="22,219.93,606.84,300.70,7.76" xml:id="_KumEVP8">Software and algorithms for sensitivity analysis of large-scale diferential algebraic systems</title>
		<author>
			<persName coords=""><forename type="first">Shengtai</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1016/S0377-0427(00)00464-7</idno>
		<ptr target="https://doi.org/10.1016/S0377-0427(00)00464-7" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_bwX8qEm" coord="22,527.04,607.06,5.14,7.54;22,97.77,617.02,66.13,7.54">J. Comput. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">125</biblScope>
			<biblScope unit="page" from="131" to="145" />
			<date type="published" when="2000">2000. 2000</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Shengtai Li and Linda Petzold. 2000. Software and algorithms for sensitivity analysis of large-scale diferential algebraic systems. J. Comput. Appl. Math. 125, 1-2 (2000), 131ś145. https://doi.org/10.1016/S0377-0427(00)00464-7</note>
</biblStruct>

<biblStruct coords="22,97.77,626.76,433.68,7.76;22,97.77,636.72,333.33,7.76" xml:id="b53">
	<analytic>
		<title level="a" type="main" coord="22,232.67,626.76,298.78,7.76;22,97.77,636.72,24.78,7.76" xml:id="_SGKEuZG">SuperLU_DIST: A Scalable Distributed-Memory Sparse Direct Solver for Unsymmetric Linear Systems</title>
		<author>
			<persName coords=""><forename type="first">Xiaoye</forename><forename type="middle">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">James</forename><forename type="middle">W</forename><surname>Demmel</surname></persName>
		</author>
		<idno type="DOI">10.1145/779359.779361</idno>
		<ptr target="https://doi.org/10.1145/779359.779361" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_kXkqrkd" coord="22,128.96,636.95,88.00,7.54">ACM Trans. Math. Software</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="110" to="140" />
			<date type="published" when="2003-06">2003. June 2003</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Xiaoye S. Li and James W. Demmel. 2003. SuperLU_DIST: A Scalable Distributed-Memory Sparse Direct Solver for Unsymmetric Linear Systems. ACM Trans. Math. Software 29, 2 (June 2003), 110ś140. https://doi.org/10.1145/779359.779361</note>
</biblStruct>

<biblStruct coords="23,97.77,108.70,433.53,7.76;23,97.77,118.67,354.33,7.76" xml:id="b54">
	<analytic>
		<title level="a" type="main" coord="23,468.78,108.70,62.52,7.76;23,97.77,118.67,109.51,7.76" xml:id="_W6mVy5k">ODES: a high level interface to ODE and DAE solvers</title>
		<author>
			<persName coords=""><forename type="first">Benny</forename><surname>Malengier</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Pavol</forename><surname>Kišon</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">James</forename><surname>Tocknell</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Claas</forename><surname>Abert</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Florian</forename><surname>Bruckner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Marc-Antonio</forename><surname>Bisotti</surname></persName>
		</author>
		<idno type="DOI">10.21105/joss.00165</idno>
		<ptr target="https://doi.org/10.21105/joss.00165" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_hwt6AEA" coord="23,213.22,118.89,66.93,7.54">J. Open Source Softw</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">165</biblScope>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Benny Malengier, Pavol Kišon, James Tocknell, Claas Abert, Florian Bruckner, and Marc-Antonio Bisotti. 2018. ODES: a high level interface to ODE and DAE solvers. J. Open Source Softw. 3, 22 (2018), 165. https://doi.org/10.21105/joss.00165</note>
</biblStruct>

<biblStruct coords="23,97.77,128.63,434.76,7.76;23,97.77,138.59,282.67,7.76" xml:id="b55">
	<analytic>
		<title level="a" type="main" coord="23,237.96,128.63,291.08,7.76" xml:id="_2X9dpwB">Numerical methods and software for sensitivity analysis of diferential-algebraic systems</title>
		<author>
			<persName coords=""><forename type="first">Timothy</forename><surname>Maly</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Linda</forename><forename type="middle">R</forename><surname>Petzold</surname></persName>
		</author>
		<idno type="DOI">10.1016/0168-9274(95)00117-4</idno>
		<ptr target="https://doi.org/10.1016/0168-9274(95)00117-4" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_ybCnxMA" coord="23,97.77,138.82,62.19,7.54">Appl. Numer. Math</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="57" to="79" />
			<date type="published" when="1996">1996. 1996</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Timothy Maly and Linda R. Petzold. 1996. Numerical methods and software for sensitivity analysis of diferential-algebraic systems. Appl. Numer. Math. 20, 1-2 (1996), 57ś79. https://doi.org/10.1016/0168-9274(95)00117-4</note>
</biblStruct>

<biblStruct coords="23,97.77,148.56,433.53,7.76;23,97.77,158.52,328.40,7.76" xml:id="b56">
	<analytic>
		<title level="a" type="main" coord="23,339.08,148.56,192.23,7.76;23,97.77,158.52,49.69,7.76" xml:id="_3rTewsA">Faster solvers for large kinetic mechanisms using adaptive preconditioners</title>
		<author>
			<persName coords=""><forename type="first">Matthew</forename><forename type="middle">J</forename><surname>Mcnenly</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Russell</forename><forename type="middle">A</forename><surname>Whitesides</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><forename type="middle">L</forename><surname>Flowers</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.proci.2014.05.113</idno>
		<ptr target="https://doi.org/10.1016/j.proci.2014.05.113" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_rkR82ZA" coord="23,153.64,158.74,62.25,7.54">Proc. Combust. Inst</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="581" to="587" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Matthew J. McNenly, Russell A. Whitesides, and Daniel L. Flowers. 2015. Faster solvers for large kinetic mechanisms using adaptive preconditioners. Proc. Combust. Inst. 35, 1 (2015), 581ś587. https://doi.org/10.1016/j.proci.2014.05.113</note>
</biblStruct>

<biblStruct coords="23,97.77,168.48,399.83,7.76" xml:id="b57">
	<monogr>
		<title/>
		<author>
			<persName coords=""><surname>Nvidia</surname></persName>
		</author>
		<ptr target="https://docs.nvidia.com/cuda/archive/10.1/pdf/CUSOLVER_Library.pdf" />
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="10" to="11" />
		</imprint>
	</monogr>
	<note type="raw_reference">NVIDIA. 2019. cuSOLVER library, release 10.1.243. https://docs.nvidia.com/cuda/archive/10.1/pdf/CUSOLVER_Library.pdf.</note>
</biblStruct>

<biblStruct coords="23,97.77,178.44,434.41,7.76;23,97.77,188.41,189.57,7.76" xml:id="b58">
	<monogr>
		<title level="m" type="main" coord="23,268.43,178.67,192.83,7.54" xml:id="_aPzuXnv">Iterative solution of nonlinear equations in several variables</title>
		<author>
			<persName coords=""><forename type="first">James</forename><forename type="middle">M</forename><surname>Ortega</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Werner</forename><forename type="middle">C</forename><surname>Rheinboldt</surname></persName>
		</author>
		<idno type="DOI">10.1137/1.9780898719468</idno>
		<ptr target="https://doi.org/10.1137/1.9780898719468" />
		<imprint>
			<date type="published" when="2000">2000</date>
			<publisher>SIAM Publications</publisher>
			<pubPlace>Philadelphia, PA</pubPlace>
		</imprint>
	</monogr>
	<note type="raw_reference">James M. Ortega and Werner C. Rheinboldt. 2000. Iterative solution of nonlinear equations in several variables. SIAM Publications, Philadelphia, PA. https://doi.org/10.1137/1.9780898719468</note>
</biblStruct>

<biblStruct coords="23,97.77,198.37,434.41,7.76;23,97.77,208.33,172.05,7.76" xml:id="b59">
	<analytic>
		<title level="a" type="main" coord="23,240.74,198.37,181.44,7.76" xml:id="_J9E3UKw">NITSOL: A Newton iterative solver for nonlinear systems</title>
		<author>
			<persName coords=""><forename type="first">Michael</forename><surname>Pernice</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Homer</forename><forename type="middle">F</forename><surname>Walker</surname></persName>
		</author>
		<idno type="DOI">10.1137/S1064827596303843</idno>
		<ptr target="https://doi.org/10.1137/S1064827596303843" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_pVJupXU" coord="23,428.25,198.59,64.73,7.54">SIAM J. Sci. Comput</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="302" to="318" />
			<date type="published" when="1998">1998. 1998</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Michael Pernice and Homer F. Walker. 1998. NITSOL: A Newton iterative solver for nonlinear systems. SIAM J. Sci. Comput. 19, 1 (1998), 302ś318. https://doi.org/10.1137/S1064827596303843</note>
</biblStruct>

<biblStruct coords="23,97.77,218.29,434.41,7.76;23,97.77,228.26,193.79,7.76" xml:id="b60">
	<monogr>
		<title level="m" type="main" coord="23,177.50,218.52,192.68,7.54" xml:id="_5suKhx6">Description of DASSL: A diferential/algebraic system solver</title>
		<author>
			<persName coords=""><forename type="first">Linda</forename><forename type="middle">R</forename><surname>Petzold</surname></persName>
		</author>
		<ptr target="https://www.osti.gov/biblio/5882821" />
		<imprint>
			<date type="published" when="1982">1982</date>
			<pubPlace>Sandia National Laboratory, Livermore, CA (USA)</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note type="raw_reference">Linda R. Petzold. 1982. Description of DASSL: A diferential/algebraic system solver. Technical Report. Sandia National Laboratory, Livermore, CA (USA). https://www.osti.gov/biblio/5882821</note>
</biblStruct>

<biblStruct coords="23,97.77,238.22,433.53,7.76;23,97.77,248.18,293.82,7.76" xml:id="b61">
	<analytic>
		<title level="a" type="main" coord="23,242.92,238.22,288.38,7.76;23,97.77,248.18,55.81,7.76" xml:id="_G9xSKMY">DiferentialEquations.jl ś A performant and feature-rich ecosystem for solving diferential equations in Julia</title>
		<author>
			<persName coords=""><forename type="first">Christopher</forename><surname>Rackauckas</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Qing</forename><surname>Nie</surname></persName>
		</author>
		<idno type="DOI">10.5334/jors.151</idno>
		<ptr target="https://doi.org/10.5334/jors.151" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_fMEr9QH" coord="23,159.19,248.40,58.69,7.54">J. Open Res. Softw</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">10</biblScope>
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Christopher Rackauckas and Qing Nie. 2017. DiferentialEquations.jl ś A performant and feature-rich ecosystem for solving diferential equations in Julia. J. Open Res. Softw. 5, 1 (2017), 10 pages. https://doi.org/10.5334/jors.151</note>
</biblStruct>

<biblStruct coords="23,97.77,258.14,433.54,7.76;23,97.77,268.11,329.47,7.76" xml:id="b62">
	<monogr>
		<title level="m" type="main" coord="23,362.07,258.37,169.23,7.54;23,97.77,268.33,21.15,7.54" xml:id="_mWCjmPu">SUNDIALS Multiphysics+MPIManyVector Performance Testing</title>
		<author>
			<persName coords=""><forename type="first">R</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">David</forename><forename type="middle">J</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Cody</forename><forename type="middle">J</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Balos</surname></persName>
		</author>
		<author>
			<persName coords=""><surname>Woodward</surname></persName>
		</author>
		<idno type="DOI">10.2172/1567994</idno>
		<ptr target="https://doi.org/10.2172/1567994" />
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
		<respStmt>
			<orgName>Lawrence Livermore National Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note type="raw_reference">Daniel R. Reynolds, David J. Gardner, Cody J. Balos, and Carol S. Woodward. 2019. SUNDIALS Multiphysics+MPIManyVector Performance Testing. Technical Report. Lawrence Livermore National Laboratory. https://doi.org/10.2172/1567994</note>
</biblStruct>

<biblStruct coords="23,97.77,278.07,434.48,7.76;23,97.51,288.03,97.26,7.76" xml:id="b63">
	<analytic>
		<title level="a" type="main" coord="23,168.91,278.07,164.70,7.76" xml:id="_NnvuNbx">A Class of Multirate Ininitesimal GARK Methods</title>
		<author>
			<persName coords=""><forename type="first">Adrian</forename><surname>Sandu</surname></persName>
		</author>
		<idno type="DOI">10.1137/18M1205492</idno>
		<ptr target="https://doi.org/10.1137/18M1205492" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_yBX5rup" coord="23,341.65,278.29,70.78,7.54">SIAM J. Numer. Anal</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="page" from="2300" to="2327" />
			<date type="published" when="2019-01">2019. Jan 2019</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Adrian Sandu. 2019. A Class of Multirate Ininitesimal GARK Methods. SIAM J. Numer. Anal. 57, 5 (Jan 2019), 2300ś2327. https: //doi.org/10.1137/18M1205492</note>
</biblStruct>

<biblStruct coords="23,97.77,298.00,434.40,7.76;23,97.77,307.96,292.53,7.76" xml:id="b64">
	<analytic>
		<title level="a" type="main" coord="23,333.58,298.00,186.41,7.76" xml:id="_ybhheBv">Multirate RungeśKutta schemes for advection equations</title>
		<author>
			<persName coords=""><forename type="first">Martin</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Oswald</forename><surname>Knoth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Martin</forename><surname>Arnold</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ralf</forename><surname>Wolke</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.cam.2008.08.009</idno>
		<ptr target="https://doi.org/10.1016/j.cam.2008.08.009" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_DVbcdwz" coord="23,527.02,298.22,5.15,7.54;23,97.77,308.18,66.13,7.54">J. Comput. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">226</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="345" to="357" />
			<date type="published" when="2009-04">2009. Apr 2009</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Martin Schlegel, Oswald Knoth, Martin Arnold, and Ralf Wolke. 2009. Multirate RungeśKutta schemes for advection equations. J. Comput. Appl. Math. 226, 2 (Apr 2009), 345ś357. https://doi.org/10.1016/j.cam.2008.08.009</note>
</biblStruct>

<biblStruct coords="23,97.77,317.92,433.69,7.76;23,97.77,327.88,356.21,7.76" xml:id="b65">
	<analytic>
		<title level="a" type="main" coord="23,329.77,317.92,201.69,7.76;23,97.77,327.88,62.61,7.76" xml:id="_FwkzwJ7">Implementation of multirate time integration methods for air pollution modelling</title>
		<author>
			<persName coords=""><forename type="first">Martin</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Oswald</forename><surname>Knoth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Martin</forename><surname>Arnold</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ralf</forename><surname>Wolke</surname></persName>
		</author>
		<idno type="DOI">10.5194/gmd-5-1395-2012</idno>
		<ptr target="https://doi.org/10.5194/gmd-5-1395-2012" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_6xNyqSa" coord="23,166.69,328.11,58.68,7.54">Geosci. Model Dev</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1395" to="1405" />
			<date type="published" when="2012-11">2012. Nov 2012</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Martin Schlegel, Oswald Knoth, Martin Arnold, and Ralf Wolke. 2012. Implementation of multirate time integration methods for air pollution modelling. Geosci. Model Dev. 5, 6 (Nov 2012), 1395ś1405. https://doi.org/10.5194/gmd-5-1395-2012</note>
</biblStruct>

<biblStruct coords="23,97.77,337.85,433.53,7.76;23,97.77,347.81,339.32,7.76" xml:id="b66">
	<analytic>
		<title level="a" type="main" coord="23,336.50,337.85,194.80,7.76;23,97.77,347.81,28.70,7.76" xml:id="_CAvyw6Q">Numerical solution of multiscale problems in atmospheric modeling</title>
		<author>
			<persName coords=""><forename type="first">Martin</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Oswald</forename><surname>Knoth</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Martin</forename><surname>Arnold</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ralf</forename><surname>Wolke</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.apnum.2012.06.023</idno>
		<ptr target="https://doi.org/10.1016/j.apnum.2012.06.023" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_zPEujWs" coord="23,132.93,348.03,62.19,7.54">Appl. Numer. Math</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="page" from="1531" to="1543" />
			<date type="published" when="2012-10">2012. Oct 2012</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Martin Schlegel, Oswald Knoth, Martin Arnold, and Ralf Wolke. 2012. Numerical solution of multiscale problems in atmospheric modeling. Appl. Numer. Math. 62, 10 (Oct 2012), 1531ś1543. https://doi.org/10.1016/j.apnum.2012.06.023</note>
</biblStruct>

<biblStruct coords="23,97.77,357.77,433.53,7.76;23,97.53,367.73,201.63,7.76" xml:id="b67">
	<analytic>
		<title level="a" type="main" coord="23,178.89,357.77,280.95,7.76" xml:id="_53kxegR">SBaddon: High performance simulation for the Systems Biology Toolbox for MATLAB</title>
		<author>
			<persName coords=""><forename type="first">Henning</forename><surname>Schmidt</surname></persName>
		</author>
		<idno type="DOI">10.1093/bioinformatics/btl668</idno>
		<ptr target="https://doi.org/10.1093/bioinformatics/btl668" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_AwujpFv" coord="23,467.44,357.99,46.67,7.54">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="646" to="647" />
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Henning Schmidt. 2007. SBaddon: High performance simulation for the Systems Biology Toolbox for MATLAB. Bioinformatics 23, 5 (2007), 646ś647. https://doi.org/10.1093/bioinformatics/btl668</note>
</biblStruct>

<biblStruct coords="23,97.77,377.70,433.53,7.76;23,97.77,387.88,433.53,7.54;23,97.77,397.84,433.53,7.54;23,97.77,407.58,434.41,7.76;23,97.77,417.55,165.33,7.76" xml:id="b68">
	<analytic>
		<title level="a" type="main" coord="23,242.27,377.70,195.09,7.76" xml:id="_ED7ct4j">CVODES: The sensitivity-enabled ODE solver in SUNDIALS</title>
		<author>
			<persName coords=""><forename type="first">Radu</forename><surname>Serban</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Alan</forename><forename type="middle">C</forename><surname>Hindmarsh</surname></persName>
		</author>
		<idno type="DOI">10.1115/DETC2005-85597</idno>
		<ptr target="https://doi.org/10.1115/DETC2005-85597" />
	</analytic>
	<monogr>
		<title level="m" xml:id="_JsTkcAn" coord="23,452.36,377.92,78.94,7.54;23,97.77,387.88,433.53,7.54;23,97.77,397.84,326.22,7.54;23,476.90,397.84,54.40,7.54;23,97.77,407.81,283.63,7.54">Proceedings of the ASME 2005 International Design Engineering Technical Conferences and Computers and Information in Engineering Conference. (International Design Engineering Technical Conferences and Computers and Information in Engineering Conference</title>
		<meeting>the ASME 2005 International Design Engineering Technical Conferences and Computers and Information in Engineering Conference. (International Design Engineering Technical Conferences and Computers and Information in Engineering Conference</meeting>
		<imprint>
			<publisher>American Society of Mechanical Engineers</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="257" to="269" />
		</imprint>
	</monogr>
	<note>th International Conference on Multibody Systems, Nonlinear Dynamics, and Control, Parts A, B, and C)</note>
	<note type="raw_reference">Radu Serban and Alan C. Hindmarsh. 2005. CVODES: The sensitivity-enabled ODE solver in SUNDIALS. In Proceedings of the ASME 2005 International Design Engineering Technical Conferences and Computers and Information in Engineering Conference. (International Design Engineering Technical Conferences and Computers and Information in Engineering Conference, Vol. Volume 6: 5th International Conference on Multibody Systems, Nonlinear Dynamics, and Control, Parts A, B, and C). American Society of Mechanical Engineers, 257ś269. https://doi.org/10.1115/DETC2005-85597</note>
</biblStruct>

<biblStruct coords="23,97.77,427.51,434.76,7.76;23,97.77,437.47,149.97,7.76" xml:id="b69">
	<analytic>
		<title level="a" type="main" coord="23,194.22,427.51,187.63,7.76" xml:id="_3GjRzys">Conservation laws and the numerical solution of ODEs, II</title>
		<author>
			<persName coords=""><forename type="first">Lawrence</forename><forename type="middle">F</forename><surname>Shampine</surname></persName>
		</author>
		<idno type="DOI">10.1016/S0898-1221(99)00183-2</idno>
		<ptr target="https://doi.org/10.1016/S0898-1221(99)00183-2" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_yZcc93V" coord="23,386.89,427.73,82.47,7.54">Comput. Math. with Appl</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="61" to="72" />
			<date type="published" when="1999">1999. 1999</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Lawrence F. Shampine. 1999. Conservation laws and the numerical solution of ODEs, II. Comput. Math. with Appl. 38, 2 (1999), 61ś72. https://doi.org/10.1016/S0898-1221(99)00183-2</note>
</biblStruct>

<biblStruct coords="23,97.77,447.43,319.70,7.76" xml:id="b70">
	<analytic>
		<title level="a" type="main" coord="23,97.77,447.43,111.03,7.76" xml:id="_ANmQwbw">The SUNDIALS development team</title>
		<ptr target="https://computing.llnl.gov/projects/sundials" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_KH4ytzX" coord="23,233.79,447.66,32.31,7.54">SUNDIALS</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
	<note type="raw_reference">The SUNDIALS development team. 2022. SUNDIALS. https://computing.llnl.gov/projects/sundials</note>
</biblStruct>

<biblStruct coords="23,97.77,457.40,312.58,7.76" xml:id="b71">
	<monogr>
		<ptr target="https://github.com/LLNL/sundials" />
		<title level="m" xml:id="_tNjqg3h" coord="23,97.77,457.40,194.06,7.76">The SUNDIALS development team. 2022. SUNDIALS GitHub</title>
		<imprint/>
	</monogr>
	<note type="raw_reference">The SUNDIALS development team. 2022. SUNDIALS GitHub. https://github.com/LLNL/sundials</note>
</biblStruct>

<biblStruct coords="23,97.77,467.36,434.76,7.76;23,97.77,477.32,288.88,7.76" xml:id="b72">
	<analytic>
		<title level="a" type="main" coord="23,288.28,467.36,240.87,7.76" xml:id="_vmeHKz9">Towards dense linear algebra for hybrid GPU accelerated manycore systems</title>
		<author>
			<persName coords=""><forename type="first">Stanimire</forename><surname>Tomov</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Jack</forename><surname>Dongarra</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Marc</forename><surname>Baboulin</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.parco.2009.12.005</idno>
		<ptr target="https://doi.org/10.1016/j.parco.2009.12.005" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_EZBzdY2" coord="23,97.77,477.55,53.07,7.54">Parallel Comput</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="232" to="240" />
			<date type="published" when="2010-06">2010. June 2010</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Stanimire Tomov, Jack Dongarra, and Marc Baboulin. 2010. Towards dense linear algebra for hybrid GPU accelerated manycore systems. Parallel Comput. 36, 5-6 (June 2010), 232ś240. https://doi.org/10.1016/j.parco.2009.12.005</note>
</biblStruct>

<biblStruct coords="23,97.77,487.29,434.88,7.76;23,97.77,497.25,434.76,7.76;23,97.77,507.21,123.28,7.76" xml:id="b73">
	<analytic>
		<title level="a" type="main" coord="23,456.07,487.29,76.58,7.76;23,97.77,497.25,263.31,7.76" xml:id="_Jv9RAbd">Evaluation of Implicit-Explicit Additive Runge-Kutta Integrators for the HOMME-NH Dynamical Core</title>
		<author>
			<persName coords=""><forename type="first">Christopher</forename><forename type="middle">J</forename><surname>Vogl</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Andrew</forename><surname>Steyer</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Paul</forename><forename type="middle">A</forename><surname>Ullrich</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Carol</forename><forename type="middle">S</forename><surname>Woodward</surname></persName>
		</author>
		<idno type="DOI">10.1029/2019MS001700</idno>
		<ptr target="https://doi.org/10.1029/2019MS001700" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_zKCttuX" coord="23,367.54,497.47,78.82,7.54">J. Adv. Model. Earth Syst</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="4228" to="4244" />
			<date type="published" when="2019">2019. 2019</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Christopher J. Vogl, Andrew Steyer, Daniel R. Reynolds, Paul A. Ullrich, and Carol S. Woodward. 2019. Evaluation of Implicit- Explicit Additive Runge-Kutta Integrators for the HOMME-NH Dynamical Core. J. Adv. Model. Earth Syst. 11, 12 (2019), 4228ś4244. https://doi.org/10.1029/2019MS001700</note>
</biblStruct>

<biblStruct coords="23,97.77,517.17,434.76,7.76;23,97.77,527.14,110.58,7.76" xml:id="b74">
	<analytic>
		<title level="a" type="main" coord="23,220.48,517.17,157.18,7.76" xml:id="_v8BtFgT">Anderson acceleration for ixed-point iterations</title>
		<author>
			<persName coords=""><forename type="first">Homer</forename><forename type="middle">F</forename><surname>Walker</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Peng</forename><surname>Ni</surname></persName>
		</author>
		<idno type="DOI">10.1137/10078356X</idno>
		<ptr target="https://doi.org/10.1137/10078356X" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_SFTu57C" coord="23,383.55,517.40,69.65,7.54">SIAM J. Numer. Anal</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="page" from="1715" to="1735" />
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Homer F. Walker and Peng Ni. 2011. Anderson acceleration for ixed-point iterations. SIAM J. Numer. Anal. 49, 4 (2011), 1715ś1735. https://doi.org/10.1137/10078356X</note>
</biblStruct>

<biblStruct coords="23,97.77,537.10,380.02,7.76" xml:id="b75">
	<monogr>
		<author>
			<persName coords=""><forename type="first">Wolfram</forename></persName>
		</author>
		<ptr target="https://reference.wolfram.com/language/tutorial/NDSolveIDAMethod.html" />
		<title level="m" xml:id="_eADENnN" coord="23,149.40,537.32,76.23,7.54">IDA Method for NDSolve</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Wolfram. 2020. IDA Method for NDSolve. https://reference.wolfram.com/language/tutorial/NDSolveIDAMethod.html</note>
</biblStruct>

<biblStruct coords="23,97.77,547.06,433.68,7.76;23,97.77,557.02,413.17,7.76" xml:id="b76">
	<analytic>
		<title level="a" type="main" coord="23,352.56,547.06,178.89,7.76;23,97.77,557.02,81.57,7.76" xml:id="_4DuqByY">AMReX: Block-structured adaptive mesh reinement for multiphysics applications</title>
		<author>
			<persName coords=""><forename type="first">Weiqun</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Andrew</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Kevin</forename><surname>Gott</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">Ann</forename><surname>Almgren</surname></persName>
		</author>
		<author>
			<persName coords=""><forename type="first">John</forename><surname>Bell</surname></persName>
		</author>
		<idno type="DOI">10.1177/10943420211022811</idno>
		<ptr target="https://doi.org/10.1177/10943420211022811" />
	</analytic>
	<monogr>
		<title level="j" xml:id="_VKVTBCp" coord="23,185.37,557.25,111.51,7.54">Int. J. High Perform. Comput. Appl</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="508" to="526" />
			<date type="published" when="2021">2021. 2021</date>
		</imprint>
	</monogr>
	<note type="raw_reference">Weiqun Zhang, Andrew Myers, Kevin Gott, Ann Almgren, and John Bell. 2021. AMReX: Block-structured adaptive mesh reinement for multiphysics applications. Int. J. High Perform. Comput. Appl. 35, 6 (2021), 508ś526. https://doi.org/10.1177/10943420211022811</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
